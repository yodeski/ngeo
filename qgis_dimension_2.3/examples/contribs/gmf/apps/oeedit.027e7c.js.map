{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./src/rule/Rule.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/utils.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/decorate.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./src/misc/debounce.js","webpack:///./src/statemanager/Location.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/print/Utils.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/oeedit/Controller.js","webpack:///./contribs/gmf/apps/oeedit/contextualdata.html","webpack:///./contribs/gmf/src/objectediting/component.html","webpack:///./contribs/gmf/src/objectediting/toolsComponent.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","assert","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","service","options","_classCallCheck","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","key","_createClass","time","range","lower","upper","end","start","active","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","toolContext","activePropertyName","getActive","setActive","newVal","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","stroke","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","radius","fill","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","line","getRadiusLine","getFormattedLength","geometry","angle","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","points","innerMultiCoordinates","multiCoordinates","coordinates","getCoordinates","concat","supported","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","export_","fileName","opt_mimeType","mimeType","clones","clone","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","appendPoint","appendLineString","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","opt_customOptions","FORMAT","LAYERS","olServerType","replace","assign","serverType","crossOrigin","source","updateParams","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","preload","read","updateDimensions","setSource","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","sublayers","sublayer","getFlatLayers_","computedOpacity","getOpacity","getLayerByName","found","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","round","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","useSpatialIndex","layer_","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","init","setMap","defaultFunction","resolution","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","dataSource_","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","c2","point","opt_template","dragging","helpMsg","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","$","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this9","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","$applyAsync","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","scope_","registerTool","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","field","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","btnGroupComponent_","$parse","restrict","link","scope","attrs","buttons_","buttonModel","newValue","directive","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","run","$templateCache","put","component_","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","modify_","modifyToolActivate","menu_","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","getFeaturesCollection","deleteCondition","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","handleFeatureAdd_","handleMapSelectActiveChange_","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","refresh","close","checkForModifications_","scopeApply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","mask","geomAttr","getGeometryAttribute","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","hitTolerance","buffer","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","open","preventDefault","stopPropagation","_this10","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","gmfLayersUrl","http_","baseUrl_","layerIds","bbox","getFeaturesWithComparisonFilters","filters","layerId","geoJSON","post","headers","Content-Type","writeFeature","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","hash","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","keyRegexp","match","localStorage","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","setGeometryType","setAttributeByXsdType_","enumerations","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Querent","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","extend","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","centerFeatures_","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","getGeometryCenterPoint_","centerFeature","keyCode","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","getDefaultModifyStyleFunction","handleDown_","handleDragEvent","handleDrag_","handleUp_","getCenterCoordinate_","willModifyFeatures_","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","getScale","opt_rotation","frameState","viewState","viewportWidth","pixelRatio","viewportHeight","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","fillStyle","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","y1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","max","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","defs","setExtent","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","br","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","handleDimensionsChange_","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","dimensions_filters","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","_source$updateParams","Tile","layersList","hasFilter","dsLayer","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","filter_","interaction_","handleDrawEnd_","toMulti","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","promises_","handleGetAttributes_","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4__WEBPACK_IMPORTED_MODULE_0__","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","encodeStyles","propertiesType","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","responses","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","OpenLayersLayerProperties","regexp","key1","key2","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","mapViewConfig","mapPixelRatio","controls","mapControls","getElementById","zoomInTipLabel","zoomOutTipLabel","tipLabel","mapInteractions","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","editFeatureActivate","googleStreetViewActivate","scaleSelectorOptions","profileLine","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","module_exports","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","MultiLineString","MultiPoint","MultiPolygon","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","EditFeature","XSDAttributes","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","featureStyleProp","styleId","encodeVectorStyle","geoJson","styleObject","symbolizers","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeOpacity","strokeDashstyle","getLineDash","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","getOpacityOrInherited_","useNativeAngle","href","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","importdatasourceComponent","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","optionsLegendType","optionsType","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","gmfLegendOptions_","useBbox","legend","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","icons","getMetadataLegendImage_","serverType_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","gmfSyncLayertreeMap_","groupNodeStates_","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","coordinate_exports","toXY","nesting","objectediting_coordinate","geom_exports","isEmpty","SimpleGeometry","objectediting_geom","Query_exports","getQueryableLayerNodesDefered_","getQueryableLayersInfo","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","k","kk","getFeatureInfo","layerInfo","infoFormat","layersParam","WMSGetFeatureInfo","QUERY_LAYERS","Query","getWMSFeatureComponent_exports","gmfObjectEditingQuery","gmfObjectEditingQuery_","getWMSFeatureComponent","DrawRegularPolygonFromClick_exports","angle_","radius_","sides_","sides","enable_","disable_","fromCircle","makeRegular","DrawRegularPolygonFromClick","createregularpolygonfromclickComponent_exports","interactionListenerKey_","createregularpolygonfromclickComponent","toolsComponent_exports","createfeatureComponent","copyFromActive","deleteFromActive","process","queryableLayerInfo","requiresLayer","geomTypePolygon","toolActiveNames_","registerTool_","ProcessType","ADD","eraseActive","DELETE","drawTriangleActive","triangleAngle","oeToolsOptions","triangleRadius","regularPolygonRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","NAMESPACE_","toolActivate","toolsComponent","jsts","io","OL3Parser","gmfObjecteditingTemplateUrl","layerNodeId","selectedQueryableLayerInfo","queryableLayerListShown","featureHasGeom","skipGeometryChange_","jstsOL3Parser_","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","modifyToolActivate_","toolsToolActivate_","handleGetQueryableLayersInfo_","UPDATE","INSERT","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","resetGeometryChanges_","handleDeleteFeature_","undo","cloneGeometry_","isStateInsert","refreshWMSLayer_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","jstsBuffered","write","opt_incVertice","incVertice","rgbaColor","style_Circle","modifyActive","returnValue","sketchGeom","jstsGeom","jstsSketchGeom","jstsProcessedGeom","union","intersects","difference","processedGeom","layersInfo","getFeatureDefered_","GEOM_TYPE","ID","PROPERTY","THEME","getGeomType","getLayerNodeId","Location","objectediting_module","epsg2056def","somerc","lib","proj4","oeEditActive","AbstractDesktopController","resolutions","oeEditToolActivate","gmfObjectEditingManager","oeGeomType","oeLayerNodeId","searchCoordinatesProjections","scaleSelectorValues","elevationLayers","profileLinesconfiguration","aster","srtm","mousePositionProjections","raven_default","addPlugin","angular_default","install"],"mappings":"aACA,SAAAA,EAAAC,GAOA,IANA,IAKAC,EAAAC,EALAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAGAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAIA,IADAe,KAAAhB,GACAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GACAI,cAAA,EACAC,YAAA,EACAC,IAAAL,KAMAX,EAAAiB,EAAA,SAAAb,GACApB,OAAA6B,eAAAT,EAAA,cAAiDc,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAd,GACA,IAAAM,EAAAN,KAAAe,WACA,WAA2B,OAAAf,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAS,EAAAC,GAAsD,OAAAtC,OAAAC,UAAAC,eAAAC,KAAAkC,EAAAC,IAGtDtB,EAAAuB,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAzC,KAAA4C,KAAAH,GACAA,EAAAzC,KAAAX,EACAoD,IAAAI,QACA,QAAAjD,EAAA,EAAgBA,EAAA6C,EAAA3C,OAAuBF,IAAAP,EAAAoD,EAAA7C,IACvC,IAAAU,EAAAqC,EAIAnC,EAAAR,MAAA,QAEAU,oCCrIA,IAAMW,GAENA,OAAiB,SAASyB,EAAWC,EAAaC,GAChD,OAAOF,GAGTzB,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,eAAyB,SAASc,EAAOY,EAAaC,GACpD,OAAOb,GAGTd,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,YAAsB,SAASc,EAAOY,EAAaC,GACjD,OAAOb,GAGTd,cAAwB,SAASc,EAAOY,EAAaC,GACnD,OAAOb,GAGTd,cAAwB,SAASc,EAAOY,EAAaC,GACnD,OAAOb,GAGTd,iBAA2B,SAASc,EAAOc,EAAMF,EAAaC,GAC5D,OAAOb,GAGTd,8BAAwC,cAEzB6B,EAAA,+CCgBAA,EAAA,GA5CbC,OAAQ,SAKRC,YAAa,aAKbC,kBAAmB,kBAKnBC,YAAa,aAKbC,cAAe,eAKfC,MAAO,QAKPC,QAAS,UAKTC,UAAW,YAKXC,KAAM,wCCmBOT,EAAA,GA3DbU,MAAO,IAKPC,MAAO,IAKPC,UAAW,IAKXC,aAAc,IAKdC,QAAS,IAKTC,KAAM,IAKNC,WAAY,IAKZC,QAAS,IAKTC,OAAQ,IAKRC,aAAc,IAKdC,KAAM,IAKNC,OAAQ,2CCxBKrB,EAAA,GAhCbsB,QAAS,UAITC,KAAM,OAINC,SAAU,WAIVC,KAAM,OAINC,SAAU,WAIVC,OAAQ,SAIRC,OAAQ,SAIRnB,KAAM,wCCvCR,IAAAoB,EAAA9D,EAAA,GAAA+D,EAAA/D,EAAA,IAAAgE,EAAAhE,EAAA,GAAAiE,EAAAjE,EAAA,GAAAkE,EAAAlE,EAAA,IAAAmE,EAAAnE,EAAA,IAAAoE,EAAApE,EAAA,KA6BMI,EAAU,SAASiE,EAAOC,EAAWC,EAAIC,EAAiBC,EAAgBC,GAE9EP,EAAA,EAAoBhF,KAAKwF,MAMzBA,KAAKC,0BAA2B,OACiBC,IAA7CH,EAAiBI,0BACnBH,KAAKC,yBAA2BF,EAAiBI,yBAOnDH,KAAKI,IAAMR,EAMXI,KAAKK,OAASX,EAMdM,KAAKM,cAAWJ,EACZP,EAAUY,IAAI,gBAChBP,KAAKM,SAAWX,EAAUtD,IAAI,eAGhC2D,KAAKQ,cAAgB,IACjBb,EAAUY,IAAI,kBAChBP,KAAKQ,cAAgBb,EAAUtD,IAAI,iBAOrC2D,KAAKS,cAAgB,KACjBd,EAAUY,IAAI,kBAChBP,KAAKS,cAAgBd,EAAUtD,IAAI,iBAOrC2D,KAAKU,aAAeb,EAMpBG,KAAKF,eAAiBA,EAMtBE,KAAKW,UAAYf,EAAGgB,QAMpBZ,KAAKa,SAAWb,KAAKW,UAAUG,QAK/Bd,KAAKe,QAAS,EAMdf,KAAKgB,gBAAkB,4LAGzB3B,EAAA,EAAgB5D,EAAS+D,EAAA,GAQzB/D,EAAQwF,yBAA2B,SAASC,EAAQnF,GAClD,IAAK,IAAI/B,EAAI,EAAGmH,EAAKD,EAAOhH,OAAQF,EAAImH,EAAInH,IAE1C,IADA,IAAMoH,EAAQF,EAAOlH,GACZkB,EAAI,EAAGmG,EAAKD,EAAME,SAASpH,OAAQgB,EAAImG,EAAInG,IAAK,CACvD,IAAMqG,EAAQH,EAAME,SAASpG,GACvBsG,KAEN,GADA/F,EAAQgG,aAAaF,EAAOC,GACxB/F,EAAQiG,iBAAiBF,EAAYzF,GACvC,OAAOwF,EAIb,OAAO,MAST9F,EAAQkG,gBAAkB,SAAST,EAAQnF,GACzC,IAAK,IAAI/B,EAAI,EAAGmH,EAAKD,EAAOhH,OAAQF,EAAImH,EAAInH,IAE1C,IADA,IAAMoH,EAAQF,EAAOlH,GACZkB,EAAI,EAAGmG,EAAKD,EAAME,SAASpH,OAAQgB,EAAImG,EAAInG,IAAK,CACvD,IAAMqG,EAAQH,EAAME,SAASpG,GACvB0G,KAEN,GADAnG,EAAQoG,qBAAqBN,EAAOK,GAChCnG,EAAQiG,iBAAiBE,EAAe7F,GAC1C,OAAOwF,EAIb,OAAO,MAWT9F,EAAQiG,iBAAmB,SAASI,EAASC,GAC3C,OAAOzC,EAAA,EAAawC,EAAS,SAAApF,GAAA,OAAUA,EAAA,OAAmBqF,KAU5DtG,EAAQuG,gBAAkB,SAASd,EAAQe,GACzC,OAAOxG,EAAQiG,iBAAiBR,EAAQe,IAW1CxG,EAAQoG,qBAAuB,SAASK,EAAMC,GAC5C,IAAMb,EAAWY,EAAKZ,SACtB,QAAiBpB,IAAboB,EAAwB,CAC1Ba,EAAM/H,KAAK8H,GACX,IAAK,IAAIlI,EAAI,EAAGA,EAAIsH,EAASpH,OAAQF,IACnCyB,EAAQoG,qBAAqBP,EAAStH,GAAImI,KAYhD1G,EAAQgG,aAAe,SAASS,EAAMC,GACpC,IAAInI,SACEsH,EAAWY,EAAKZ,SACtB,QAAiBpB,IAAboB,EACF,IAAKtH,EAAI,EAAGA,EAAIsH,EAASpH,OAAQF,IAC/ByB,EAAQgG,aAAaH,EAAStH,GAAImI,QAGpCA,EAAM/H,KAAK8H,IASfzG,EAAQnB,UAAU8H,YAAc,WAAW,IAAAC,EAAArC,KACnCF,EAAiBE,KAAKF,eAC5B,GAAIE,KAAKgB,gBACP,OAAOhB,KAAKgB,gBAEd,IAAMpB,EAAKI,KAAKI,IACVkC,EAActC,KAAKU,aAmBnB6B,EAAW,SAASC,EAAMC,GAC9BA,EAAMC,IAAI,QAASF,EAAKzG,MACxB0G,EAAMC,IAAI,WAAYF,EAAKG,UAC3BF,EAAMC,IAAI,aAAcF,EAAKI,YAC7B,IAAMC,KAGN,OApBa,SAATC,EAAkBN,EAAMO,GAC5BA,EAAM3I,KAAKiF,EAAA,EAAcmD,KACRA,EAAKlB,cACb0B,QAAQ,SAACC,GAChBH,EAAOG,EAAOF,KAchBD,CAAON,EAAMK,GACbJ,EAAMC,IAAI,iBAAkBG,GACrBJ,GAQHS,EAAuB,SAASC,EAAYC,GAChD,GAAsB,SAAlBA,EAAS/F,KAAiB,CAC5B,IAAMgG,EAAoDD,EAE1D,OADAjE,EAAA,EAAYmE,OAAOD,EAAaE,IAAK,yBAC9BjB,EAAYkB,iCACjBH,EAAaE,IACbF,EAAaZ,OAAS,GACtBY,EAAaI,UACbL,EAASR,WACTS,EAAaV,SAASe,yBACtBC,KAAKpB,EAASvF,KAAK,KAAMoG,IAAWO,KAAK,KAAM,SAACC,GAChD,IAAIC,4BAAoCR,EAAaZ,MAAjD,4BAAkFY,EAAaE,IAA/F,KAIJ,OAHAM,2BAAmCD,EAAA,QACnCE,QAAQC,MAAMF,GAEPjE,EAAGoE,aAAQ9D,KAEf,GAAsB,QAAlBkD,EAAS/F,KAAgB,CAClC,IAAM4G,EAAkDb,EACxDjE,EAAA,EAAYmE,OAAOW,EAAYC,UAAW,6BAC1C,IAAMC,EAAShB,EAAWc,EAAYC,WAItC,OAHA/E,EAAA,EAAYmE,OAAOa,EAAQ,gCAC3BhF,EAAA,EAAYmE,OAAOa,EAAOZ,IAAK,8BAC/BpE,EAAA,EAAYmE,OAAOa,EAAOC,UAAW,qCAC9B7B,EAASa,EAAUd,EAAY+B,oBACpCF,EAAOZ,IACPU,EAAYK,QAAU,GACtBH,EAAOC,UACPD,EAAO9G,UACP6C,EACAkD,EAASR,WACTuB,EAAOI,WAAa,kBAAoB,YACxCN,EAAYtB,SAASe,0BAGzBvE,EAAA,EAAYqF,KAAZ,qBAAsCpB,EAAS/F,OA6B3CoH,EAAmB,SAAS/K,GAChC,IAAMgL,EAAWhL,EAAKiL,kBAAkBC,IAAI,SAACpC,GAC3C,IAAMqC,EAAWrC,EAAKnF,KACtB,MAAiB,SAAbwH,GAAoC,QAAbA,EAClB3B,EAAqBxJ,EAAKyJ,WAAYX,GACpCA,EAAKlB,SA1BS,SAAS6B,EAAYX,GAEhD,IACMkC,EADkBlC,EAAKlB,SAASsD,IAAI,SAAAE,GAAA,OAAKA,IAAGC,UACjBH,IAAI1B,EAAqBlG,KAAK,KAAMmG,IACrE,OAAOvD,EAAGoF,IAAIN,GAAUf,KAAK,SAACW,GAC5B,IAAIW,SACAX,IACFA,EAASA,EAAOY,OAAO,SAAAvJ,GAAA,OAAKA,IAC5BsJ,EAAa,IAAI1F,EAAA,EAAa+E,IAEhC,IAAM/C,EAAQe,EAAY6C,iBAAiBF,GAE3C,OADA1C,EAASC,EAAMjB,GACRA,IAgBE6D,CAAqB1L,EAAKyJ,WAAYX,QAE7C,GAEDxC,MACH,OAAOJ,EAAGoF,IAAIN,IACd1H,KAAKgD,MAwBP,OAtBAA,KAAKgB,gBAAkBhB,KAAKa,SAAS8C,KAAKc,GAAkBd,KAAK,SAAC0B,GAChE,IAAMf,KAkBN,OAfIjC,EAAKpC,2BAEPH,EAAewF,UAAU,SACzBhB,EAAOlK,KAAK,IAAIqF,EAAA,GACd8F,MAAS,QACT5C,UAAa6C,UAAa,QAK9BH,EAAOrC,QAAQ,SAACP,GACVA,GACF6B,EAAOlK,KAAKqI,KAGT6B,IAGFtE,KAAKgB,iBAUdvF,EAAQnB,UAAUmL,eAAiB,SAASxD,GAC1C,OAAOjC,KAAKa,SAAS8C,KAOnB,SAAAjK,GAAA,OAAQ+B,EAAQuG,gBAAgBtI,EAAKwH,OAAQe,MASjDxG,EAAQnB,UAAUoL,gBAAkB,WAClC,OAAO1F,KAAKa,SAAS8C,KAMnB,SAAAjK,GAAA,OAAQA,EAAKwH,UAQjBzF,EAAQnB,UAAUqL,0BAA4B,WAE5C,OADAxG,EAAA,EAAYmE,OAAyB,OAAlBtD,KAAKa,UACjBb,KAAKa,SAAS8C,KAMnB,SAAAjK,GAAA,OAAQA,EAAKiL,qBAUjBlJ,EAAQnB,UAAUsL,oBAAsB,WAEtC,OADAzG,EAAA,EAAYmE,OAAyB,OAAlBtD,KAAKa,UACjBb,KAAKa,SAAS8C,KAMnB,SAAAjK,GAAA,OAAQA,EAAKyJ,cAQjB1H,EAAQnB,UAAUuL,kBAAoB,WAEpC,OADA1G,EAAA,EAAYmE,OAAyB,OAAlBtD,KAAKa,UACjBb,KAAKa,SAAS8C,KAAK3D,KAAK8F,mBAAmB9I,KAAKgD,QASzDvE,EAAQnB,UAAUwL,mBAAqB,SAASpM,GAAM,IAAAqM,EAAA/F,KACpD,OAAOtG,EAAKwH,OAAO8E,KAAK,SAAC5E,GAEvB,OAD0BA,EAAME,SAAS0E,KAAKD,EAAKE,uBAAuBjJ,KAA5B+I,OAUlDtK,EAAQnB,UAAU2L,uBAAyB,SAAS/D,GAClD,GAAIA,EAAKgE,SACP,OAAO,EAGT,IAAIL,GAAoB,EAClBvE,EAAWY,EAAKZ,SAItB,OAHIA,GAAYA,EAASpH,SACvB2L,EAAoBvE,EAAS0E,KAAKhG,KAAKiG,uBAAuBjJ,KAAKgD,QAE9D6F,GAUTpK,EAAQ0K,kBAAoB,SAASjE,GAGnC,OAFgBA,EAAKS,eAA6CzC,IAAjCgC,EAAKS,SAASyD,eAC7ClE,EAAKS,SAASyD,eAAiB,MAcnC3K,EAAQ4K,qBAAuB,SAASjD,GACtC,IAAMT,EAAWS,EAAST,SACtB2D,EAAgBlD,EAASmD,kBAI7B,YAHsBrG,IAAlBoG,QAA4CpG,IAAbyC,IACjC2D,EAAgB3D,EAAS2D,eAEpBA,GAaT7K,EAAQ+K,qBAAuB,SAASpD,GACtC,IAAMT,EAAWS,EAAST,SACtB8D,EAAgBrD,EAASsD,kBAI7B,YAHsBxG,IAAlBuG,QAA4CvG,IAAbyC,IACjC8D,EAAgB9D,EAAS8D,eAEpBA,GASThL,EAAQnB,UAAUqM,WAAa,SAASC,GAAY,IAAAC,EAAA7G,KAElDb,EAAA,EAAYmE,OAAOtD,KAAKM,SAAU,iCAE9BN,KAAKe,SAEPf,KAAKW,UAAYX,KAAKI,IAAIQ,QAC1BZ,KAAKa,SAAWb,KAAKW,UAAUG,QAC/Bd,KAAKgB,gBAAkB,KACvBhB,KAAKe,QAAS,GAGhBf,KAAKK,OAAOhE,IAAI2D,KAAKM,UACnBwG,YAAuB5G,IAAf0G,GACNG,KAAQH,EACRI,cAAiBhH,KAAKQ,gBAEtBwG,cAAiBhH,KAAKQ,eAExByG,OAAO,EACPC,iBAAiB,IAChBvD,KAAK,SAACC,GACP,GAAmC,GAA/BA,EAASlK,KAAKyN,OAAOjN,OAAa,CACpC,IAAM2J,sCACJD,EAASlK,KAAKyN,OAAOC,KAAK,MAC5BtD,QAAQC,MAAMF,GACa,OAAvBgD,EAAKpG,eAA0BoG,EAAKpG,cAAc4G,SAAS,UAC7DvK,OAAOwK,MAAMzD,GAGjBgD,EAAKlG,UAAUqD,QAAQJ,EAASlK,MAChCmN,EAAKU,cAAc,UACnBV,EAAK9F,QAAS,GACb,SAAC6C,GACFiD,EAAKlG,UAAU6G,OAAO5D,MAQ1BnI,EAAQgM,UACNC,YAAa,aACbC,gBAAiB,gBACjBC,KAAM,OACNC,IAAK,QAOPpM,EAAQC,OAASoM,QAAQpM,OAAO,aAC9B0D,EAAA,EAAmB1D,OAAOK,QAEbQ,MAAM,uBACrBd,EAAQC,OAAOqM,QAAQ,YAAatM,GAGrB6B,EAAA,qWCjkBf,IAAM7B,cAiBJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAAA,IAAA4G,mKAAA6F,CAAAlI,KAEnBmI,EAAA3N,KAAAwF,KAAMgI,IASN3F,EAAK+F,kBAAoBJ,EAAQK,kBAAoB,KAOrDhG,EAAKiG,yBAA2BN,EAAQO,yBAA2B,KAOnElG,EAAKmG,iBAAmBR,EAAQS,iBAAmBC,EAAA,EAAoBC,IAQvEtG,EAAKuG,aAAeZ,EAAQa,aAAe,KAU3CxG,EAAKyG,WAAad,EAAQe,WAAa,KAWvC1G,EAAK2G,WAAiC,IAArBhB,EAAQiB,SAOzB5G,EAAK6G,YAAclB,EAAQpF,YAAc,KAOzCP,EAAK8G,cAAgBnB,EAAQoB,cAC3B3N,EAAQ4N,uBAOVhH,EAAKiH,cAAgBtB,EAAQuB,cAAgB,YAS7ClH,EAAKmH,WAAaxB,EAAQyB,WAAa,KAOvCpH,EAAKqH,eAAiB1B,EAAQ2B,eAC5BlO,EAAQmO,WAAWC,UAOrBxH,EAAKyH,SAAW9B,EAAQ+B,SAAWtO,EAAQuO,KAAKnC,IAShDxF,EAAK4H,YAAmC,IAAtBjC,EAAQkC,UAS1B7H,EAAK8H,kBAA+C,IAA5BnC,EAAQoC,gBAShC/H,EAAKgI,oBAAmD,IAA9BrC,EAAQsC,kBAOlCjI,EAAKkI,wBAAmDrK,IAA9B8H,EAAQwC,kBAChCxC,EAAQwC,kBAAoB,GAO9BnI,EAAKoI,mBAAqBzC,EAAQ0C,kBAMlCrI,EAAKsI,gBAAkB3C,EAAQ4C,eAM/BvI,EAAKwI,mBAAyC3K,IAAzB8H,EAAQ8C,aAC3B9C,EAAQ8C,aAAe,KAMzBzI,EAAK0I,gBAAkB/C,EAAQgD,eAO/B3I,EAAK4I,cAAgBjD,EAAQkD,cAC3BzP,EAAQ0P,aAAa9I,EAAKqH,gBAO5BrH,EAAK+I,kBAAoBpD,EAAQqD,kBAC/B5P,EAAQ6P,iBAAiBC,QAO3BlJ,EAAKmJ,iBAAmBxD,EAAQyD,iBAC9BhQ,EAAQiQ,gBAAgBC,KAO1BtJ,EAAKuJ,QAAU5D,EAAQ6D,OAOvBxJ,EAAKyJ,eAAiB9D,EAAQ+D,eAC5BtQ,EAAQuQ,cAAcC,IAQxB5J,EAAK6J,kBAA+C,IAA5BlE,EAAQmE,gBAOhC9J,EAAK+J,QAAUpE,EAAQqE,OAOvBhK,EAAKiK,WAAatE,EAAQuE,UAO1BlK,EAAKmK,SAAWxE,EAAQyE,QAMxB,IAAMnI,KACN,GAAIjC,EAAKqK,WAAarK,EAAKoH,UACzB,KAAAkD,EAAuBtK,EAAKoH,UAA5BmD,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAuC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA5B8Q,EAA4BH,EACjCG,EAASX,WACXpI,EAAOlK,KAAKiT,EAAStR,OAK3B,IAAIuR,EAAY,KAChB,GAAIjL,EAAKkL,aAAejJ,EAAOpK,OAAQ,CACrC,IAAIsT,OAAStN,EACTmC,EAAKmJ,mBAAqB/P,EAAQiQ,gBAAgBC,KACpD6B,EAAS,IAAIC,EAAA,EACJpL,EAAKmJ,mBAAqB/P,EAAQiQ,gBAAgBgC,OAC3DF,EAAS,IAAIG,EAAA,GAEfxO,EAAA,EAAYmE,OAAOkK,GACnBF,EAAY,IAAIM,EAAA,GACdC,UAAWxL,EAAK6I,aAChB4C,YAAaxJ,EACbyJ,UAAWP,IAQfnL,EAAK2L,WAAaV,EAElB,IAAIW,EAAY,KA1QG,OA2Qf5L,EAAK6L,aAAe5J,EAAOpK,QACzBmI,EAAK0J,gBAAkBtQ,EAAQuQ,cAAcC,MAC/CgC,EAAY,IAAIE,EAAA,GACd7J,YAUNjC,EAAK+L,WAAaH,EAxRC5L,EAjBjB,gUAAAgM,CAAA5S,EAAA0M,GAAA1M,EAAAnB,UA+bJgU,cA/bI,WAgcF,OAAOnG,EAAA7N,UAAMiU,YAhcX9S,EAAAnB,UAscJkU,cAtcI,SAscUD,GACZpG,EAAA7N,UAAMkU,cAANhU,KAAAwF,KAAoBuO,GACpBvO,KAAKyO,qCAxcHhT,EAAAnB,UAkyBJoU,+BAlyBI,SAkyB2BC,GAC7B,OAAO3O,KAAK4O,kBAAoBD,EAAWC,kBACzC5O,KAAKuN,aAAeoB,EAAWpB,aAC/BvN,KAAK0M,WAAaiC,EAAWjC,WAC7B1M,KAAK6L,SAAW8C,EAAW9C,QAC3B7L,KAAK6O,4BAA4BF,IAvyBjClT,EAAAnB,UAizBJwU,+BAjzBI,SAizB2BH,GAC7B,OAAO3O,KAAK+O,kBAAoBJ,EAAWI,kBACzC/O,KAAKkO,aAAeS,EAAWT,aAC/BlO,KAAK0M,WAAaiC,EAAWjC,WAC7B1M,KAAKqM,SAAWsC,EAAWtC,QAC3BrM,KAAK6O,4BAA4BF,IAtzBjClT,EAAAnB,UAi0BJ0U,qBAj0BI,SAi0BiBC,GAA4B,IAAvBC,EAAuBC,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,IAAAA,UAAA,GAC/C,QAAUnP,KAAKoP,wBAAwBH,EAAKC,GAAehV,QAl0BzDuB,EAAAnB,UA80BJ8U,wBA90BI,SA80BoBH,GAA4B,IAAvBC,EAAuBC,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,IAAAA,UAAA,GAE5CE,KAEN,GAAIrP,KAAKyJ,UACP,KAAA6F,EAAuBtP,KAAKyJ,UAA5B8F,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAuC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAA5B8Q,EAA4BoC,EAC/BC,EAASrC,EAAS/G,cAClBqJ,EAAStC,EAAS5G,sBACMvG,IAAXyP,GAAwBV,GAAOU,UACpBzP,IAAXwP,GAAwBT,GAAOS,KAGjCR,IAAiB7B,EAASX,WACzC2C,EAAWjV,KAAKiT,EAAStR,OAK/B,OAAOsT,GAh2BL5T,EAAAnB,UA02BJsV,iBA12BI,WA02BoC,IAAvBV,EAAuBC,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,IAAAA,UAAA,GAEhCE,KAEN,GAAIrP,KAAKyJ,UACP,KAAAoG,EAAuB7P,KAAKyJ,UAA5BqG,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAuC,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAA5B8Q,EAA4B2C,EAChCd,IAAiB7B,EAASX,WAC7B2C,EAAWjV,KAAKiT,EAAStR,OAK/B,OAAOsT,GAt3BL5T,EAAAnB,UA+3BJ2V,yBA/3BI,WAg4BF9Q,EAAA,EAAYmE,OAAOtD,KAAK+I,WACxB,IAAMsG,EAAarP,KAAK4P,mBAExB,OADAzQ,EAAA,EAAYmE,OAA6B,IAAtB+L,EAAWnV,QACvBmV,EAAW,IAn4BhB5T,EAAAnB,UA44BJmU,kCA54BI,WA64BF,IAAIrF,EAAe3N,EAAQ4N,uBAE3B,GAAIrJ,KAAKuO,WACP,KAAA2B,EAAwBlQ,KAAKuO,WAA7B4B,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAAyC,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MAAA,IAA9B+T,EAA8BD,EACvC,GAAIC,EAAUjT,OAASkT,EAAA,EAAwBvR,SAAU,CACvDoK,EAAekH,EAAUvU,KACzB,QAKNiE,KAAKmJ,cAAgBC,GAx5BnB3N,EAAAnB,UAo6BJuU,4BAp6BI,SAo6BwBF,GAC1B,IAAI6B,GAAQ,EAENC,EAAWzQ,KAAK0Q,iBAChBC,EAAYhC,EAAW+B,iBAE7B,IAAK,IAAME,KAAOH,EAChB,GAAIA,EAASG,KAASD,EAAUC,GAAM,CACpCJ,GAAQ,EACR,MAIJ,GAAIA,EACF,IAAK,IAAMI,KAAOD,EAChB,GAAIA,EAAUC,KAASH,EAASG,GAAM,CACpCJ,GAAQ,EACR,MAKN,OAAOA,GA17BLK,EAAApV,IAAAmV,IAAA,aAAAvU,IAAA,WAoTF,OAAO2D,KAAKkJ,eApTV0H,IAAA,mBAAAvU,IAAA,WA4TF,OAAO2D,KAAKoI,mBA5TV1F,IAAA,SAmUiB2F,GACnBrI,KAAKoI,kBAAoBC,KApUvBuI,IAAA,0BAAAvU,IAAA,WA6UF,OAAO2D,KAAKsI,0BA7UV5F,IAAA,SAqVwB6F,GAC1BvI,KAAKsI,yBAA2BC,KAtV9BqI,IAAA,kBAAAvU,IAAA,WA8VF,OAAO2D,KAAKwI,kBA9VV9F,IAAA,SAqWgB+F,GAClBzI,KAAKwI,iBAAmBC,KAtWtBmI,IAAA,cAAAvU,IAAA,WA8WF,OAAO2D,KAAK4I,cA9WVlG,IAAA,SAqXYmG,GACd7I,KAAK4I,aAAeC,KAtXlB+H,IAAA,iBAAAvU,IAAA,WA8XF,OAAO2D,KAAK2K,iBA9XVjI,IAAA,SAqYeoO,GACjB9Q,KAAK2K,gBAAkBmG,KAtYrBF,IAAA,iBAAAvU,IAAA,WA8YF,IAAI0U,EAAQ,KACNC,EAAQhR,KAAK4K,eACbqG,EAAQjR,KAAKgL,eAOnB,YANc9K,IAAV8Q,IACFD,GACEG,IAAKD,EACLE,MAAOH,IAGJD,GAvZLrO,IAAA,SA8ZeqO,GACbA,GACF/Q,KAAKgL,eAAiB+F,EAAMG,IAC5BlR,KAAK4K,eAAiBmG,EAAMI,QAE5BnR,KAAKgL,oBAAiB9K,EACtBF,KAAK4K,oBAAiB1K,MApatB0Q,IAAA,iBAAAvU,IAAA,WA6aF,OAAO2D,KAAK+K,iBA7aVrI,IAAA,SAobeoO,GACjB9Q,KAAK+K,gBAAkB+F,KArbrBF,IAAA,WAAAvU,IAAA,WAgdF,OAAO2D,KAAKgJ,aAhdV4H,IAAA,YAAAvU,IAAA,WAwdF,OAAO2D,KAAK8I,YAxdVpG,IAAA,SA+dUqG,GACZ/I,KAAK8I,WAAaC,KAhehB6H,IAAA,eAAAvU,IAAA,WAweF,OAAO2D,KAAKmJ,iBAxeVyH,IAAA,eAAAvU,IAAA,WAgfF,OAAO2D,KAAKsJ,iBAhfVsH,IAAA,YAAAvU,IAAA,WAwfF,OAAO2D,KAAKwJ,cAxfVoH,IAAA,gBAAAvU,IAAA,WAggBF,OAAO2D,KAAK0J,kBAhgBVkH,IAAA,UAAAvU,IAAA,WAwgBF,OAAO2D,KAAK8J,YAxgBV8G,IAAA,YAAAvU,IAAA,WAghBF,OAAO2D,KAAKiK,cAhhBV2G,IAAA,kBAAAvU,IAAA,WAwhBF,OAAO2D,KAAKmK,oBAxhBVyG,IAAA,oBAAAvU,IAAA,WAgiBF,OAAO2D,KAAKqK,sBAhiBVuG,IAAA,oBAAAvU,IAAA,WAwiBF,OAAO2D,KAAKuK,sBAxiBVqG,IAAA,oBAAAvU,IAAA,WAgjBF,OAAO2D,KAAKyK,sBAhjBVmG,IAAA,eAAAvU,IAAA,WAwjBF,OAAO2D,KAAK6K,iBAxjBV+F,IAAA,eAAAvU,IAAA,WAgkBF,OAAO2D,KAAKiL,iBAhkBV2F,IAAA,mBAAAvU,IAAA,WAwkBF,OAAO2D,KAAKoL,qBAxkBVwF,IAAA,kBAAAvU,IAAA,WAglBF,OAAO2D,KAAKwL,oBAhlBVoF,IAAA,SAAAvU,IAAA,WAwlBF,OAAO2D,KAAK4L,WAxlBVgF,IAAA,gBAAAvU,IAAA,WAgmBF,OAAO2D,KAAK8L,kBAhmBV8E,IAAA,kBAAAvU,IAAA,WAwmBF,OAAO2D,KAAKkM,oBAxmBV0E,IAAA,SAAAvU,IAAA,WAinBF,OAAO2D,KAAKoM,WAjnBVwE,IAAA,YAAAvU,IAAA,WAynBF,OAAO2D,KAAKsM,cAznBVsE,IAAA,UAAAvU,IAAA,WAkoBF,OAAO2D,KAAKwM,YAloBVoE,IAAA,mBAAAvU,IAAA,WA8oBF,IAAM+U,KACAxO,EAAa5C,KAAKkJ,gBAClBmI,EAASrR,KAAKqI,qBAEpB,IAAK,IAAMuI,KAAOS,EACI,OAAhBA,EAAOT,QACe1Q,IAApB0C,EAAWgO,IAA0C,OAApBhO,EAAWgO,KAC9CQ,EAAOR,GAAOhO,EAAWgO,IAG3BQ,EAAOR,GAAOS,EAAOT,GAIzB,OAAOQ,KA5pBLR,IAAA,mBAAAvU,IAAA,WA4qBF,OAA6B,OAAtB2D,KAAK4I,cACc,OAAxB5I,KAAKsR,kBA7qBLV,IAAA,mBAAAvU,IAAA,WA6rBF,OAA6B,OAAtB2D,KAAK4I,cACc,OAAxB5I,KAAKsR,kBA9rBLV,IAAA,YAAAvU,IAAA,WAwsBF,IAAIqQ,GAAY,EAEhB,IAD2B1M,KAAKkO,aAAelO,KAAKuN,cAC1BvN,KAAKyJ,UAC7B,KAAA8H,EAAuBvR,KAAKyJ,UAA5B+H,EAAA3E,MAAAC,QAAAyE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvE,OAAAC,cAAuC,KAAAyE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArX,OAAA,MAAAwX,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApE,QAAAC,KAAA,MAAAsE,EAAAD,EAAAlV,MACrC,IAA2B,IADUmV,EACxBhF,UAAoB,CAC/BA,GAAY,EACZ,QAIN,OAAOA,KAltBLkE,IAAA,cAAAvU,IAAA,WA4tBF,YAAuB6D,IAAhBF,KAAK6L,UA5tBV+E,IAAA,qBAAAvU,IAAA,WA4uBF,OAA2B,OAApB2D,KAAKuO,YACVvO,KAAKuN,aACc,OAAnBvN,KAAKyJ,WACqB,IAA1BzJ,KAAKyJ,UAAUvP,SACiB,IAAhC8F,KAAKyJ,UAAU,GAAGiD,aAhvBlBkE,IAAA,cAAAvU,IAAA,WA2vBF,YAAuB6D,IAAhBF,KAAKqM,UA3vBVuE,IAAA,eAAAvU,IAAA,WAowBF,YAAwB6D,IAAjBF,KAAKyM,WApwBVmE,IAAA,YAAAvU,IAAA,WA4wBF,OAAO2D,KAAKgO,cA5wBV4C,IAAA,YAAAvU,IAAA,WAoxBF,OAAO2D,KAAKoO,eApxBV3S,GAAwBkW,EAAA,GAq8B9BlW,EAAQmW,sBAAwB,SAASrO,GASvC,MANI,UAAUsO,KAAKtO,GACV9H,EAAQuO,KAAKpC,KAEbnM,EAAQuO,KAAKnC,KAYxBpM,EAAQ4N,uBAAyB,WAOjC5N,EAAQmO,YACNkI,UAAW,YACXjI,UAAW,YACXkI,WAAY,cAQdtW,EAAQuO,MACNnC,IAAK,MACLD,KAAM,QAQRnM,EAAQ0P,cACN6G,UAAa,iCACbC,UAAa,yCACbC,WAAc,2BAQhBzW,EAAQ6P,kBACNC,QAAS,WAQX9P,EAAQiQ,iBACNgC,KAAM,OACN/B,KAAM,QAQRlQ,EAAQuQ,eACNC,IAAK,2BAIQ3O,EAAA,ySC5hCf,IAAM7B,aA0BJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAUnBuE,KAAKmS,SAA6B,IAAnBnK,EAAQoJ,OAcvBpR,KAAKoS,gBAAoClS,IAAvB8H,EAAQoK,WACxBpK,EAAQoK,WAAa,KAQvBpS,KAAKqS,oBAA4CnS,IAA3B8H,EAASsK,cAC7BtK,EAAQsK,cAAgB,KAO1BtS,KAAKuS,UAAYvK,EAAQwK,UAAY,KAQrCxS,KAAKyS,oBAA4CvS,IAA3B8H,EAAS0K,cAC7B1K,EAAQ0K,cAAgB,KAU1B1S,KAAK2S,WAAiC,IAArB3K,EAAQ4K,SAOzB5S,KAAK6S,MAAQ7K,EAAQjM,KAOrBiE,KAAK8S,WAAa9K,EAAQ+K,WAAa,KAOvC/S,KAAKgT,cAAgBhL,EAAQiL,aAO7BjT,KAAKkT,MAAQ/T,EAAA,EAAYmE,OAAO0E,EAAQ3K,MASxC2C,KAAKmT,gBA3HH,OAAA1X,EAAAnB,UA2JJ8Y,cA3JI,WA4JF,OAAOpT,KAAKoS,YA5JV3W,EAAAnB,UAmKJ+Y,cAnKI,SAmKUjB,GACZpS,KAAKoS,WAAaA,GApKhB3W,EAAAnB,UAgTJgZ,MAhTI,WAiT2B,OAAzBtT,KAAKoT,iBACPpT,KAAKqT,cAAc,MAEM,OAAvBrT,KAAKsS,gBACPtS,KAAKsS,cAAgB,MAEI,OAAvBtS,KAAK0S,gBACP1S,KAAK0S,cAAgB,OAxTrBjX,EAAAnB,UA+TJiZ,QA/TI,WAgUFvT,KAAKmT,aAAanQ,QAAQwQ,EAAA,GAC1BxT,KAAKmT,aAAajZ,OAAS,GAjUzB2W,EAAApV,IAAAmV,IAAA,SAAAvU,IAAA,WAsIF,OAAO2D,KAAKmS,SAtIVzP,IAAA,SA6IO0O,GACTpR,KAAKmS,QAAUf,KA9IbR,IAAA,gBAAAvU,IAAA,WA4KF,OAAO2D,KAAKqS,gBA5KV3P,IAAA,SAmLc4P,GAChBtS,KAAKqS,eAAiBC,KApLpB1B,IAAA,WAAAvU,IAAA,WA4LF,OAAO2D,KAAKuS,WA5LV7P,IAAA,SAmMS8P,GACXxS,KAAKuS,UAAYC,KApMf5B,IAAA,gBAAAvU,IAAA,WA4MF,OAAO2D,KAAKyS,gBA5MV/P,IAAA,SAmNcgQ,GAChB1S,KAAKyS,eAAiBC,KApNpB9B,IAAA,WAAAvU,IAAA,WA8NF,OAAO2D,KAAK2S,aA9NV/B,IAAA,OAAAvU,IAAA,WAsOF,OAAO2D,KAAK6S,SAtOVjC,IAAA,YAAAvU,IAAA,WA8OF,OAAO2D,KAAK8S,cA9OVlC,IAAA,eAAAvU,IAAA,WAsPF,OAAO2D,KAAKgT,iBAtPVpC,IAAA,OAAAvU,IAAA,WA8PF,OAAO2D,KAAKkT,SA9PVtC,IAAA,QAAAvU,IAAA,WAwQF,IAAIE,EAAQ,KAEN6V,EAAapS,KAAKoT,gBAClBd,EAAgBtS,KAAKsS,cACrBE,EAAWxS,KAAKwS,SAChBS,EAAejT,KAAKiT,aACpBP,EAAgB1S,KAAK0S,cAwB3B,OAtBIF,IACEA,IAAa/W,EAAQgY,aAAaC,SAClClB,IAAa/W,EAAQkY,qBAAqBC,OACtB,OAAlBtB,GAA4C,OAAlBI,IAC5BnW,GACEiW,WACAF,gBACAW,eACAP,kBAIe,OAAfN,IACF7V,GACE6V,aACAI,WACAS,kBAMD1W,MAtSLd,KA0UNA,EAAQgY,cACNC,QAAS,KACTG,SAAU,IACVC,aAAc,IACdC,yBAA0B,KAC1BC,YAAa,IACbC,wBAAyB,KACzBC,KAAM,IACNC,aAAc,MAOhB1Y,EAAQ2Y,qBACNC,SAAU,WACVC,WAAY,aACZC,OAAQ,UAOV9Y,EAAQkY,sBACNa,OAAQ,aACRZ,OAAQ,cACRa,KAAM,WACNC,OAAQ,cAIKpX,EAAA,sCCjXf,IAAM7B,GAWNA,oBAA8B,OAM9BA,wBAAkC,WAMlCA,uBAAiC,0BAMjCA,gBACEkZ,SAAU,gBACVC,2BAA4B,QAC5BC,0BAA2B,QAC3BC,SAAU,cACVC,cAAe,gBACfC,YAAa,cACbC,MAAO,QACPC,MAAO,QACPC,MAAO,WACPC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,kBAAmB,qBAINjY,EAAA,kCCTAA,EAAA,EAtBC,SAASkY,EAAaC,GAOpCzV,KAAK0V,UAAY,WACf,OAAOF,EAAYC,IAQrBzV,KAAK2V,UAAY,SAASC,GACxBJ,EAAYC,GAAsBG,4CCnCtC,IAAAzW,EAAA9D,EAAA,GAAAwa,EAAAxa,EAAA,KAAAya,EAAAza,EAAA,KAAA0a,EAAA1a,EAAA,IAAA2a,EAAA3a,EAAA,IAAA4a,EAAA5a,EAAA,IAAA6a,EAAA7a,EAAA,KAAA8a,EAAA9a,EAAA,GAAA+a,EAAA/a,EAAA,IAAAgb,EAAAhb,EAAA,GAAAib,EAAAjb,EAAA,IAAAkb,EAAAlb,EAAA,IAAAmb,EAAAnb,EAAA,KAAAob,EAAApb,EAAA,KAAAqb,EAAArb,EAAA,IAAAsb,EAAAtb,EAAA,IAAAub,EAAAvb,EAAA,KAAAwb,EAAAxb,EAAA,KAAAyb,EAAAzb,EAAA,KAAA0b,EAAA1b,EAAA,KAAA2b,EAAA3b,EAAA,IAAA4b,EAAA5b,EAAA,KAAA6b,EAAA7b,EAAA,IAAA8b,EAAA9b,EAAA,IAAA+b,EAAA/b,EAAA,KA8CMI,EAAU,SAASkE,EAAW0X,GAwDlC,GAlDArX,KAAKsX,SAAWD,EAMhBrX,KAAKuX,eAAYrX,EACbP,EAAUY,IAAI,yBAChBP,KAAKuX,UAAY5X,EAAUtD,IAAI,wBAQjC2D,KAAKwX,gBAAatX,EACdP,EAAUY,IAAI,0BAChBP,KAAKwX,WAAa7X,EAAUtD,IAAI,yBAMlC2D,KAAKyX,cAA6CJ,EAAQ,UAK1DrX,KAAK0X,kBAAqDL,EAAQ,kBAKlErX,KAAK2X,uBAAiEN,EAAQ,yBAO9ErX,KAAK4X,eAAiB,KAOtB5X,KAAK6X,oBAEDlY,EAAUY,IAAI,mBAAoB,CACpC,IAAMuX,EAAiBnY,EAAUtD,IAAI,mBAAmB0b,MAAM,KACxDC,EAAaF,EAAend,QAC5BuK,EAASlF,KAAKsX,SAASU,GAC7B7Y,EAAA,EAAY8Y,eAAe/S,GAC3BlF,KAAK4X,eAAiB1S,EACtBlF,KAAK6X,iBAAmBC,OAExB9X,KAAK4X,eAAiB,KAOxB5X,KAAKkY,YAOLlY,KAAKmY,UAAYxY,EAAUtD,IAAI,qFASjCZ,EAAQnB,UAAU8d,cAAgB,SAASC,GACzCrY,KAAKkY,YAAcG,GAerB5c,EAAQnB,UAAUge,SAAW,SAASC,EAASC,GAC7C,IAAMC,EAASzY,KAAK0Y,SAASH,GACzBC,IACExY,KAAK2Y,gBAAgBJ,IACvBE,EAAOre,KAAK4F,KAAK4Y,kBAEnBH,EAAOI,QAAQ7Y,KAAK8Y,cAAcP,KAEpCA,EAAQD,SAASG,IAWnBhd,EAAQnB,UAAUoe,SAAW,SAASH,GACpC,IACIQ,SAEJ,OAHa/Y,KAAKgZ,QAAQT,IAIxB,KAAKvC,EAAA,EAAiBxY,YACpBub,EAAQ/Y,KAAKiZ,oBAAoBV,GACjC,MACF,KAAKvC,EAAA,EAAiBpY,MACpBmb,EAAQ/Y,KAAKkZ,eAAeX,GAC5B,MACF,KAAKvC,EAAA,EAAiBzY,OACtB,KAAKyY,EAAA,EAAiBnY,QACtB,KAAKmY,EAAA,EAAiBlY,UACpBib,EAAQ/Y,KAAKmZ,iBAAiBZ,GAC9B,MACF,KAAKvC,EAAA,EAAiBjY,KACpBgb,EAAQ/Y,KAAKoZ,cAAcb,GAM/BpZ,EAAA,EAAYmE,OAAOyV,EAAO,2BAS1B,OANIA,EAAMM,cAAgBxM,MACyBkM,GAEvCA,IAYdtd,EAAQnB,UAAU2e,oBAAsB,SAASV,GAC/C,IAAMe,EAActZ,KAAKuZ,kBAAkBhB,GACrCiB,EAAYxZ,KAAKyZ,qBAAqBlB,GACtCmB,EAAc1Z,KAAK2Z,uBAAuBpB,GAC1CqB,EAAQ5Z,KAAK6Z,qBAAqBtB,GAElCE,GAAU,IAAItB,EAAA,GAClB2C,OAAQ,IAAI5C,EAAA,GACV0C,MAAOA,EACPG,MAAOT,OAILU,KAON,GANIN,GACFM,EAAgB5f,KAAK4F,KAAKia,WAAW1B,IAEnCiB,GACFQ,EAAgB5f,KAAK4F,KAAKka,gBAAgB3B,IAExCiB,GAAcE,EAAa,CAE7B,IAAMS,EAAiBH,EAAgB5S,KAAK,MAC5CqR,EAAOre,KAAK,IAAI+c,EAAA,GACdiD,KAAMpa,KAAKqa,kBACTD,KAAMD,OAIZ,OAAO1B,GASThd,EAAQnB,UAAU4e,eAAiB,SAASX,GAC1C,IAAM+B,EAAOta,KAAKua,gBAAgBhC,GAC5BqB,EAAQ5Z,KAAK6Z,qBAAqBtB,GAClCiB,EAAYxZ,KAAKyZ,qBAAqBlB,GACtCmB,EAAc1Z,KAAK2Z,uBAAuBpB,GAC1CE,GAAU,IAAItB,EAAA,GAClBqD,MAAO,IAAIzD,EAAA,GACT0D,OAAQH,EACRI,KAAM,IAAI1D,EAAA,GACR4C,MAAOA,SAKPI,KAON,GANIN,GACFM,EAAgB5f,KAAK4F,KAAKia,WAAW1B,IAEnCiB,GACFQ,EAAgB5f,KAAK4F,KAAKka,gBAAgB3B,IAExCiB,GAAcE,EAAa,CAE7B,IAAMS,EAAiBH,EAAgB5S,KAAK,MAI5CqR,EAAOre,KAAK,IAAI+c,EAAA,GACdiD,KAAMpa,KAAKqa,kBACTD,KAAMD,EACNG,KANc,GAOdK,UAAWL,EAAQM,EAAiBZ,EAAgB9f,OALpC,IAK2D,QAIjF,OAAOue,GAWThd,EAAQnB,UAAUugB,UAAY,SAAStC,EAASuC,GAC9C,IAAMve,EAAQgc,EAAQlc,IAAIye,GAC1B,YAAc5a,IAAV3D,EACkB,iBAATA,GACDA,EAED4C,EAAA,EAAY4b,aAAaxe,QAGlC,GAYJd,EAAQnB,UAAU0gB,UAAY,SAASzC,EAASuC,GAC9C,IAAMve,EAAQgc,EAAQlc,IAAIye,GAC1B,MAAoB,iBAATve,GACDA,EAED4C,EAAA,EAAY4b,aAAaxe,IAUpCd,EAAQnB,UAAU6e,iBAAmB,SAASZ,GAC5C,IAAMe,EAActZ,KAAKuZ,kBAAkBhB,GACrC0C,EAAUjb,KAAKkb,mBAAmB3C,GAClCqB,EAAQ5Z,KAAK6Z,qBAAqBtB,GAClCiB,EAAYxZ,KAAKyZ,qBAAqBlB,GACtCmB,EAAc1Z,KAAK2Z,uBAAuBpB,GAG1C4C,EAAYvB,EAAM3c,QACxBke,EAAU,GAAKF,EAEf,IAAMG,EAASpb,KAAK6a,UAAUtC,EAASxC,EAAA,EAA4BvX,QAE7Dia,GAAU,IAAItB,EAAA,GAClBuD,KAAM,IAAI1D,EAAA,GACR4C,MAAOuB,IAETrB,OAAQ,IAAI5C,EAAA,GACV0C,MAAOA,EACPG,MAAOT,OAGX,GAAII,GAAeF,EACjB,GAAIE,QAA0BxZ,IAAXkb,EAAsB,CAEvC,IAAMC,EAAOrb,KAAKsb,cAAc/C,EAAS6C,GACnClhB,EAAS+b,EAAA,EAAuBsF,mBACpCF,EAAMrb,KAAKkY,YAAalY,KAAKwX,WAAYxX,KAAK0X,mBAEhDe,EAAOre,KAAK,IAAI+c,EAAA,GACdqE,SAAUH,EACVX,KAAM,IAAI1D,EAAA,GACR4C,MAAOuB,IAETrB,OAAQ,IAAI5C,EAAA,GACV0C,MAAOA,EACPG,MAAOT,IAETc,KAAMpa,KAAKqa,kBACTD,KAAMlgB,EACNuhB,OAASL,EAAS,IAAO,KAAO,IAAM,QAK1C3C,EAAOre,KAAK,IAAI+c,EAAA,GACdqE,SAAU,IAAI9E,EAAA,EAAY2E,EAAKK,qBAC/BtB,KAAMpa,KAAKqa,kBACTD,KAASpa,KAAKyX,cAAc2D,EAAQpb,KAAKuX,WAAzC,IACA+C,KAAM,GACNqB,QAAmD,GAA1CC,KAAKC,KAAKT,EAAS,IAAMQ,KAAKE,GAAK,KAC5CnB,QAAmD,GAA1CiB,KAAKG,KAAKX,EAAS,IAAMQ,KAAKE,GAAK,UAK5CtC,GACFf,EAAOre,KAAK,IAAI+c,EAAA,GACdiD,KAAMpa,KAAKqa,kBACTD,KAAMpa,KAAKka,gBAAgB3B,GAC3BoC,SAAU,EACVqB,cAAc,WAIf,CAEL,IAAMhC,KAON,GANIN,GACFM,EAAgB5f,KAAK4F,KAAKia,WAAW1B,IAEnCiB,GACFQ,EAAgB5f,KAAK4F,KAAKka,gBAAgB3B,IAExCiB,GAAcE,EAAa,CAE7B,IAAMS,EAAiBH,EAAgB5S,KAAK,MAC5CqR,EAAOre,KAAK,IAAI+c,EAAA,GACdiD,KAAMpa,KAAKqa,kBACTD,KAAMD,EACN6B,cAAc,QAMxB,OAAOvD,GASThd,EAAQnB,UAAU8e,cAAgB,SAASb,GAEzC,OAAO,IAAIpB,EAAA,GACTiD,KAAMpa,KAAKqa,kBACTD,KAAMpa,KAAKka,gBAAgB3B,GAC3B+B,KAAMta,KAAKua,gBAAgBhC,GAC3BkD,MAAOzb,KAAKic,iBAAiB1D,GAC7BqB,MAAO5Z,KAAK6Z,qBAAqBtB,GACjCwB,MAAO/Z,KAAKuZ,kBAAkBhB,QAWpC9c,EAAQnB,UAAU4hB,oBAAsB,SAAS3D,GAE/C,IAAM4D,GAAS,IAAK,IAAK,IAAK,GACxBC,GAAQ,EAAG,IAAK,IAAK,GAErB3D,KAEA4D,EAAO9D,EAAQ+D,cACrBxY,QAAQR,OAAO+Y,GACf,IAAMhf,EAAOgf,EAAKrD,UAsDlB,MApDa,UAAT3b,EACFob,EAAOre,KACL,IAAI+c,EAAA,GACFqD,MAAO,IAAIzD,EAAA,GACT0D,OAAQV,EACRW,KAAM,IAAI1D,EAAA,GACR4C,MAAOwC,IAETtC,OAAQ,IAAI5C,EAAA,GACV0C,MAAOuC,EACPpC,MAAOA,QAGXwC,OAAQC,QAIC,eAATnf,GACFob,EAAOre,KACL,IAAI+c,EAAA,GACF2C,OAAQ,IAAI5C,EAAA,GACV0C,MAAOuC,EACPpC,MAAOA,OAIbtB,EAAOre,KACL,IAAI+c,EAAA,GACF2C,OAAQ,IAAI5C,EAAA,GACV0C,MAAOwC,EACPrC,MArCI,QA0CVtB,EAAOre,KACL,IAAI+c,EAAA,GACF2C,OAAQ,IAAI5C,EAAA,GACV0C,MAAOwC,EACPrC,MAAOA,MAETW,KAAM,IAAI1D,EAAA,GACR4C,OAAQ,IAAK,IAAK,IAAK,SAO/BnB,EAAOre,KAAK4F,KAAK4Y,gBAAe,KAG3BH,GAeThd,EAAQnB,UAAUse,eAAiB,SAAS6D,GAC1C,IAAMC,OAAkCxc,IAApBuc,GAAgCA,EAE9CzU,GACJwS,MAAO,IAAIvD,EAAA,GACTwD,OAAQ,EACRkC,OAAQ,EACRlB,MAAOG,KAAKE,GAAK,EACjBpB,KAAM,IAAI1D,EAAA,GACR4C,OAAQ,IAAK,IAAK,IAAK,MAEzBE,OAAQ,IAAI5C,EAAA,GACV0C,OAAQ,EAAG,EAAG,EAAG,QA4CvB,OAvCI8C,IACF1U,EAAQwT,SAAW,SAASjD,GAC1B,IAAM8D,EAAO9D,EAAQ+D,cAErB,GAAsB,SAAlBD,EAAKrD,UAAT,CAIA,IAAI4D,SACAC,KACAC,KACA9iB,SAAGmH,SAWP,GAVIkb,aAAgB9F,EAAA,EAClBuG,EAAcT,EAAKU,iBACVV,aAAgB7F,EAAA,EACzBqG,EAAmBR,EAAKU,iBACfV,aAAgB1F,EAAA,EACzBmG,EAAcT,EAAKU,iBAAiB,GAC3BV,aAAgBzF,EAAA,IACzBgG,EAAwBP,EAAKU,kBAG3BH,EACF,IAAK5iB,EAAI,EAAGmH,EAAKyb,EAAsB1iB,OAAQF,EAAImH,EAAInH,IACrD6iB,EAAmBA,EAAiBG,OAAOJ,EAAsB5iB,IAGrE,IAAKA,EAAI,EAAGmH,EAAK0b,EAAiB3iB,OAAQF,EAAImH,EAAInH,IAChD8iB,EAAcA,EAAYE,OAAOH,EAAiB7iB,IAGpD,OAAI8iB,EAAY5iB,OACP,IAAIuc,EAAA,EAAiBqG,GAErBT,KAKN,IAAIlF,EAAA,EAAanP,IAS1BvM,EAAQnB,UAAUqe,gBAAkB,SAASJ,GAC3C,IAAM0E,GACJjH,EAAA,EAAiBxY,YACjBwY,EAAA,EAAiBnY,QACjBmY,EAAA,EAAiBlY,WAEbT,EAAO2C,KAAKgZ,QAAQT,GAC1B,OAAOpC,EAAA,EAAiB8G,EAAW5f,IASrC5B,EAAQnB,UAAUwe,cAAgB,SAASP,GACzC,IACIQ,SAGJ,OAJa/Y,KAAKgZ,QAAQT,IAKxB,KAAKvC,EAAA,EAAiBpY,MACpB,IAAM0c,EAAOta,KAAKua,gBAAgBhC,GAClCQ,EAAQ,IAAI5B,EAAA,GACVqD,MAAO,IAAIzD,EAAA,GACT0D,OAAQH,EAPC,EAQTI,KAAM,IAAI1D,EAAA,GACR4C,OAAQ,IAAK,IAAK,IAAK,SAI7B,MACF,KAAK5D,EAAA,EAAiBxY,YACtB,KAAKwY,EAAA,EAAiBzY,OACtB,KAAKyY,EAAA,EAAiBnY,QACtB,KAAKmY,EAAA,EAAiBlY,UACpB,IAAMwb,EAActZ,KAAKuZ,kBAAkBhB,GAC3CQ,EAAQ,IAAI5B,EAAA,GACV2C,OAAQ,IAAI5C,EAAA,GACV0C,OAAQ,IAAK,IAAK,IAAK,GACvBG,MAAOT,EAAc4D,MAGzB,MACF,KAAKlH,EAAA,EAAiBjY,KACpBgb,EAAQ,IAAI5B,EAAA,GACViD,KAAMpa,KAAKqa,kBACTD,KAAMpa,KAAKka,gBAAgB3B,GAC3B+B,KAAMta,KAAKua,gBAAgBhC,GAC3BkD,MAAOzb,KAAKic,iBAAiB1D,GAC7BwB,MAAOmD,MAUf,OAFA/d,EAAA,EAAYmE,OAAOyV,EAAO,2BAEnBA,GAcTtd,EAAQ0hB,yBAA2B,SAAS5E,GAC1C,IAAM6E,EAAa7E,EAAQ8E,gBAI3B,cAHOD,EAAA,iBACAA,EAAW7E,EAAQ+E,0BACnBF,EAAA,mBACAA,GAQT3hB,EAAQnB,UAAU2hB,iBAAmB,SAAS1D,GAC5C,IAAMkD,GACJlD,EAAQlc,IAAI0Z,EAAA,EAA4B/X,OAE1C,OADAmB,EAAA,EAAY4b,aAAaU,GAClBA,GASThgB,EAAQnB,UAAUijB,iBAAmB,SAAShF,GAE5C,IAAMqB,EAAQza,EAAA,EAAYqe,aAAajF,EAAQlc,IAAI0Z,EAAA,EAA4B9X,QAI/E,OAFAkB,EAAA,EAAYqe,aAAa5D,GAElBA,GASTne,EAAQnB,UAAUuf,qBAAuB,SAAStB,GAChD,OAAOnC,EAAA,EAAmBpW,KAAKud,iBAAiBhF,KASlD9c,EAAQnB,UAAU4f,gBAAkB,SAAS3B,GAC3C,IAAMxc,EAAOoD,EAAA,EAAYqe,aAAajF,EAAQlc,IAAI0Z,EAAA,EAA4B1X,OAE9E,OADAc,EAAA,EAAYqe,aAAazhB,GAClBA,GASTN,EAAQnB,UAAU4gB,mBAAqB,SAAS3C,GAC9C,OAAOvY,KAAKgb,UAAUzC,EAASxC,EAAA,EAA4BxX,UAS7D9C,EAAQnB,UAAUqf,uBAAyB,SAASpB,GAClD,IAAImB,EAAcnB,EAAQlc,IAAI0Z,EAAA,EAA4BtX,cAM1D,YALoByB,IAAhBwZ,EACFA,GAAc,EACkB,iBAAhBA,IAChBA,EAA+B,SAAhBA,GAEVva,EAAA,EAAYse,cAAc/D,IAQnCje,EAAQnB,UAAUmf,qBAAuB,SAASlB,GAChD,IAAIiB,EAAYjB,EAAQlc,IAAI0Z,EAAA,EAA4BzX,YAMxD,YALkB4B,IAAdsZ,EACFA,GAAY,EACkB,iBAAdA,IAChBA,EAA2B,SAAdA,GAERra,EAAA,EAAYse,cAAcjE,IAQnC/d,EAAQnB,UAAUigB,gBAAkB,SAAShC,GAC3C,OAAOvY,KAAKgb,UAAUzC,EAASxC,EAAA,EAA4BrX,OAS7DjD,EAAQnB,UAAUif,kBAAoB,SAAShB,GAC7C,OAAOvY,KAAKgb,UAAUzC,EAASxC,EAAA,EAA4BpX,SAc7DlD,EAAQnB,UAAUojB,OAAS,SAASC,EAAUC,GAC5C,OAAQA,GACN,KAAKniB,EAAQoiB,WAAWC,IACtB9d,KAAK+d,UAAUJ,GACf,MACF,KAAKliB,EAAQoiB,WAAWG,IACtBhe,KAAKie,UAAUN,KAcrBliB,EAAQnB,UAAUyjB,UAAY,SAASJ,GACrC,IAAMnQ,EAAS,IAAIqJ,EAAA,EAGnB7W,KAAKke,QAAQP,EAAUnQ,EADN,aADA,wBAYnB/R,EAAQnB,UAAU2jB,UAAY,SAASN,GACrC,IAAMnQ,EAAS,IAAIsJ,EAAA,EAGnB9W,KAAKke,QAAQP,EAAUnQ,EADN,aADA,yCAgBnB/R,EAAQnB,UAAU4jB,QAAU,SAASP,EAAUnQ,EAAQ2Q,EAAUC,GAAc,IAAA/b,EAAArC,KACvEqe,OAA4Bne,IAAjBke,EAA6BA,EAAe,aAIvDE,KACFC,SACJZ,EAAS3a,QAAQ,SAACuV,GAChBgG,EAAQ,IAAIjI,EAAA,EAAUiC,EAAQ8E,iBAC9Bhb,EAAKiW,SAASiG,GAAO,GACrBD,EAAOlkB,KAAKmkB,KAGd,IAAMC,EAAexe,KAAKkY,aACxBuG,eAAgB,YAChBC,kBAAmB1e,KAAKkY,gBAGpBxe,EAAO8T,EAAOmR,cAAcL,EAAQE,GAC1Cxe,KAAKmY,UACHze,EAAMykB,EAAaE,EADrB,mBAaF5iB,EAAQnB,UAAU+f,iBAAmB,SAASrS,GAC5C,GAAIA,EAAQyT,MAAO,CACjB,IACMmD,QAD0B1e,IAAlB8H,EAAQyT,MAAsBzT,EAAQyT,MAAQ,GACnCG,KAAKE,GAAK,IACnC9T,EAAQ4W,SAAWA,SACZ5W,EAAQyT,MAgBjB,OAbAzT,EAAQ6W,MAAQ,UAAa7W,EAAQsS,MAAQ,IAA9B,KAAsC,SAASlT,KAAK,KAE/DY,EAAQ4R,QACV5R,EAAQ0S,KAAO,IAAI1D,EAAA,GAAa4C,MAAO5R,EAAQ4R,QAAU,EAAG,EAAG,EAAG,YAC3D5R,EAAQ4R,OAGjB5R,EAAQ8R,OAAS,IAAI5C,EAAA,GACnB0C,OAAQ,IAAK,IAAK,IAAK,GACvBG,MAAO/R,EAAQ+R,OAAS,WAEnB/R,EAAQ+R,MAER,IAAI3C,EAAA,EAAYpP,IAYzBvM,EAAQnB,UAAU2f,WAAa,SAAS1B,GAEtC,IAAMiD,EAAWjD,EAAQ+D,cACzBnd,EAAA,EAAYmE,OAAOkY,EAAU,6BAE7B,IAAIsD,EAAU,GAEd,GAAItD,aAAoB7E,EAAA,EACtB,GAAI3W,KAAKgZ,QAAQT,KAAavC,EAAA,EAAiBzY,OAAQ,CACrD,IAAM6d,EAASpb,KAAK6a,UAAUtC,EAASxC,EAAA,EAA4BvX,QACnEW,EAAA,EAAY4b,aAAaK,GACzB,IAAMC,EAAOrb,KAAKsb,cAAc/C,EAAS6C,GAEzC0D,EAAU5I,EAAA,EAA6B6I,yBACrC1D,EAAMrb,KAAKkY,YAAalY,KAAKuX,UAAWvX,KAAKwX,WAAYxX,KAAK0X,kBAAmB1X,KAAKyX,oBAExFqH,EAAU7I,EAAA,EAAuB+I,iBAC/BxD,EAAUxb,KAAKkY,YAAalY,KAAKwX,WAAYxX,KAAK0X,wBAEjD,GAAI8D,aAAoBjF,EAAA,EAC7BuI,EAAU7I,EAAA,EAAuBsF,mBAC/BC,EAAUxb,KAAKkY,YAAalY,KAAKwX,WAAYxX,KAAK0X,wBAC/C,GAAI8D,aAAoB9E,EAAA,EAC7B,GAA4B,OAAxB1W,KAAK4X,eACPkH,EAAU7I,EAAA,EAAuBgJ,kBAC/BzD,EAAUxb,KAAKuX,UAAWvX,KAAK2X,4BAC5B,CACL,IAAMmF,EAActB,EAASuB,iBACvBmC,EAAOlf,KAAK6X,iBAAiB5a,MAAM,GACzCiiB,EAAKrG,QAAQiE,GACbgC,EAAU9e,KAAK4X,eAAL/c,MAAAmF,KAAuBkf,GAIrC,OAAOJ,GAWTrjB,EAAQnB,UAAU0e,QAAU,SAAST,GACnC,IAAMiD,EAAWjD,EAAQ+D,cACzBnd,EAAA,EAAYmE,OAAOkY,EAAU,8BAE7B,IAAIne,SA4BJ,OA1BIme,aAAoB9E,EAAA,EAEpBrZ,EADEkb,EAAQlc,IAAI0Z,EAAA,EAA4B3X,SACnC4X,EAAA,EAAiBjY,KAEjBiY,EAAA,EAAiBpY,MAEjB4d,aAAoB/E,EAAA,EAC7BpZ,EAAO2Y,EAAA,EAAiBtY,YACf8d,aAAoB7E,EAAA,EAE3BtZ,EADEkb,EAAQlc,IAAI0Z,EAAA,EAA4B7X,WACnC8X,EAAA,EAAiBzY,OACfgb,EAAQlc,IAAI0Z,EAAA,EAA4B5X,cAC1C6X,EAAA,EAAiBlY,UAEjBkY,EAAA,EAAiBnY,QAEjB2d,aAAoB5E,EAAA,EAC7BvZ,EAAO2Y,EAAA,EAAiBrY,cACf6d,aAAoBjF,EAAA,EAC7BlZ,EAAO2Y,EAAA,EAAiBxY,YACfge,aAAoBhF,EAAA,IAC7BnZ,EAAO2Y,EAAA,EAAiBvY,mBAG1B0B,EAAA,EAAYmE,OAAOjG,EAAM,0BAElBA,GAaT5B,EAAQnB,UAAU6kB,gBAAkB,SAAS5G,EAAS3T,EACpDwa,GAEA,IAAMC,OAAkCnf,IAApBkf,EAAgCA,EAAkB,IAChE9E,EAAO1V,EAAI0a,UACjBngB,EAAA,EAAYogB,YAAYjF,GACxB,IAAMkF,EAAO5a,EAAI6a,UACXC,EAASF,EAAKG,gBAAgBrF,GAC9BkB,EAAWjD,EAAQ+D,cAEzB,IAAKd,EAASoE,iBAAiBF,GAAS,CACtC,IAAMG,EAAYL,EAAKM,YACvB3gB,EAAA,EAAYogB,YAAYM,GAExB,IAAIE,SAEFA,EADEvE,aAAoBjF,EAAA,EACNiF,EAASwE,gBAAgB,IAChCxE,aAAoB7E,EAAA,EACb6E,EAASyE,mBAAmBlD,iBACnCvB,aAAoB9E,EAAA,EACb8E,EAASuB,iBAET1G,EAAA,EAAmBmF,EAAS0E,aAG9CV,EAAKW,SACHC,OAAQP,EACRQ,SAAUhB,IAEVe,OAAQL,EACRM,SAAUhB,MAahB5jB,EAAQnB,UAAUghB,cAAgB,SAAS/C,EAAS6C,GAClD,IAAMI,EAAWjD,EAAQ+D,cAEnBoD,EAASlE,EAAS0E,YAClBzF,GAAUiF,EAAO,GAAKA,EAAO,IAAM,EAEnCU,EAAS/J,EAAA,EAAmBmF,EAAS0E,aAErCpb,EAAI8W,KAAKC,KAAKT,EAAS,IAAMQ,KAAKE,GAAK,KAAOrB,EAC9C6F,GAAK1E,KAAKG,KAAKX,EAAS,IAAMQ,KAAKE,GAAK,KAAOrB,EAC/C8F,GAAYzb,EAAIsb,EAAO,GAAIE,EAAIF,EAAO,IAC5C,OAAO,IAAI7J,EAAA,GAAkB6J,EAAQG,KAUvC9kB,EAAQnB,UAAUkmB,wBAA0B,SAASjI,GACnD,IAAMnP,EAAemP,EAAQ+E,kBACvBmD,KACArD,EAAa7E,EAAQ8E,gBAC3B,IAAK,IAAMzM,KAAOwM,EACZxM,IAAQxH,IACVqX,EAAqB7P,GAAOwM,EAAWxM,IAG3C,OAAO6P,GASThlB,EAAQnB,UAAUomB,0BAA4B,SAASnI,GACrD,IAAMnP,EAAemP,EAAQ+E,kBACvBF,EAAa7E,EAAQ8E,gBAC3B,IAAK,IAAMzM,KAAOwM,EACZxM,IAAQxH,GACVmP,EAAQ7V,IAAIkO,OAAK1Q,IAavBzE,EAAQoiB,YAKNC,IAAK,MAKLE,IAAK,QAOPviB,EAAQC,OAASoM,QAAQpM,OAAO,qBAC9Boa,EAAA,EAAoB/Z,KACpB8Z,EAAA,EAAgB9Z,QAEHgM,QAAQ,oBAAqBtM,GAG7B6B,EAAA,kCChmCf,IAAAqjB,EAAAtlB,EAAA,IAAAulB,EAAAvlB,EAAA,IAAAwlB,EAAAxlB,EAAA,KAAAylB,EAAAzlB,EAAA,KAAA0lB,EAAA1lB,EAAA,KAAA2lB,EAAA3lB,EAAA,IAAA4lB,EAAA5lB,EAAA,IAGMI,GAgBNA,QAAkB,SAAS+f,GACzB,IAAI0F,SAaJ,OAZI1F,aAAoBwF,EAAA,GACtBE,EAAY,IAAIL,EAAA,OACNM,YAAY3F,GACbA,aAAoBoF,EAAA,GAC7BM,EAAY,IAAIJ,EAAA,OACNM,iBAAiB5F,GAClBA,aAAoByF,EAAA,GAC7BC,EAAY,IAAIH,EAAA,OACNM,cAAc7F,GAExB0F,EAAY1F,EAEP0F,GAOTzlB,SAAmB,WACjB,OAAiD,GAA1C6lB,UAAUC,UAAUC,QAAQ,YAA6D,GAA1CF,UAAUC,UAAUC,QAAQ,WASpF/lB,iBAA2B,SAASgmB,GAClC,OAAqB,GAAdA,EAAIvnB,OAAJ,IAAsBunB,EAAQA,GAQvChmB,cAAwB,SAASimB,GAC/B,IAAMplB,EAAIolB,EAAI,GACRC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACd,GAAIplB,IAAU,IAAJA,IAAYqlB,IAAU,IAAJA,IAAYC,IAAU,IAAJA,GAC5C,MAAMC,WAAWvlB,EAAX,IAAgBqlB,EAAhB,IAAqBC,EAArB,+BAKR,UAHanmB,EAAQqmB,iBAAiBxlB,EAAEylB,SAAS,KACpCtmB,EAAQqmB,iBAAiBH,EAAEI,SAAS,KACpCtmB,EAAQqmB,iBAAiBF,EAAEG,SAAS,MASnDtmB,kBAA4B,SAASumB,GACnC,IAAMC,KACN,GAAID,EACF,KACArV,EADcqV,EAAYE,UAAU,GAAGnK,MAAM,KAC7CnL,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA0B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAf4lB,EAAejV,EAClBkV,EAAgBD,EAAKX,QAAQ,KACnC,GAAIY,GAAiB,EAAG,CACtB,IAAMrmB,EAAOomB,EAAKD,UAAU,EAAGE,GACzB7lB,EAAQ4lB,EAAKD,UAAUE,EAAgB,GAC7CH,EAAUI,mBAAmBtmB,IAASsmB,mBAAmB9lB,QAEzD0lB,EAAUE,GAAQ,IAIxB,OAAOF,GAQTxmB,kBAA4B,SAASwmB,GACnC,IAAMK,KACN,IAAK,IAAM1R,KAAOqR,EAAW,CAC3B,IAAM1lB,EAAQ0lB,EAAUrR,GACxB0R,EAAUloB,KAAQmoB,mBAAmB3R,GAArC,IAA6C2R,mBAAmBhmB,IAElE,OAAO+lB,EAAUlb,KAAK,MASxB3L,gBAA0B,SAAS+mB,GACjC,OAAO7B,EAAA,EAAiC6B,IAAU7B,EAAA,EAA8B6B,KAInEllB,EAAA,0CCxHf,IAAAmlB,EAAApnB,EAAA,GAAAqnB,EAAArnB,EAAA,IAaMI,EAAU,SAAS4B,GAAmB,IAAbslB,EAAaxT,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,MAE1CuT,EAAA,EAAcloB,KAAKwF,KAAM3C,GAKzB2C,KAAK2iB,OAASA,GAIhBF,EAAA,EAAgBhnB,EAASinB,EAAA,GAGVplB,EAAA,mCCjBf,IAAM7B,EAAU,aAUhBA,EAAQnB,UAAUsoB,YAAc,SAAS/e,KAWzCpI,EAAQnB,UAAUuoB,KAAO,SAASnmB,GACbsD,KAAK8iB,kBAAkBpmB,GAC/BsG,QAAQhD,KAAK4iB,YAAa5iB,OAUvCvE,EAAQnB,UAAUyJ,MAAQ,SAASF,GACjC7D,KAAK6iB,KAAK7iB,KAAK8iB,kBAAkBjf,EAASpI,EAAQuO,KAAK+Y,SASzDtnB,EAAQnB,UAAU0oB,KAAO,SAASnf,GAChC7D,KAAK6iB,KAAK7iB,KAAK8iB,kBAAkBjf,EAASpI,EAAQuO,KAAKiZ,eASzDxnB,EAAQnB,UAAU4oB,QAAU,SAASrf,GACnC7D,KAAK6iB,KAAK7iB,KAAK8iB,kBAAkBjf,EAASpI,EAAQuO,KAAKmZ,WASzD1nB,EAAQnB,UAAU8oB,KAAO,SAASvf,GAChC7D,KAAK6iB,KAAK7iB,KAAK8iB,kBAAkBjf,EAASpI,EAAQuO,KAAKqZ,WAezD5nB,EAAQnB,UAAUwoB,kBAAoB,SAASpmB,EAAQ4mB,GACrD,IAAMC,KACFC,EAAY,KACVC,EAAchoB,EAAQuO,KAAKiZ,YAiCjC,MA/BsB,iBAAXvmB,EACT6mB,EAAWnpB,MACTspB,IAAKhnB,EACLW,UAAmB6C,IAAbojB,EAAyBA,EAAWG,IAEnC5W,MAAMC,QAAQpQ,GACvBA,EAAOsG,QAAQ,SAAC0gB,GACQ,iBAAXhnB,EACT8mB,GACEE,IAAKA,EACLrmB,UAAmB6C,IAAbojB,EAAyBA,EAAWG,IAG5CD,EAAYE,OACKxjB,IAAbojB,IACFE,EAAUnmB,KAAOimB,IAGrBC,EAAWnpB,KAAKopB,IACfxjB,OAEHwjB,EAAY9mB,OACKwD,IAAbojB,IACFE,EAAUnmB,KAAOimB,QAEIpjB,IAAnBsjB,EAAUnmB,OACZmmB,EAAUnmB,KAAOomB,GAEnBF,EAAWnpB,KAAKopB,IAGXD,GAQT9nB,EAAQuO,MAKN+Y,MAAO,QAKPE,YAAa,cAKbE,QAAS,UAKTE,QAAS,WAII/lB,EAAA,yCC7Jf,IAAA6B,EAAA9D,EAAA,GAAAsoB,EAAAtoB,EAAA,GAAAuoB,EAAAvoB,EAAA,KAAAwoB,EAAAxoB,EAAA,KAAAyoB,EAAAzoB,EAAA,KAAA0oB,EAAA1oB,EAAA,KAAA2oB,EAAA3oB,EAAA,IAAA4oB,EAAA5oB,EAAA,KAAA6oB,EAAA7oB,EAAA,KAAA8oB,EAAA9oB,EAAA,KAAA+oB,EAAA/oB,EAAA,KA4BMI,EAAU,SAASmE,EAAIF,EAAO2kB,GAMlCrkB,KAAKI,IAAMR,EAMXI,KAAKK,OAASX,EAOdM,KAAKskB,sBAAwBD,2GAO/B5oB,EAAQ8oB,UAAY,YAMpB9oB,EAAQ+oB,cAAgB,SAmBxB/oB,EAAQnB,UAAU+J,oBAAsB,SAASogB,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,EAAiBC,GAEvF,IAAMle,GACJme,OAAUN,EACVO,OAAUR,GAERS,SACAN,IACF/d,EAAA,KAAiB+d,GAEfD,IACF9d,EAAA,WAAuB8d,EAEvBO,EAAeP,EAAeQ,QAAQ,aAAc,SAEtD,IAAMpd,EAAU3N,OAAOgrB,UAAWL,GAChCzhB,IAAKkhB,EACL3d,OAAQA,EACRwe,WAAYH,EACZI,YAAaR,IAETS,EAAS,IAAIvB,EAAA,EAAiBjc,GAKpC,OAJI8c,GACFU,EAAOC,aAAaX,GAGf,IAAIhB,EAAA,GAAc0B,YAY3B/pB,EAAQnB,UAAUorB,kCAAoC,SACpD/W,EAAYoW,GAEZ,IAAMxhB,EAAMoL,EAAWtC,OACvBlN,EAAA,EAAYmE,OAAOC,GAEnB,IAAM8L,EAAaV,EAAWiB,mBAAmBxI,KAAK,KAChDke,EAAa3W,EAAWhF,cACxBvF,EAAYuK,EAAWpF,aAGvB9G,EAAQzC,KAAKqE,oBACjBd,EACA8L,EACAjL,EACAkhB,OACAplB,OACAA,EACA6kB,GASF,OALAtiB,EAAMkjB,WAAWhX,EAAWiX,SAG5BnjB,EAAMC,IAAI,kBAAmBiM,EAAWkX,KAEjCpjB,GAoBThH,EAAQnB,UAAUkJ,iCAAmC,SAASsiB,EAAiBC,EAAWC,EAAeC,EAAgBjB,GACvH,IAAMkB,EAAS,IAAItC,EAAA,EACbnhB,EAAQ,IAAIshB,EAAA,GAChBoC,QAASnmB,KAAKskB,wBAEV1kB,EAAKI,KAAKI,IAEhB,OAAOJ,KAAKK,OAAOhE,IAAIypB,GAAkB7e,OAAO,IAAOtD,KAAK,SAACC,GAC3D,IAAI7I,SAIJ,GAHI6I,EAASlK,OACXqB,EAASmrB,EAAOE,KAAKxiB,EAASlK,OAE5BqB,EAAQ,CACV,IAAMiN,EAAU3N,OAAOgrB,UAAWL,EAAmB3qB,OAAA8pB,EAAA,EAAA9pB,CAAwBU,GAC3E0I,UAAWuiB,EACXT,YAAa,YACb9iB,MAAOsjB,KAEHP,EAAS,IAAIrB,EAAA,EAAoDnc,GACnEie,IAAmBjC,EAAA,EAAciC,IACnCT,EAAOa,iBAAiBJ,GAE1BxjB,EAAM6jB,UAAUd,GAGhB,IAAMlhB,EAASvJ,EAAA,eACTY,EAAIgoB,EAAA,EAAarf,EAAQ,SAACiiB,EAAKC,EAAOzjB,GAAb,OAAuBwjB,EAAA,YAAqBR,IAG3E,OAFAtjB,EAAMC,IAAI,qBAAsB/G,EAAA,OAEzBiE,EAAGoE,QAAQvB,GAEpB,OAAO7C,EAAG4H,OAAH,wCAAkDse,MAe7DrqB,EAAQnB,UAAUmsB,oCAAsC,SACtDC,EAAcC,EAAUV,GAGxB,IAAMje,EAAU3N,OAAA8pB,EAAA,EAAA9pB,CAAwBqsB,GACtCnB,YAAa,YACb9iB,MAAOkkB,EAAA,aAGTxnB,EAAA,EAAYmE,OAAO0E,GACnB,IAAMwd,EAAS,IAAIrB,EAAA,EACsBnc,GAMzC,OAJIie,IAAmBjC,EAAA,EAAciC,IACnCT,EAAOa,iBAAiBJ,GAGnB,IAAIlC,EAAA,GACT6C,mBAAsBD,EAAA,MACtBR,QAAS3J,IACTgJ,OAAQA,KAaZ/pB,EAAQnB,UAAU6K,iBAAmB,SAAS0hB,GAC5C,IAAMtlB,EAAQ,IAAIsiB,EAAA,EAIlB,OAHIgD,GACFtlB,EAAMulB,UAAUD,GAEXtlB,GAcT9F,EAAQnB,UAAUysB,gBAAkB,SAASniB,EAAKoiB,GAChD,IACIzlB,SAcJ,OAfeqD,EAAIqiB,gBAAgBC,YAE5BC,WAAWnhB,KAAK,SAACohB,GACtB,OAAIA,EAAc/qB,IAAIZ,EAAQ8oB,aAAeyC,IAC3CzlB,EAAuC6lB,GAChC,KAKN7lB,KACHA,EAAQvB,KAAKmF,oBACPzC,IAAIjH,EAAQ8oB,UAAWyC,GAC7BpiB,EAAIyiB,SAAS9lB,IAERA,GAWT9F,EAAQnB,UAAUgtB,cAAgB,SAAS7kB,GACzC,GAAIA,aAAiBohB,EAAA,EAAc,CACjC,IAAM0D,EAAY9kB,EAAMykB,YAAYC,WAEpC,IADsBI,EAAUvhB,KAAK,SAAAwhB,GAAA,OAAYA,aAAoB3D,EAAA,IAEnE,OAAO0D,EAAUtqB,QAGrB,OAAO+C,KAAKynB,eAAehlB,UAAWvC,IAgBxCzE,EAAQnB,UAAUmtB,eAAiB,SAAShlB,EAAOM,EAAO2kB,GAAiB,IAAArlB,EAAArC,KACnEib,EAAUxY,EAAMklB,mBACEznB,IAApBwnB,EACFA,GAAmBzM,EAEnByM,EAAkBzM,EAEhBxY,aAAiBohB,EAAA,GACDphB,EAAMykB,YACdlkB,QAAQ,SAACrH,GACjB0G,EAAKolB,eAAe9rB,EAAGoH,EAAO2kB,KAG5B3kB,EAAMye,QAAQ/e,GAAS,IACzBA,EAAMC,IAAI,mBAAoBglB,GAAiB,GAC/C3kB,EAAM3I,KAAKqI,IAGf,OAAOM,GAaTtH,EAAQnB,UAAUstB,eAAiB,SAAS7B,EAAWzhB,GAAQ,IAAAyB,EAAA/F,KACzD6nB,EAAQ,KAWZ,OAVAvjB,EAAO0B,KAAK,SAACvD,GACX,GAAIA,aAAiBohB,EAAA,EAAc,CACjC,IAAM0D,EAAY9kB,EAAMykB,YAAYC,WACpCU,EAAQ9hB,EAAK6hB,eAAe7B,EAAWwB,QAC9B9kB,EAAMpG,IAAI,mBAAqB0pB,IACxC8B,EAAQplB,GAEV,QAASolB,IAGJA,GAWTpsB,EAAQnB,UAAUwtB,iBAAmB,SAASrlB,GAE5C,IAAIc,SACEkV,EAAShW,EAAMpG,IAAI,sBACzB,QAAe6D,IAAXuY,EAAsB,CACxB,IAAMsP,EAAYtP,EAAO,GAAP,eACAvY,IAAd6nB,IACFxkB,EAAMwkB,EAAU,GAAV,MAGV,OAAOxkB,GAoBT9H,EAAQnB,UAAU0tB,gBAAkB,SAASzkB,EAC3CwiB,EAAWkC,EAAWC,EAAgBC,EAAiBC,EACvDC,EAAgBC,EAASC,EAAUC,EAASC,GAC5C,GAAKllB,EAAL,CAGA,IAAMye,GACJiD,OAAU,YACVyD,aAAe,EACfC,QAAW,MACXC,QAAW,QACXC,QAAW,mBACXC,MAAS/C,GA4BX,YA1BkB7lB,IAAd+nB,IACFjG,EAAA,MAAuBiG,QAEF/nB,IAAnBgoB,IACFlG,EAAA,KAAsBkG,OACEhoB,IAApBioB,IACFnG,EAAA,MAAuBmG,QAEAjoB,IAArBkoB,IACFpG,EAAA,OAAwBoG,IAGN,QAAlBC,SACanoB,GAAXooB,IACFtG,EAAA,IAAqBsG,QAEPpoB,GAAZqoB,QAAoCroB,GAAXsoB,QAAqCtoB,GAAb+nB,QAAqC/nB,GAAXooB,QAA0CpoB,GAAlBgoB,IACrGlG,EAAA,KAAsBuG,EAASnhB,KAAK,KACpC4a,EAAA,IAAqBwG,EACrBxG,EAAA,MAAuBpG,KAAKmN,OAAOR,EAAS,GAAKA,EAAS,IAAMN,EAAY,MAAQK,GACpFtG,EAAA,OAAwBpG,KAAKmN,OAAOR,EAAS,GAAKA,EAAS,IAAMN,EAAY,MAAQK,KAGrFG,GACFpuB,OAAOgrB,OAAOrD,EAAayG,GAEtBrE,EAAA,EAAmB7gB,EAAKye,KAUjCvmB,EAAQnB,UAAU0uB,eAAiB,SAASvmB,EAAOmC,GACjD,IAAKnC,EAAMwmB,aACT,OAAO,EAGT,IAAMC,EAAoBtkB,EAAI6a,UAAU0J,gBACxC,OAAOD,EAAoBzmB,EAAM2mB,oBAC7BF,EAAoBzmB,EAAM4mB,oBAQhC5tB,EAAQnB,UAAUgvB,gBAAkB,SAAS7mB,GAC3C,IAAM8mB,EAAU9mB,EAAM+mB,YACtBrqB,EAAA,EAAYmE,OACVimB,aAAmBtF,EAAA,GACnBsF,aAAmBrF,EAAA,GAErB,IAAMsB,EAA8D+D,EAC9DziB,EAAS0e,EAAOiE,YACtB3iB,EAAOrL,EAAQ+oB,eAAiB5I,KAAK8N,SACrClE,EAAOC,aAAa3e,IAStBrL,EAAQnB,UAAUqvB,8BAAgC,SAASC,EAASC,GAC5DD,aAAmB/F,EAAA,GAGA+F,EAAQ1C,YAChBlkB,QAAQ,SAAA8mB,GAAA,OAAcA,EAAWC,UAAUF,MAc9DpuB,EAAQnB,UAAU0vB,oBAAsB,SAASvnB,EAAOwnB,EAAOpF,GAE7D,GAAIoF,EAAM/vB,QAAU,EAClBuI,EAAMkjB,YAAW,OACZ,CACLljB,EAAMkjB,YAAW,GACjB,IAAMH,EAA4C/iB,EAAM+mB,YACpD3E,EACFW,EAAOC,cAAcP,OAAU+E,EAAOlrB,KAAQ8lB,IAE9CW,EAAOC,cAAcP,OAAU+E,MAYrCxuB,EAAQnB,UAAU4vB,kBAAoB,SAASznB,GAC7C,OACEA,EAAMpG,IAAI,mBAOdZ,EAAQC,OAASoM,QAAQpM,OAAO,sBAC7BqM,QAAQ,kBAAmBtM,GAC3Bc,MAAM,2BAA4BigB,KAGtBlf,EAAA,kVC7gBf,IAAM7B,cASJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAEnBuM,EAAQ3K,KAAO8sB,EAAA,EAAwBnrB,SAFpB,IAAAqD,mKAAA6F,CAAAlI,KAInBoqB,EAAA5vB,KAAAwF,KAAMgI,IAIAoV,EAAapV,EAAQqiB,sBARR,OAcnBhoB,EAAKioB,SAAW,IAAIC,EAAA,EAAUnN,GAM9B/a,EAAKmoB,QAAU,IAAIC,EAAA,EAMnBpoB,EAAKqoB,qBAAsB,EAM3BroB,EAAKsoB,mBAAoB,EAMzBtoB,EAAKuoB,2BAA6B,KAElCvoB,EAAK8Q,aAAa/Y,KAChBywB,EAAA,EACExoB,EAAKioB,SADP,UAEYjoB,EAAKkW,QAAQ+E,kBACvBjb,EAAKyoB,6BAHPzoB,IAQFA,EAAK0oB,6BAjDc1oB,EATjB,gUAAAgM,CAAA5S,EAAA2uB,GAAA3uB,EAAAnB,UA2EJ+Y,cA3EI,SA2EUjB,GACZpS,KAAK0qB,qBAAsB,EAC3BN,EAAA9vB,UAAM+Y,cAAN7Y,KAAAwF,KAAoBoS,GAEfpS,KAAK2qB,mBACR3qB,KAAK+qB,6BAGP/qB,KAAKgrB,0BAELhrB,KAAK0qB,qBAAsB,GArFzBjvB,EAAAnB,UAiHJwwB,6BAjHI,WAkHF,IAAI9qB,KAAK0qB,oBAAT,CAIA1qB,KAAK2qB,mBAAoB,EAEzB,IAAMnP,EAAWxb,KAAKsqB,SAAShO,cAE7Btc,KAAKoS,WADHoJ,EACgBxb,KAAKwqB,QAAQS,cAAczP,GAE3B,KAGpBxb,KAAKgrB,0BAELhrB,KAAK2qB,mBAAoB,IAjIvBlvB,EAAAnB,UA0IJ4wB,sBA1II,SA0IkBC,GACpB,IAAM3P,EAAWrc,EAAA,EAAYisB,iBAC3BD,EAAIE,OAAQC,EAAA,GAEdtrB,KAAK2qB,mBAAoB,EACzB3qB,KAAKoS,WAAapS,KAAKwqB,QAAQS,cAAczP,GAC7Cxb,KAAK2qB,mBAAoB,GAhJvBlvB,EAAAnB,UAuJJywB,2BAvJI,WAwJF,IAAIvP,EAAW,KACf,GAAIxb,KAAKoS,WAAY,CAEnB,IAAMA,EAAajT,EAAA,EAAYqe,aAAaxd,KAAKoS,YACjDoJ,EAAWxb,KAAKwqB,QAAQe,aAAanZ,GAEvCpS,KAAKwb,SAAWA,GA9Jd/f,EAAAnB,UAsKJ0wB,wBAtKI,WAyKsC,OAApChrB,KAAK4qB,6BACPC,EAAA,EAAuB7qB,KAAK4qB,4BAC5B5qB,KAAK4qB,2BAA6B,MAIpC,IAAMpP,EAAWxb,KAAKsqB,SAAShO,cAC3Bd,IACFxb,KAAK4qB,2BAA6BC,EAAA,EAChCrP,EACA,SACAxb,KAAKkrB,sBACLlrB,QArLF6Q,EAAApV,IAAAmV,IAAA,UAAAvU,IAAA,WAqEF,OAAO2D,KAAKsqB,YArEV1Z,IAAA,WAAAvU,IAAA,WA+FF,OAAO2D,KAAKsqB,SAAShO,eAAiB,MA/FpC5Z,IAAA,SAsGS8Y,GACXxb,KAAKsqB,SAASkB,YAAYhQ,OAvGxB/f,GAAwBgwB,EAAA,GA6LfnuB,EAAA,6CCxMf,IAAA6B,EAAA9D,EAAA,GAAAqwB,EAAArwB,EAAA,KAAAgE,EAAAhE,EAAA,GAAAswB,EAAAtwB,EAAA,IAAAuwB,EAAAvwB,EAAA,IAAAwwB,EAAAxwB,EAAA,IAAAywB,EAAAzwB,EAAA,IAmCMI,EAAU,WAMduE,KAAK+rB,2BAML/rB,KAAKgsB,WAMLhsB,KAAKupB,QAAU,IAAIsC,EAAA,GACjBI,iBAAiB,IAOnBjsB,KAAKksB,OAAS,IAAIP,EAAA,GAChBnG,OAAQxlB,KAAKupB,QACbxQ,MAAO/Y,KAAKmsB,eAAenvB,KAAKgD,MAChCosB,sBAAsB,EACtBC,wBAAwB,KAW5B5wB,EAAQnB,UAAUgyB,WAAa,SAAS/T,EAASgU,GAC/CptB,EAAA,EAAYmE,OAAOipB,GAAc,GACjCptB,EAAA,EAAYmE,OAAOipB,EAAavsB,KAAKgsB,QAAQ9xB,QAC7C,IAAMsyB,EAAantB,EAAA,EAAckZ,GAASwJ,WAC1C/hB,KAAK+rB,wBAAwBS,GAAcD,EAC3CvsB,KAAKgsB,QAAQO,GAAY5O,SAAS6O,GAAcjU,EAChDvY,KAAKupB,QAAQ+C,WAAW/T,IAS1B9c,EAAQnB,UAAUmyB,cAAgB,SAASlU,EAASgU,GAClDptB,EAAA,EAAYmE,OAAOipB,GAAc,GACjCptB,EAAA,EAAYmE,OAAOipB,EAAavsB,KAAKgsB,QAAQ9xB,QAC7C,IAAMsyB,EAAantB,EAAA,EAAckZ,GAASwJ,kBACnC/hB,KAAK+rB,wBAAwBS,UAC7BxsB,KAAKgsB,QAAQO,GAAY5O,SAAS6O,GACzCxsB,KAAKupB,QAAQkD,cAAclU,IAQ7B9c,EAAQnB,UAAUoyB,MAAQ,SAASH,GACjCptB,EAAA,EAAYmE,OAAOipB,GAAc,GACjCptB,EAAA,EAAYmE,OAAOipB,EAAavsB,KAAKgsB,QAAQ9xB,QAC7C,IAAMqH,EAAQvB,KAAKgsB,QAAQO,GAC3B,IAAK,IAAMC,KAAcjrB,EAAMoc,SAC7B3d,KAAKysB,cAAclrB,EAAMoc,SAAS6O,GAAaD,GAEjDptB,EAAA,EAAYmE,OAAOsoB,EAAA,EAAcrqB,EAAMoc,YAQzCliB,EAAQnB,UAAUqyB,SAAW,WAC3B,OAAO3sB,KAAKksB,QAQdzwB,EAAQnB,UAAUsyB,kBAAoB,WACpC,IAAML,EAAavsB,KAAKgsB,QAAQ9xB,OAKhC,OAJA8F,KAAKgsB,QAAQ5xB,MACXyyB,cAAef,EAAA,EACfnO,cAEK,IAAI+N,EAAA,EAAsB1rB,KAAMusB,IAQzC9wB,EAAQnB,UAAUwyB,KAAO,SAASloB,GAChC5E,KAAKksB,OAAOa,OAAOnoB,IAUrBnJ,EAAQnB,UAAUge,SAAW,SAASS,EAAOwT,GAC3CptB,EAAA,EAAYmE,OAAOipB,GAAc,GACjCptB,EAAA,EAAYmE,OAAOipB,EAAavsB,KAAKgsB,QAAQ9xB,QAC7C8F,KAAKgsB,QAAQO,GAAYM,cAA0B,OAAV9T,EACvC+S,EAAA,EAAakB,gBAAkB3yB,OAAAyxB,EAAA,EAAAzxB,CAAgB0e,IAUnDtd,EAAQnB,UAAU6xB,eAAiB,SAAS5T,EAAS0U,GACnD,IAAMT,EAAantB,EAAA,EAAckZ,GAASwJ,WAC1C5iB,EAAA,EAAYmE,OAAOkpB,KAAcxsB,KAAK+rB,yBACtC,IAAMQ,EAAavsB,KAAK+rB,wBAAwBS,GAEhD,OADcxsB,KAAKgsB,QAAQO,GACdM,cAActU,EAAS0U,KAOtCxxB,EAAQC,OAASoM,QAAQpM,OAAO,yBAC9BgwB,EAAA,EAAsBhwB,OAAOK,QAEhBgM,QAAQ,wBAAyBtM,GAGjC6B,EAAA,mCC1Lf,IAAA6B,EAAA9D,EAAA,GAAA6xB,EAAA7xB,EAAA,KAAAgE,EAAAhE,EAAA,GAAAwvB,EAAAxvB,EAAA,GAAA8xB,EAAA9xB,EAAA,KAAA+xB,EAAA/xB,EAAA,KAsBMI,EAAU,SAAS4xB,EAAQC,EAAYC,GAAQ,IAAAlrB,EAAArC,KAE7CwtB,OAA4CttB,IAAnCqtB,EAAA,qBAMfvtB,KAAKwtB,OAASA,EAEd,IAAMC,EAAWF,EAAA,cAMjBvtB,KAAK0tB,WAAaJ,EAMlBttB,KAAKod,cAMLpd,KAAK2tB,OAAS,MAMd3tB,KAAKkC,KAEDsrB,EACFH,EAAOO,OAAOH,EAAU,SAAC7X,EAAQiY,GAC/BxrB,EAAKH,KAAO0T,KAGd5V,KAAKkC,KAA+BmrB,EAAOS,MAAML,GACjDtuB,EAAA,EAAYmE,YAAqBpD,IAAdF,KAAKkC,OAG1B,IAAM6rB,EAAUR,EAAA,iBACV3oB,EAA6ByoB,EAAOS,MAAMC,GAChD5uB,EAAA,EAAYmE,YAAepD,IAAR0E,GAMnB5E,KAAKguB,OAASX,EAAOY,QAAP,cAMdjuB,KAAKsB,YAEDtB,KAAKguB,QACPhuB,KAAKguB,OAAO1sB,SAASlH,KAAK4F,MAG5BqtB,EAAOa,IAAI,WAAY,WACrB,GAAI7rB,EAAK2rB,OAAQ,CACf,IAAMxH,EAAQnkB,EAAK2rB,OAAO1sB,SAASkgB,QAArBnf,GACdlD,EAAA,EAAYmE,OAAOkjB,GAAS,GAC5BnkB,EAAK2rB,OAAO1sB,SAASlG,OAAOorB,EAAO,MAQvCxmB,KAAKmuB,IAAM9uB,EAAA,EAAcW,MAMzBA,KAAKouB,MAAQZ,EAAS,EAAIxtB,KAAKguB,OAAOI,MAAQ,EAK9Cf,EAAA,IAAgBrtB,KAAKmuB,IACrBd,EAAA,MAAkBrtB,KAAKouB,MAMvBpuB,KAAK4E,IAAMA,EAEX,IAAIypB,EAAgBd,EAAA,uBACpB,QAAsBrtB,IAAlBmuB,EAA6B,CAC/B,IAAMC,EAAoBf,EAAA,2BACpBgB,EAAmBlB,EAAOS,MAAMQ,GACtCnvB,EAAA,EAAYqe,aAAa+Q,GACzBF,EAAgBE,EAelB,GAbApvB,EAAA,EAAYmE,YAAyBpD,IAAlBmuB,GAMnBruB,KAAKquB,cAAgBA,EAMrBruB,KAAKyC,MAAQ,MACR+qB,EAAQ,CACX,IAAM/qB,EAAQ4qB,EAAOS,MAAMO,GAAgBG,SAAYxuB,QAAU,KAC7DyC,IACFtD,EAAA,EAAYmE,OACVb,aAAiB2qB,EAAA,GAAgB3qB,aAAiB0qB,EAAA,GAEpDntB,KAAKyC,MAAQA,GAQjBzC,KAAKyuB,YAAc,KAEfzuB,KAAKyC,QACPyqB,EAAA,EAAiBwB,aAAa1uB,KAAKyC,MAAO4qB,GAC1CH,EAAA,EAAiBzqB,MAAMzC,KAAKyC,OAE5BooB,EAAA,EAAgB7qB,KAAKyC,MAAO,iBAAkB,WAC5CJ,EAAKqrB,WAAWiB,WAAW,yBAA3BtsB,MAIJ,IAAIusB,EAAgBrB,EAAA,uBACpB,QAAsBrtB,IAAlB0uB,EAA6B,CAC/B,IAAMC,EAAoBtB,EAAA,2BAC1BqB,EAAgBvB,EAAOS,MAAMe,QAGT3uB,IAAlB0uB,GACFzvB,EAAA,EAAYqe,aAAaoR,GAO3B5uB,KAAK4uB,cAAgBA,EAGjBA,GACFvB,EAAOS,MAAMc,GAAgBE,UAAazB,EAAQmB,SAAYxuB,OAGhEqtB,EAAA,cAA0BrtB,4FAS5BvE,EAAQnB,UAAUy0B,SAAW,WAC3B,OAAO/uB,KAAK2tB,QAWdlyB,EAAQnB,UAAU00B,SAAW,SAASC,EAAOC,GAAe,IAAAnpB,EAAA/F,KAC1D,GAAIivB,IAAUjvB,KAAK2tB,OAAnB,CAGA3tB,KAAKmvB,kBAAkBF,GAGnBjvB,KAAKguB,QACPhuB,KAAKguB,OAAOoB,eAGd,IAAMC,EAAervB,KAAKwtB,OAASxtB,KAAKsB,UAAY7F,EAAQ6zB,mBAAmBtvB,aAEzDE,IAAlBgvB,GAA+BA,IACjCG,EAAarsB,QAAQ,SAACusB,GACpBxpB,EAAK2nB,WAAWiB,WAAW,uBAA3B5oB,EAAyDwpB,OAS/D9zB,EAAQnB,UAAU60B,kBAAoB,SAASF,GAAO,IAAApoB,EAAA7G,KAEpDA,KAAK2tB,OAAmB,OAAVsB,EAAiB,KAAO,MAEtCjvB,KAAKsB,SAAS0B,QAAQ,SAACC,GACrBA,EAAMksB,kBAAkBtoB,EAAK8mB,WAUjClyB,EAAQnB,UAAU80B,aAAe,WAC/B,IAAMI,EAAWxvB,KAAKyvB,oBAClBzvB,KAAK2tB,SAAW6B,IAGpBxvB,KAAK2tB,OAAS6B,EACVxvB,KAAKguB,QACPhuB,KAAKguB,OAAOoB,iBAUhB3zB,EAAQnB,UAAUm1B,kBAAoB,WACpC,QAA2BvvB,IAAvBF,KAAKkC,KAAKZ,SACZ,OAAOtB,KAAK2tB,OAEd,IAAI+B,SACAC,SAUJ,OATA3vB,KAAKsB,SAAS0E,KAAK,SAAC/C,GAElB,GADAysB,EAAazsB,EAAMwsB,oBACfE,GACEA,IAAuBD,EACzB,OAAOA,EAAa,gBAGxBC,EAAqBD,IAEhBA,GASTj0B,EAAQnB,UAAUs1B,aAAe,SAASC,GACxC,IAAMptB,EAAQzC,KAAKyC,MACbmC,EAAM5E,KAAK4E,IACjB,GAAKnC,EAGL,YAAYvC,IAAR2vB,EAOKjrB,EAAIsiB,YAAYC,WAAW3F,QAAQ/e,IAAU,OAN/CotB,EAGHjrB,EAAIyiB,SAAS5kB,GAFbmC,EAAIkrB,YAAYrtB,KAetBhH,EAAQnB,UAAUy1B,cAAgB,WAChC,OAAO/vB,KAAKyuB,aAQdhzB,EAAQnB,UAAU01B,cAAgB,SAASrhB,GACzC3O,KAAKyuB,YAAc9f,GAWrBlT,EAAQ6zB,mBAAqB,SAASd,GAEpC,IADA,IAAIyB,EAAOzB,GACHyB,EAAKjC,OAAOR,QAClByC,EAAOA,EAAKjC,OAEd,OAAOiC,GAOTx0B,EAAQy0B,iBACNC,KAAM,OACNC,KAAM,OACNC,QAAS,WAkBX50B,EAAQnB,UAAUg2B,mBAAqB,SAASC,GAI9C,OAFiBA,EAAQvwB,OAASvE,EAAQy0B,gBAAgBG,SAGxD,KAAK50B,EAAQy0B,gBAAgBC,KAC3B,OAAO,EACT,KAAK10B,EAAQy0B,gBAAgBE,KAC3B,OAAO,EACT,KAAK30B,EAAQy0B,gBAAgBG,QAC3B,IAAK,IAAIr2B,EAAI,EAAGA,EAAIgG,KAAKsB,SAASpH,SAAUF,EAAG,CAG7C,GAFcgG,KAAKsB,SAAStH,GACTs2B,mBAAmBC,GAEpC,OAAO,EAGX,OAAO,EACT,QACEpxB,EAAA,EAAYqF,KAAK,qBAQvB/I,EAAQC,OAASoM,QAAQpM,OAAO,+BACjB80B,WAAW,0BAA2B/0B,GAGtC6B,EAAA,qCC1Yf,IAAA6B,EAAA9D,EAAA,GAAAo1B,EAAAp1B,EAAA,IAAAgE,EAAAhE,EAAA,GAAAq1B,EAAAr1B,EAAA,IAAAs1B,EAAAt1B,EAAA,IAAAu1B,EAAAv1B,EAAA,KAAAw1B,EAAAx1B,EAAA,KAAAy1B,EAAAz1B,EAAA,GAAA01B,EAAA11B,EAAA,IAAA21B,EAAA31B,EAAA,IAAA41B,EAAA51B,EAAA,IAAA61B,EAAA71B,EAAA,IAAA81B,EAAA91B,EAAA,IAAA+1B,EAAA/1B,EAAA,IA2BMI,EAAU,SAAVA,IAAsF,IAAnEuM,EAAmEmH,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,MAE1F4hB,EAAA,EAAyBv2B,KAAKwF,MAC5BqxB,YAAa51B,EAAQ61B,eAQvBtxB,KAAKuxB,oBAAsB,KAQ3BvxB,KAAKwxB,oBAAsB,KAQ3BxxB,KAAKyxB,uBAAyB,KAQ9BzxB,KAAK0xB,uBAAyB,KAQ9B1xB,KAAK2xB,4BAA8B,KAQnC3xB,KAAK4xB,cAAgB,KAMrB5xB,KAAK6xB,YAAc,KAQnB7xB,KAAK8xB,SAAW9pB,EAAQ8pB,SAQxB9xB,KAAK+xB,UAAY/pB,EAAQ+pB,UAOzB/xB,KAAKgyB,yBAAqD9xB,IAA/B8H,EAAQiqB,oBAAmCjqB,EAAQiqB,mBAM9EjyB,KAAKkyB,cACoBhyB,IAArB8H,EAAQkqB,SACVlyB,KAAKkyB,SAAWlqB,EAAQkqB,UAExBlyB,KAAKkyB,SAAWC,SAASC,cAAc,QACvCpyB,KAAKkyB,SAASG,YAAe,2BAQ/BryB,KAAKsyB,gBAAkB,KAOvBtyB,KAAKuyB,qBAAuB,KAE5B,IAAMxZ,OAA0B7Y,IAAlB8H,EAAQ+Q,MAAsB/Q,EAAQ+Q,OAClD,IAAIqY,EAAA,GACF1W,KAAM,IAAIwW,EAAA,GACRtX,MAAO,+BAGX,IAAIwX,EAAA,GACFtX,OAAQ,IAAIqX,EAAA,GACVvX,MAAO,QACPG,MAAO,MAGX,IAAIqX,EAAA,GACFtX,OAAQ,IAAIqX,EAAA,GACVvX,MAAO,UACPG,MAAO,OAUb/Z,KAAKwyB,aAAe,IAAIxB,EAAA,GACtBxL,OAAQ,IAAIyL,EAAA,EACZlY,MAAOA,IAQT/Y,KAAKyyB,iBAAmBzyB,KAAK0yB,sBAAsB1qB,EAAQ2qB,YACzD3yB,KAAKwyB,aAAahJ,aAMpBxpB,KAAK4yB,0CAA2C,EAEhD9B,EAAA,EAAgB9wB,KAAKyyB,iBAAkB,gBAAiBzyB,KAAK6yB,mCAAoC7yB,MACjG8wB,EAAA,EAAgB9wB,KAAKyyB,iBAAkB,YAAazyB,KAAK8yB,aAAc9yB,MACvE8wB,EAAA,EAAgB9wB,KAAKyyB,iBAAkB,UAAWzyB,KAAK+yB,WAAY/yB,MAEnE8wB,EAAA,EAAgB9wB,KAAM,gBAAiBA,KAAKgzB,aAAchzB,OAG5DX,EAAA,EAAgB5D,EAASs1B,EAAA,GAmBzBt1B,EAAQujB,iBAAmB,SAASiU,EAAS5a,EAAY0Z,EAAWvkB,GAClE,IAAM6O,EAAuC4W,EAAQ1U,QAAQ2U,UAAU7a,EAAY,aAEnF,OAAO7K,EADMoO,KAAKuX,IAAItC,EAAA,EAAiBxU,GAAOhE,WAAc,eACxC,KAAM,SAAU0Z,IAYtCt2B,EAAQ23B,uBAAyB,SAASC,EAAQtB,EAAWvkB,GAE3D,OAAOA,EADMoO,KAAKE,GAAKF,KAAK0X,IAAID,EAAOE,YAAa,GAChC,KAAM,SAAUxB,IAatCt2B,EAAQ8f,mBAAqB,SAASiY,EAAYnb,EAAY0Z,EAAWvkB,GAGvE,IAFA,IAAItT,EAAS,EACP4iB,EAAc0W,EAAWzW,iBACtB/iB,EAAI,EAAGmH,EAAK2b,EAAY5iB,OAAS,EAAGF,EAAImH,IAAMnH,EAAG,CACxD,IAAMy5B,EAAK9C,EAAA,EAAiB7T,EAAY9iB,GAAIqe,EAAY,aAClDqb,EAAK/C,EAAA,EAAiB7T,EAAY9iB,EAAI,GAAIqe,EAAY,aAC5Dne,GAAU22B,EAAA,EAAqB4C,EAAIC,GAErC,OAAOlmB,EAAOtT,EAAQ,IAAK,OAAQ63B,IAYrCt2B,EAAQwjB,kBAAoB,SAAS0U,EAAO7B,EAAUtkB,EAAQomB,GAC5D,OAAOpmB,EAAOmmB,EAAM5W,iBAAkB+U,EAAU8B,IAWlDn4B,EAAQ61B,aAAe,SAASnG,GAC9B,GAAgB,eAAZA,EAAI9tB,MAAyB8tB,EAAI0I,SACnC,OAAO,EAGT,IAAMC,EAAiC,OAAvB9zB,KAAK4xB,cAAyB5xB,KAAKkyB,SAAWlyB,KAAK6xB,YAQnE,OANI7xB,KAAKgyB,sBACPtB,EAAA,EAAqB1wB,KAAKuxB,qBAC1BvxB,KAAKuxB,oBAAoBwC,YAAYD,GACrC9zB,KAAKwxB,oBAAoBwC,YAAY7I,EAAI8I,cAGpC,GAOTx4B,EAAQnB,UAAU45B,mBAAqB,WACrC,OAAOl0B,KAAKyyB,kBAcdh3B,EAAQnB,UAAUo4B,sBAAwB,SAAS3Z,EAAOyM,KAM1D/pB,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAElCmsB,EAAA,EAAyBz2B,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAErD5E,KAAKwyB,aAAazF,OAAOnoB,GAEzB,IAAMuvB,EAAUn0B,KAAKyyB,iBAAiB2B,SACtB,OAAZD,GACFA,EAAQE,kBAAkBr0B,KAAKyyB,kBAGrB,OAAR7tB,GACFA,EAAI0vB,eAAet0B,KAAKyyB,mBAU5Bh3B,EAAQnB,UAAUw4B,aAAe,SAAS3H,GAAK,IAAA9oB,EAAArC,KAC7CA,KAAK4xB,cAAgBzG,EAAI5S,SAAW4S,EAAIxI,OAAOpK,QAC/CvY,KAAKwyB,aAAahJ,YAAYkD,OAAM,GACpC1sB,KAAKu0B,wBAEL,IAAM/Y,EAAWxb,KAAK4xB,cAActV,cAEpCnd,EAAA,EAAYmE,YAAoBpD,IAAbsb,GACnBxb,KAAKsyB,gBAAkBxB,EAAA,EAAgBtV,EAAU,SAAU,WACzDnZ,EAAKmyB,cAAc,SAAC1V,EAAS2V,GACb,OAAVA,IACFpyB,EAAKovB,uBAAuBiD,UAAY5V,EACxCzc,EAAKsvB,4BAA8B8C,OAKzCz0B,KAAKuyB,qBAAuBzB,EAAA,EAAgB9wB,KAAKo0B,SAAU,cAAe,WACxE/xB,EAAKqvB,uBAAuBsC,YAAY3xB,EAAKsvB,gCAUjDl2B,EAAQnB,UAAUy4B,WAAa,SAAS5H,GACtCnrB,KAAKyxB,uBAAuBkD,UAAUC,IAAI,uBAC1C50B,KAAK0xB,uBAAuBmD,WAAW,GAAI,IAE3C,IAAMrS,EAAQ,IAAIiO,EAAA,EAAgB,cAAelY,QAASvY,KAAK4xB,gBAC/D5xB,KAAKuH,cAAcib,GACnBxiB,KAAK4xB,cAAgB,KACrB5xB,KAAK80B,oBAOPr5B,EAAQnB,UAAUw6B,iBAAmB,WACN,OAAzB90B,KAAKsyB,iBAA0D,OAA9BtyB,KAAKuyB,uBACxCzB,EAAA,EAAuB9wB,KAAKsyB,iBAC5BxB,EAAA,EAAuB9wB,KAAKuyB,sBAC5BvyB,KAAKsyB,gBAAkB,KACvBtyB,KAAKuyB,qBAAuB,OAQhC92B,EAAQnB,UAAUy6B,mBAAqB,WACrC/0B,KAAKg1B,qBACDh1B,KAAKgyB,sBACPhyB,KAAKuxB,oBAAsBY,SAASC,cAAc,OAClDpyB,KAAKuxB,oBAAoBoD,UAAUC,IAAI,WACvC50B,KAAKwxB,oBAAsB,IAAIZ,EAAA,GAC7BhH,QAAS5pB,KAAKuxB,oBACd0D,QAAS,GAAI,GACbC,YAAa,gBAEfl1B,KAAKo0B,SAASe,WAAWn1B,KAAKwxB,uBASlC/1B,EAAQnB,UAAU06B,mBAAqB,WACjCh1B,KAAKgyB,sBACPhyB,KAAKo0B,SAASgB,cAAcp1B,KAAKwxB,qBACA,OAA7BxxB,KAAKuxB,qBACPvxB,KAAKuxB,oBAAoB8D,WAAWC,YAAYt1B,KAAKuxB,qBAEvDvxB,KAAKuxB,oBAAsB,KAC3BvxB,KAAKwxB,oBAAsB,OAS/B/1B,EAAQnB,UAAUi6B,sBAAwB,WACxCv0B,KAAKu1B,wBACLv1B,KAAKyxB,uBAAyBU,SAASC,cAAc,OACrDpyB,KAAKyxB,uBAAuBkD,UAAUC,IAAI,WAC1C50B,KAAKyxB,uBAAuBkD,UAAUC,IAAI,wBAC1C50B,KAAK0xB,uBAAyB,IAAId,EAAA,GAChChH,QAAS5pB,KAAKyxB,uBACdwD,QAAS,GAAI,IACbC,YAAa,gBACbM,WAAW,IAEbx1B,KAAKo0B,SAASe,WAAWn1B,KAAK0xB,yBAQhCj2B,EAAQnB,UAAUi7B,sBAAwB,WACJ,OAAhCv1B,KAAKyxB,yBACPzxB,KAAKyxB,uBAAuB4D,WAAWC,YAAYt1B,KAAKyxB,wBACxDzxB,KAAKyxB,uBAAyB,KAC9BzxB,KAAK0xB,uBAAyB,KAC9B1xB,KAAK2xB,4BAA8B,OAQvCl2B,EAAQnB,UAAU04B,aAAe,WAC/B,IAAM5hB,EAASpR,KAAK0V,YACpB1V,KAAK4yB,0CAA2C,EAChD5yB,KAAKyyB,iBAAiB9c,UAAUvE,GAChCpR,KAAK4yB,0CAA2C,EAC3C5yB,KAAKo0B,WAGNhjB,EACGpR,KAAK0xB,yBACR1xB,KAAKu0B,wBACLv0B,KAAK+0B,uBAGP/0B,KAAKwyB,aAAahJ,YAAYkD,OAAM,GACpC1sB,KAAKo0B,SAASgB,cAAcp1B,KAAK0xB,wBACjC1xB,KAAKu1B,wBACLv1B,KAAKg1B,qBACLh1B,KAAK80B,sBAcTr5B,EAAQnB,UAAUk6B,cAAgB,SAASjyB,KAO3C9G,EAAQnB,UAAUm7B,kBAAoB,WACpC,OAAOz1B,KAAKyxB,wBAWdh2B,EAAQnB,UAAUu4B,mCAAqC,WACjD7yB,KAAK4yB,0CACP5yB,KAAK2V,UAAU3V,KAAKyyB,iBAAiB/c,cAK1BpY,EAAA,oCC9ff,SAAAo4B,GAAA,IAAAC,EAAAt6B,EAAA,IAAAu6B,EAAAv6B,EAAA,IAAAw6B,EAAAx6B,EAAA,GAAAy6B,EAAAz6B,EAAA,IAAA06B,EAAA16B,EAAA,IAAA26B,EAAA36B,EAAA,KAAA46B,EAAA56B,EAAA,KAAA8a,EAAA9a,EAAA,GAAA66B,EAAA76B,EAAA,GAAA86B,EAAA96B,EAAA,IAuCMI,EAAU,SAAS26B,EAAUz2B,EAAWG,EAAgBD,EAC5Dw2B,EAAkBC,EAAWC,GAM7Bv2B,KAAKw2B,UAAYJ,EAMjBp2B,KAAKy2B,WAAa92B,EAMlBK,KAAK02B,gBAAkB52B,EAMvBE,KAAKU,aAAeb,EAMpBG,KAAK22B,kBAAoBN,EAMzBr2B,KAAK42B,WAAaN,EAQlBt2B,KAAK62B,MACHv1B,aAUFtB,KAAK82B,SAAW,KAQhB92B,KAAK+2B,oCAAsC,EAM3C/2B,KAAKg3B,gCAMLh3B,KAAKi3B,uCAAyC,KAM9Cj3B,KAAKk3B,kBAAoBX,EAOzBv2B,KAAKm3B,YAAc,KAEnBjB,EAAA,EAAgBl2B,KAAK42B,WAAY,SAAU52B,KAAKo3B,oBAAqBp3B,uPAUvEvE,EAAQnB,UAAU88B,oBAAsB,WAAW,IAAA/0B,EAAArC,KACjDA,KAAK42B,WAAWhxB,sBAAsBjC,KAAK,SAACR,GAC1Cd,EAAK80B,YAAch0B,IAGjBnD,KAAK82B,UAAY92B,KAAK82B,SAASx1B,UACjCtB,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtCmB,EAAKg1B,yBAAyBn2B,MAapCzF,EAAQnB,UAAUg9B,oBAAsB,SAASC,GAG/C,OAFAv3B,KAAK62B,KAAKv1B,SAASpH,OAAS,EAC5B8F,KAAKk3B,kBAAkBM,YAAY7B,EAAA,EAAQ8B,eAAeriB,aACnDpV,KAAK03B,oBAAoBH,IAclC97B,EAAQnB,UAAUo9B,oBAAsB,SAASH,EAC/CI,EAASC,GAAY,IAAA7xB,EAAA/F,KACf63B,KAWN,OATAN,EAAiBt6B,QAAQ8H,UAAU/B,QAAQ,SAACzB,GACrCwE,EAAK+xB,oBAAoBv2B,IAC5Bs2B,EAAcz9B,KAAKmH,KAGnBs2B,EAAc39B,OAAS,IAAM09B,GAC/B53B,KAAK+3B,qBAAqBF,GAGI,IAAzBA,EAAc39B,QASvBuB,EAAQnB,UAAU09B,uBAAyB,SAASC,GAClD,IAAMC,KACNA,EAAgBvC,EAAA,EAAQ8B,eAAeriB,aAAe6iB,EAAOrzB,IAAI,SAAA1C,GAAA,OAAQA,EAAKnG,OAAMqL,KAAK,KACzFpH,KAAKk3B,kBAAkBiB,YAAYD,GAC/Bl4B,KAAKy2B,WAAWl2B,IAAI,iBACiBP,KAAKy2B,WAAWp6B,IAAI,gBAAiB+7B,YAAYH,IAY5Fx8B,EAAQnB,UAAUw9B,oBAAsB,SAASv2B,GAAO,IAAAsF,EAAA7G,KAClDq4B,GAAe,EACbC,EAAU/2B,EAAMskB,GAWtB,OAVA7lB,KAAK62B,KAAKv1B,SAAS0E,KAAK,SAACuyB,GACvB,GAAID,IAAYC,EAAU1S,GACxB,OAAOwS,GAAe,GAEvBr4B,MACHA,KAAKg3B,6BAA6BhxB,KAAK,SAACwyB,GACtC,GAAIF,IAAYE,EAAI3S,GAClB,OAAOwS,GAAe,GAEvBr4B,OACCq4B,IAMJr4B,KAAKg3B,6BAA6B58B,KAAKmH,GACvCvB,KAAK+2B,oCAAsC,EAGS,OAAhD/2B,KAAKi3B,wCACPj3B,KAAKw2B,UAAUiC,OAAOz4B,KAAKi3B,wCAM7Bj3B,KAAKi3B,uCAAyCj3B,KAAKw2B,UAAU,WAE3D3vB,EAAKkwB,oCAAsClwB,EAAKmwB,6BAA6B98B,OAE7E2M,EAAKmwB,6BAA6Bh0B,QAAQ,SAACw1B,GACzC3xB,EAAKgwB,KAAKv1B,SAASuX,QAAQ2f,KAG7B3xB,EAAKmxB,uBAAuBnxB,EAAKgwB,KAAKv1B,UAKtCuF,EAAKmwB,6BAA6B98B,OAAS,EAC3C2M,EAAKowB,uCAAyC,QAGzC,IAWTx7B,EAAQnB,UAAUo+B,eAAiB,SAAS1R,EAAW2Q,GAAS,IAAAgB,EAAA34B,KAC9DA,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAMK,EAAQq0B,EAAA,EAAej0B,gBAAgBT,EAAQ8lB,GACjDzlB,GACFo3B,EAAKjB,qBAAqBn2B,GAAQo2B,GAAS,MAejDl8B,EAAQnB,UAAUs+B,oBAAsB,SAAS7S,EAAW4R,EAASC,GAAY,IAAAiB,EAAA74B,KAC/EA,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAMK,EAAQq0B,EAAA,EAAe30B,yBAAyBC,EAAQ6kB,GAC9D,GAAIxkB,EAAO,CACT,IAAMu3B,EAAaD,EAAKnB,qBAAqBn2B,GAAQo2B,EAASC,GAC9DiB,EAAKrC,UAAU,WACb,IAAMhI,EAAWqK,EAAKE,oBAAoBx3B,EAAMskB,IAChD,GAAK2I,EAAL,CAIA,IAAIwK,SACJxK,EAAS8B,mBAAmB,SAAC9B,GAC3B,GAAIA,EAAStsB,KAAKnG,OAASgqB,EAEzB,OADAiT,EAAmBxK,EACZsH,EAAA,EAAwB5F,gBAAgBC,OAK/C2I,GACFtK,EAASQ,SAAS,OAIhBgK,GACFA,EAAiBhK,SAAS,WAlB1BlrB,QAAQsf,KAAK,4DAgCvB3nB,EAAQnB,UAAU2+B,YAAc,SAAS13B,GACvC,IAAMD,EAAWtB,KAAK62B,KAAKv1B,SACvBklB,EAAQ,EAAGqB,GAAQ,EACvBvmB,EAAS0E,KAAK,SAAC/C,GACb,GAAIA,EAAMlH,OAASwF,EAAMxF,KACvB,OAAO8rB,GAAQ,EAEjBrB,MAEEqB,IACFvmB,EAASlG,OAAOorB,EAAO,GACvBxmB,KAAKg4B,uBAAuB12B,KAShC7F,EAAQnB,UAAU4+B,UAAY,WAC5B,KAAOl5B,KAAK62B,KAAKv1B,SAASpH,QACxB8F,KAAKi5B,YAAYj5B,KAAK62B,KAAKv1B,SAAS,KAcxC7F,EAAQnB,UAAU6+B,gBAAkB,SAAS53B,EAAO0oB,GAClD,IAAM1L,EAA2C4X,EAAA,KAAiB50B,GAElE,OADAvB,KAAKo5B,iBAAiB7a,EAAO0L,GACtB1L,GAYT9iB,EAAQnB,UAAU8+B,iBAAmB,SAASl3B,EAAM+nB,GAAO,IAAAoP,EAAAr5B,KACpDkC,EAAKZ,UAGVY,EAAKZ,SAAS0B,QAAQ,SAACs2B,GACjBA,EAAUh4B,SACZ+3B,EAAKD,iBAAiBE,EAAWrP,GACxBqP,EAAU32B,WACnB22B,EAAU32B,SAAS42B,UAAYpjB,EAAA,EAAiB8T,EAAOqP,EAAUv9B,UAavEN,EAAQnB,UAAUy9B,qBAAuB,SAASE,GAChD,IAAMhO,KACAnqB,EAAiBE,KAAK02B,gBAC5BuB,EAAOj1B,QAAQ,SAACzB,GACd0oB,EAAM7vB,KAAK0F,EAAewF,UAAU/D,EAAMxF,SAE5C,IAAM2nB,EAAOuG,EAAM/vB,OAAS,EAC1B4F,EAAewF,UAAU,4BACzBxF,EAAewF,UAAU,8BAC3BtF,KAAK22B,kBAAkB6C,QACrB9V,IAAQuG,EAAM7iB,KAAK,MAAnB,IAA4Bsc,EAC5BrmB,KAAM04B,EAAA,EAAmB/rB,KAAKiZ,eAWlCxnB,EAAQnB,UAAUy+B,oBAAsB,SAASlT,GAC/C,IAAI4T,EAAwB,KAS5B,OARIz5B,KAAK82B,UAAY92B,KAAK82B,SAASxG,oBACjCtwB,KAAK82B,SAASxG,mBAAmB,SAAC9B,GAChC,GAAIA,EAAStsB,KAAK2jB,KAAOA,EAEvB,OADA4T,EAAwBjL,EACjBsH,EAAA,EAAwB5F,gBAAgBC,OAI9CsJ,GAUTh+B,EAAQnB,UAAUo/B,aAAe,SAASlL,GACxC,GAAIA,EAASR,OAAO9rB,KAAKy3B,MAAO,CAC9B,IAAM11B,EAAoDuqB,EAAStsB,KAEnE,OADA2zB,EAAA,EAAYvyB,OAAOW,EAAYC,WACxBlE,KAAKm3B,YAAYlzB,EAAYC,WAGpC,IADA,IAAI01B,EAAsBpL,GAClBoL,EAAoB5L,OAAOR,QACjCoM,EAAsBA,EAAoB5L,OAE5C,IAAM6L,EAA8CD,EAAoB13B,KAExE,OADA2zB,EAAA,EAAYvyB,OAAOu2B,EAAS31B,WACrBlE,KAAKm3B,YAAY0C,EAAS31B,YAcrCzI,EAAQnB,UAAU+8B,yBAA2B,SAASn2B,GAAQ,IAAA44B,EAAA95B,KACtD+5B,KAGN/5B,KAAK82B,SAASx1B,SAASsD,IAAI,SAAC4pB,GAC1B,IAAMzyB,EAAOyyB,EAAStsB,KAAKnG,KAC3Bg+B,EAA0Bh+B,GAAQ+9B,EAAKE,6BAA6BxL,KAItE,IAAMyL,KAENj6B,KAAK62B,KAAKv1B,SAASsD,IAAI,SAAC1C,GACtB,IAAMnG,EAAOmG,EAAKnG,KAGZm+B,EAAgBtE,EAAA,EAAej0B,gBAAgBT,EAAQnF,GAC7D,GAAIm+B,EAAe,CAEjB,IAAMC,EAAYJ,EAA0Bh+B,GACxCo+B,GACFL,EAAKM,8BAA8BF,EAAeC,GAEpDF,EAAe7/B,KAAK8/B,MAKxBl6B,KAAKs3B,oBAAoB2C,GAGzBj6B,KAAKw2B,UAAU,WACbsD,EAAK9B,uBAAuB8B,EAAKjD,KAAKv1B,aAa1C7F,EAAQnB,UAAU0/B,6BAA+B,SAASxL,GAAU,IAAA6L,EAAAr6B,KAC5DsB,KAENktB,EAASltB,SAASsD,IAAI,SAAC3B,GACrB3B,EAAS2B,EAAMf,KAAKnG,MAAQs+B,EAAKL,6BAA6B/2B,KAGhE,IAAIs2B,SAAWe,SAAYC,SAC3B,GAAI/L,EAASltB,SAASpH,OAAS,EAAG,CAChC,IAAMsgC,EAAc9E,gCAAgClH,EAASL,KAEzDqM,IACFF,EAAaE,EAAYC,SAAS,WAE/B,CAIHlB,EADgB,QADlBA,EAAY/K,EAASO,aAGI,QAAdwK,QAGGr5B,EAEd,IAAMw6B,EAAgBhF,yBAAyBlH,EAASL,IAAlC,WAClBuM,IACFH,EAAmBG,EAAcC,GAAG,aAIxC,OACEr5B,WACAi4B,YACAe,aACAC,qBAcJ9+B,EAAQnB,UAAU8/B,8BAAgC,SAASl4B,EAAMi4B,GAAW,IAAAS,EAAA56B,KAC1E,IAAKm6B,EACH,OAAOj4B,EAILA,EAAKZ,UACPY,EAAKZ,SAASsD,IAAI,SAAC3B,GACjB23B,EAAKR,8BAA8Bn3B,EAAOk3B,EAAU74B,SAAS2B,EAAMlH,SAKvE,IAAM4G,EAAWT,EAAKS,SAKtB,OAJAA,EAAS42B,UAAYY,EAAUZ,UAC/B52B,EAAS23B,WAAaH,EAAUG,WAChC33B,EAAS43B,iBAAmBJ,EAAUI,iBAE/Br4B,IAOTzG,EAAQC,OAASoM,QAAQpM,OAAO,kBAC9Bk6B,EAAA,EAAel6B,OAAOK,KACtB+5B,EAAA,EAAwBp6B,OAAOK,KAC/Bi6B,EAAA,EAAwBt6B,OAAOK,KAC/Bk6B,EAAA,EAAwBv6B,OAAOK,QAElBgM,QAAQ,iBAAkBtM,GAG1B6B,EAAA,2DCxlBf,IAAA6B,EAAA9D,EAAA,GAAAw/B,EAAAx/B,EAAA,IAAAy/B,EAAAz/B,EAAA,KAAAwoB,EAAAxoB,EAAA,KAAA0/B,EAAA1/B,EAAA,KAAA2/B,EAAA3/B,EAAA,KAAA4/B,EAAA5/B,EAAA,KAGMI,GAqBNA,YAAsB,SAASy/B,GAC7B/7B,EAAA,EAAYisB,iBAAiB8P,EAAaL,EAAA,GAE1CxgC,OAAO6B,eAAeg/B,EAAa,UACjC7+B,IAAK,kBAAM6+B,EAAYxlB,aACvBhT,IAAK,SAACmtB,GACJqL,EAAYvlB,UAAUka,OAiB5Bp0B,MAAgB,SAASgH,GACvBtD,EAAA,EAAYisB,iBAAiB3oB,EAAOq4B,EAAA,GAEpCzgC,OAAO6B,eAAeuG,EAAO,WAC3BtG,cAAc,EAIdE,IAAK,kBAAMoG,EAAMwmB,cAIjBvmB,IAAK,SAACmtB,GACJptB,EAAMkjB,WAAWkK,MAIrBx1B,OAAO6B,eAAeuG,EAAO,WAC3BtG,cAAc,EAIdE,IAAK,kBAAMoG,EAAMklB,cAIjBjlB,IAAK,SAACmtB,GACJptB,EAAM04B,WAAWtL,OAmBvBp0B,aAAuB,SAASgH,EAAO4qB,GAErC,IAAI7H,SAKA4V,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAW94B,GAClB,IAAI+4B,EAAoC/4B,EAAMpG,IAAI,cAClD,IAAM2xB,EAAuCvrB,EAAMpG,IAAI,gBACvDoG,EAAMC,IAAI,eAAgB84B,GAAY,GAClCxN,GACFuN,EAAWvN,IAnDTyN,EA4DN,SAASC,EAAWj5B,GAClB,IAAI+4B,EAAoC/4B,EAAMpG,IAAI,cAClD,IAAM2xB,EAAuCvrB,EAAMpG,IAAI,gBACvDoG,EAAMC,IAAI,eAAgB84B,GAAY,GAClCxN,GACF0N,EAAW1N,IAtDf,GATAvrB,EAAMC,IAAI,aAAc,GAAG,GAEvBD,aAAiBohB,EAAA,GACnBphB,EAAMykB,YAAYyU,GAAG,MAAO,SAACC,GACVA,EAAQhS,QAChBlnB,IAAI,eAAgBD,KAI7BA,aAAiBs4B,EAAA,EAAc,CAEjC,GAAe,QADfvV,EAAS/iB,EAAM+mB,aAEb,OACShE,aAAkByV,EAAA,GAC3BG,GAAmB,iBACnBC,GAAmB,cAAe,kBACzB7V,aAAkBwV,EAAA,GAC3BI,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnCl8B,EAAA,EAAYqF,KAAK,2BAGnBghB,EAAOmW,GAAGP,EAAiB,WACzBE,EAAoB74B,GACpB4qB,EAAOwO,gBAGTrW,EAAOmW,GAAGN,EAAiB,WACzBI,EAAoBh5B,GACpB4qB,EAAOwO,gBAIXxhC,OAAO6B,eAAeuG,EAAO,WAC3BtG,cAAc,EACdE,IAAK,kBAA6BoG,EAAMpG,IAAI,cAAiB,OAiClDiB,EAAA,oFCnLf,IAAM7B,aAkBJ,SAAAA,EAAYkE,EAAWm8B,EAAiBC,EAAuBC,EAC7DC,gGAAiBh0B,CAAAjI,KAAAvE,GAEjB,IAAMuM,EACJrI,EAAUY,IAAI,oBACZZ,EAAUtD,IAAI,uBAMlB2D,KAAKk8B,aAAeJ,EAAgB72B,WAMpCjF,KAAKm8B,uBAAyBJ,EAM9B/7B,KAAKo8B,aAAeJ,EAMpBh8B,KAAKq8B,QAAUJ,EAMfj8B,KAAKs8B,YAA2Bp8B,IAAlB8H,EAAQu0B,MAAsBv0B,EAAQu0B,MAAQ,GAW5Dv8B,KAAKw8B,sBAA+Ct8B,IAA5B8H,EAAQy0B,iBAC9Bz0B,EAAQy0B,gBAMVz8B,KAAK08B,kBAAqCx8B,IAAtB8H,EAAQ20B,UAC1B30B,EAAQ20B,UAAY,EAOtB38B,KAAK48B,oBA/EH,OAAAnhC,EAAAohC,SAAA,uFAAAphC,EAAAnB,UAsFJwiC,MAtFI,SAsFE90B,GAEJhI,KAAK0sB,QAGL,IAAIqQ,cACwB78B,IAAxB8H,EAAQg1B,kBACyB98B,IAAjC8H,EAAQ+0B,uBAEVA,EAAuB/8B,KAAKo8B,aAAaa,wBACvCj9B,KAAKk8B,aAAa/U,WAClBnf,EAAQpD,MAMZ,IAAM23B,OAA0Br8B,IAAlB8H,EAAQu0B,MAAsBv0B,EAAQu0B,MAAQv8B,KAAKs8B,OACjE1Q,EAAA,EAAa5jB,GACX+0B,qBAAsBA,EACtBR,MAAOA,EACPW,YAAal9B,KAAK08B,aAClBS,SAAUn9B,KAAKw8B,mBAEjBx8B,KAAKq8B,QAAQe,SAAU,EACvBp9B,KAAKo8B,aAAaU,MAAM90B,GAASrE,KAAK3D,KAAKq9B,cAAcrgC,KAAKgD,QA/G5DvE,EAAAnB,UAuHJoyB,MAvHI,WAwHF1sB,KAAKq8B,QAAQiB,MAAQ,EACrB,IAAA3wB,EAAqB3M,KAAKq8B,QAAQkB,QAAlC3wB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAhCipB,EAAgCtY,EACzCsY,EAAO7H,SAASzjB,OAAS,EACzBsrB,EAAO4X,SAAU,EACjB5X,EAAOgY,SAAU,EACjBhY,EAAOiY,gBAAiB,EACxBjY,EAAOkY,uBAAoBx9B,EAE7BF,KAAKq8B,QAAQkB,QAAQrjC,OAAS,EAC9B8F,KAAKq8B,QAAQe,SAAU,GAjIrB3hC,EAAAnB,UA0IJ+iC,cA1II,SA0IUz5B,GAAU,IAAAvB,EAAArC,KAClBs9B,EAAQ,EADUK,EAAA,SAIXC,GACT,IAAM/X,EAAKgY,OAAOD,GACZjvB,EAAatM,EAAK85B,uBAAuBpM,cAAclK,GACzDtgB,EAAQoJ,EAAW5S,KACvBoD,EAAA,EAAYmE,OAAOqL,GAEnB,IAAMmvB,EAAoBl6B,EAASiiB,GAC7BlI,EAAWmgB,EAAkBngB,SAC7B4e,EAAQuB,EAAkBvB,MAC1BkB,GAAuD,IAAtCK,EAAkBC,gBACnCL,EAAoBI,EAAkBJ,kBAEtCM,KAwBN,IAAK,IAAM3gC,KAvBXsgB,EAAS3a,QAAQ,SAACuV,GAChB,IAAMlb,EAAO8B,EAAA,EAAYqe,aAAajF,EAAQlc,IAAI,uBAKlD,GAJK2hC,EAAsB3gC,KACzB2gC,EAAsB3gC,OAGpBsR,EAAWJ,YAAcI,EAAWJ,WAAWrU,OAAQ,CACzD,IAAMkjB,EAAa7E,EAAQ8E,gBACrB4gB,KACNtvB,EAAWJ,WAAWvL,QAAQ,SAACsN,GACzBA,EAAU4tB,OACZD,EAAmB3tB,EAAU4tB,OAAS9gB,EAAW9M,EAAUvU,MAC3Dwc,EAAQ4lB,MAAM7tB,EAAUvU,MAAmB,IAG3CkiC,EAAmB3tB,EAAUvU,MAAQqhB,EAAW9M,EAAUvU,QAG9Dwc,EAAQ6lB,cAAcH,GAAiC,GAEzDD,EAAsB3gC,GAAMjD,KAAKme,KAGhBylB,EAAuB,CACxCz4B,EAAQlI,GAAckI,EACtB,IAAM84B,EAAiBL,EAAsB3gC,GAC7CgF,EAAKg6B,QAAQkB,QAAQnjC,MACnBujB,SAAU0gB,EACVxY,GAAIA,EACJtgB,MAAOA,EACPg3B,MAAOA,EACPa,SAAS,EACTI,SAAS,EACTC,eAAgBA,EAChBC,kBAAmBA,IAErBJ,GAAS3f,EAASzjB,SAjDtB,IAAK,IAAM0jC,KAASh6B,EAAU+5B,EAAnBC,GAsDX59B,KAAKq8B,QAAQiB,MAAQA,EACrBt9B,KAAKq8B,QAAQe,SAAU,GArMrB3hC,KA8MNA,EAAQC,OAASoM,QAAQpM,OAAO,kBAC9B4iC,EAAA,EAA0B5iC,OAAOK,KACjCwiC,EAAA,EAAqB7iC,OAAOK,KAC5ByiC,EAAA,EAAiB9iC,OAAOK,OAE1BN,EAAQC,OAAOqM,QAAQ,iBAAkBtM,GAOzCA,EAAQC,OAAOa,MAAM,mBACnBghC,WACAD,MAAO,EACPF,SAAS,IAII9/B,EAAA,kCC1Of,IAAA6B,EAAA9D,EAAA,GAAAojC,EAAApjC,EAAA,KAAAgE,EAAAhE,EAAA,GAkBMI,EAAU,SAAS4b,EAASvX,GAMhCE,KAAKsX,SAAWD,EAMhBrX,KAAK02B,gBAAkB52B,EAEvB2+B,EAAA,EAAajkC,KAAKwF,qFAGpBX,EAAA,EAAgB5D,EAASgjC,EAAA,GAYzBhjC,EAAQnB,UAAUokC,gBAAkB,SAAS5tB,EAAMmc,EAAY0R,EAAkBC,GAC/E,IAAMC,EAAO,IAAIC,KAAKhuB,GAChBiuB,EAAMH,EAAY,WAAQ1+B,EAG5B8+B,EAAiB,OACjBC,EAAkB,UAClBC,EAAgB,aAGpB,IAAKP,EAAkB,CACrB,IAAM7+B,EAAiBE,KAAK02B,gBAC5BsI,EAAiBl/B,EAAewF,UAAU,QAC1C25B,EAAkBn/B,EAAewF,UAAU,UAC3C45B,EAAgBp/B,EAAewF,UAAU,YAG3C,OAAQ2nB,GACN,IAAK,OACH,OAAOjtB,KAAKsX,SAAS,OAAdtX,CAAsB6+B,EAAMG,EAAgBD,GACrD,IAAK,QACH,OAAO/+B,KAAKsX,SAAS,OAAdtX,CAAsB6+B,EAAMI,EAAiBF,GACtD,IAAK,MACH,OAAO/+B,KAAKsX,SAAS,OAAdtX,CAAsB6+B,EAAMK,EAAeH,GACpD,QAEE,OAAOF,EAAKM,cAAc/Z,QAAQ,UAAW,MAcnD3pB,EAAQnB,UAAU8kC,mBAAqB,SAASC,EAAiBC,EAAOV,GAEtE,OADAz/B,EAAA,EAAYmE,YAAsCpD,IAA/Bm/B,EAAgBpS,YACN,UAAzBoS,EAAgBE,MAClBpgC,EAAA,EAAYmE,YAAqBpD,IAAdo/B,EAAMpuB,KAEpBlR,KAAK0+B,gBAAgBY,EAAMnuB,MAAOkuB,EAAgBpS,YAAY,EAAM2R,GADzE,IAEI5+B,KAAK0+B,gBAAgBY,EAAMpuB,IAAKmuB,EAAgBpS,YAAY,EAAM2R,IAG/D5+B,KAAK0+B,gBAAgBY,EAAMnuB,MAAOkuB,EAAgBpS,YAAY,EAAM2R,KAQ/EnjC,EAAQC,OAASoM,QAAQpM,OAAO,eAC9B+iC,EAAA,EAAa/iC,OAAOK,QAEPgM,QAAQ,cAAetM,GAGvB6B,EAAA,kCC9Gf,IAAAkiC,EAAAnkC,EAAA,IAAAokC,EAAApkC,EAAA,KAKMI,EAAUqM,QAAQpM,OAAO,yBAoB/BD,EAAQikC,QAAU,SAASroB,GACzB,IAAMsoB,EAAetoB,EAAQ,UACvBuoB,EAAW,SAASC,GACxB,IAAMzlB,EAAOulB,EAAaE,EAAO,GACjC,OAAOzlB,SAAwBA,EAAS,IAG1C,OADAwlB,EAAA,WAAwB,EACjBA,GAPTnkC,EAAQikC,4BAURjkC,EAAQyJ,OAAO,cAAezJ,EAAQikC,SAsBtCjkC,EAAQoiC,OAAS,SAASiC,GACxB,IAAMC,EAAUD,EAAQE,eAwDxB,OAjDe,SAASC,EAAQC,GAC9B,IAAMC,EAAWJ,EAAQK,UACnBC,EAAaN,EAAQO,YAK3B,QAJsBpgC,IAAlBggC,IACFA,EAAgB,GAGdD,IAAWzjB,IACb,MAAO,IACF,GAAIyjB,KAAW,IACpB,MAAO,KACF,GAAe,IAAXA,EAET,MAAO,IAET,IAAMM,EAAON,EAAS,EACtBA,EAASrkB,KAAKuX,IAAI8M,GAElB,IAAMO,EAAaN,EAAgBtkB,KAAK6kB,MAAM7kB,KAAK8kB,IAAIT,GAAUrkB,KAAK8kB,IAAI,KAAO,EAC3EC,EAAS/kB,KAAK0X,IAAI,GAAIkN,GAC5BP,EAASrkB,KAAKmN,MAAMkX,EAASU,GAC7B,IAAIC,EAAU,GACRC,EAAOjlB,KAAK6kB,MAAMR,EAASU,GAEjC,GAAIH,EAAa,EAAG,CAGlB,IAFA,IAAIM,KAAgBb,EAEba,EAAW5mC,OAASsmC,GACzBM,MAAiBA,EAGnB,IADAF,EAAUE,EAAW5e,UAAU4e,EAAW5mC,OAASsmC,GACZ,MAAhCI,EAAQA,EAAQ1mC,OAAS,IAC9B0mC,EAAUA,EAAQ1e,UAAU,EAAG0e,EAAQ1mC,OAAS,GAMpD,IAFA,IAAM+9B,KACF8I,KAAcF,EACXE,EAAS7mC,OAAS,GAAG,CAC1B,IAAMssB,EAAQua,EAAS7mC,OAAS,EAChC+9B,EAAOpf,QAAQkoB,EAAS7e,UAAUsE,IAClCua,EAAWA,EAAS7e,UAAU,EAAGsE,GAInC,OAFAyR,EAAOpf,QAAQkoB,IAEPR,EAAO,IAAM,IAAMtI,EAAO7wB,KAAK+4B,IAClB,IAAnBS,EAAQ1mC,OAAe,GAAKmmC,EAAaO,KAtD/CnlC,EAAQoiC,2BA4DRpiC,EAAQyJ,OAAO,aAAczJ,EAAQoiC,QAwBrCpiC,EAAQulC,WAAa,SAAS3pB,GAC5B,IAAMsoB,EAAetoB,EAAQ,cACvB4pB,GAAkB,GAAI,IAAK,IAAK,IAAK,IAAK,KAC1CC,GAAgB,GAAI,KAAM,KAAM,KAAM,KAAM,MAgClD,OAxBe,SAASjB,EAAQkB,EAAU7d,EAAU4c,QACjChgC,IAAbihC,IACFA,EAAW,IAEb,IAAIC,EAAU,IACVC,EAASJ,EACI,WAAb3d,EACF8d,EAAU,IACY,WAAb9d,IACT8d,EAAU,KACVC,EAASH,GAKX,IAFA,IAAI1a,EAAQ,EACN8a,EAAYD,EAAOnnC,OAAS,EAC3B+lC,GAAUmB,GAAW5a,EAAQ8a,GAClCrB,GAAkBmB,EAClB5a,IAGF,IAAM+a,EAAUF,EAAO7a,GAAS2a,EAC1BK,EAA0B,GAAlBD,EAAQrnC,OAAc,GAAK,IACzC,OAAOylC,EAAaM,EAAQC,GAAiBsB,EAAQD,IAjCzD9lC,EAAQulC,+BAsCRvlC,EAAQyJ,OAAO,iBAAkBzJ,EAAQulC,YAmCzCvlC,EAAQgmC,kBAAoB,SAASpqB,GAoBnC,OATiB,SAASyF,EAAa4kB,EAAoB9N,GACzD,IAAM+N,EAAW/N,GAA8B,UAC3C9uB,EAAIgY,EAAY,GAChBwD,EAAIxD,EAAY,GACd8kB,EAAoD,EAAnCC,SAASH,EAAoB,IAGpD,OAFA58B,EAAIuS,EAAQ,SAARA,CAAkBvS,EAAG88B,GACzBthB,EAAIjJ,EAAQ,SAARA,CAAkBiJ,EAAGshB,GAClBD,EAASvc,QAAQ,MAAOtgB,GAAGsgB,QAAQ,MAAO9E,KAlBrD7kB,EAAQgmC,sCAuBRhmC,EAAQyJ,OAAO,wBAAyBzJ,EAAQgmC,mBAqBhDhmC,EAAQqmC,eAAiB,WACvB,IAAMC,EAAsB,SAASC,EAASC,EAAaL,GACzD,IAAMM,EAAoB1C,EAAA,EAAcwC,EAAU,IAAK,KAAO,IACxDG,EAAMvmB,KAAKuX,IAAI,KAAO+O,GACtBpmC,EAAI8f,KAAK6kB,MAAM0B,EAAM,MACrBvmC,EAAIggB,KAAK6kB,MAAO0B,EAAM,GAAM,IAC5B7mC,EAAK6mC,EAAM,GACjB,OAAUrmC,EAAV,KACE2jC,EAAA,EAAmB7jC,EAAG,GADxB,KAEE6jC,EAAA,EAAmBnkC,EAAG,EAAGsmC,GAF3B,KAGEK,EAAYG,OAAOF,EAAoB,EAAI,EAAI,IAwBnD,OAXiB,SAASplB,EAAa4kB,EAAoB9N,GACzD,IAAMgO,EAAoD,EAAnCC,SAASH,EAAoB,IAE9CC,EAAW/N,GAA8B,UAEzCyO,EAAON,EAAoBjlB,EAAY,GAAI,KAAM8kB,GACjDU,EAAOP,EAAoBjlB,EAAY,GAAI,KAAM8kB,GAEvD,OAAOD,EAASvc,QAAQ,MAAOid,GAAMjd,QAAQ,MAAOkd,KAMxD7mC,EAAQyJ,OAAO,qBAAsBzJ,EAAQqmC,gBAiB7CrmC,EAAQ8mC,gBAAkB,SAASC,GACjC,OAAO,SAASC,GACd,YAAcviC,IAAVuiC,GAAiC,OAAVA,EAClBD,EAAKE,YAAL,GAAoBD,GAEpBD,EAAKE,YAAY,YAL9BjnC,EAAQ8mC,iCAUR9mC,EAAQyJ,OAAO,gBAAiBzJ,EAAQ8mC,iBAoBxC9mC,EAAQknC,SAAW,SAAS7iC,GAE1B,IAAM8iC,EAAYvoC,OAAOwoC,QACvBC,QAAS91B,OAAO,WAChB+1B,QAAS/1B,OAAO,WAChBg2B,MAAOh2B,OAAO,SACdi2B,KAAMj2B,OAAO,UAQTk2B,EAAY,SAASC,EAAQtC,GACjC,IAAIuC,EAAgB,GACpB,OAAQvC,GACN,KAAK+B,EAAUE,QACbM,EAAgBtjC,EAAeujC,UAAUF,EAAQ,SAAU,WAC3D,MACF,KAAKP,EAAUG,QACbK,EAAgBtjC,EAAeujC,UAAUF,EAAQ,SAAU,WAC3D,MACF,KAAKP,EAAUI,MACbI,EAAgBtjC,EAAeujC,UAAUF,EAAQ,OAAQ,SACzD,MACF,KAAKP,EAAUK,KACbG,EAAgBtjC,EAAeujC,UAAUF,EAAQ,MAAO,QAK5D,OAAUA,EAAV,IAAoBC,GAiDtB,OA1Ce,SAAS/iB,GAKtB,IAAIijB,SACJ,IAJAjjB,EAAWzE,KAAKmN,MAAM1I,IAIP,GACb,OAAO6iB,EAAU7iB,EAAUuiB,EAAUE,SAIvC,IAAIS,EAAYljB,EAAW,GAE3B,OADAA,EAAWzE,KAAK6kB,MAAMpgB,EAAW,KAClB,IACbijB,EAASJ,EAAU7iB,EAAUuiB,EAAUG,SACnCQ,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUE,UAExCQ,IAITC,EAAYljB,EAAW,IACvBA,EAAWzE,KAAK6kB,MAAMpgB,EAAW,KAClB,IACbijB,EAASJ,EAAU7iB,EAAUuiB,EAAUI,OACnCO,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUG,UAExCO,IAITC,EAAYljB,EAAW,GACvBA,EAAWzE,KAAK6kB,MAAMpgB,EAAW,IACjCijB,EAASJ,EAAU7iB,EAAUuiB,EAAUK,MACnCM,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUI,QAExCM,MA9EX7nC,EAAQknC,oCAoFRlnC,EAAQyJ,OAAO,eAAgBzJ,EAAQknC,UAGxBrlC,EAAA,sCC7af,IAAAkmC,EAAAnoC,EAAA,IAAAooC,EAAApoC,EAAA,GAAAqoC,EAAAroC,EAAA,IAAAsoC,EAAAtoC,EAAA,KAAAuoC,EAAAvoC,EAAA,GAAAwoC,EAAAxoC,EAAA,KAAAoE,EAAApE,EAAA,KA0BMI,EAAU,SAAS6xB,EAAYztB,EAAiBikC,EACpDxN,GAAW,IAAAj0B,EAAArC,KAMXA,KAAKU,aAAeb,EAMpBG,KAAK+jC,aAAeD,EAMpB9jC,KAAKgkC,kBAEL1N,EAAU1wB,sBAAsBjC,KAAK,SAACsgC,GACpC5hC,EAAK2hC,kBAAoBC,IAG3B3W,EAAWY,IAAI,uBAAwB,SAACtpB,EAAK4pB,EAAUe,GACrDltB,EAAK6hC,MAA2Bt/B,EAAM2qB,gJAkB1C9zB,EAAQnB,UAAU6pC,YAAc,SAAS3V,EAAU5pB,EAAKw/B,EAAgBC,GAItE,IAAI5hC,EAAQ,KAmBZ,YAlB+BvC,IAA3BsuB,EAAStsB,KAAKZ,UAA0BktB,EAAStsB,KAAKy3B,MAExDl3B,EAAQzC,KAAKskC,aAAa9V,EAAU5pB,EAAKw/B,EAAgBC,QACrBnkC,IAA3BsuB,EAAStsB,KAAKZ,UAA0BktB,EAASR,OAAO9rB,KAAKy3B,MAEtEl3B,EAAQzC,KAAKukC,yBAAyB/V,EAAU5pB,QACZ1E,IAA3BsuB,EAAStsB,KAAKZ,SAEvBtB,KAAKwkC,8BAA8BhW,EAAU5pB,GACjB,IAAnB4pB,EAASJ,OAAgBI,EAAStsB,KAAKy3B,QAEhDl3B,EAAQzC,KAAKskC,aAAa9V,EAAU5pB,EAAKw/B,EAAgBC,IAGvD5hC,GAAS+rB,EAAStsB,KAAKS,SAASsY,SAClCxY,EAAM04B,WAAW3M,EAAStsB,KAAKS,SAASsY,SAGnCxY,GAWThH,EAAQnB,UAAU4pC,MAAQ,SAASt/B,EAAK4pB,GAAU,IAAAzoB,EAAA/F,KAChDwuB,EAAS8B,mBAAmB,SAAC9B,GACvBA,EAAS/rB,QAAU+rB,EAAStsB,KAAKy3B,OACnC5zB,EAAK0+B,kBAA6DjW,EAAS/rB,MAAQ+rB,MAYzF/yB,EAAQnB,UAAUmqC,kBAAoB,SAAShiC,EAAO+rB,GACpD,IAAMpd,EAAiC,OAAxBod,EAASO,WACxB,GAA2B,SAAvBP,EAAStsB,KAAK7E,KAChBoF,EAAMkjB,WAAWvU,QACZ,GAAKod,EAAStsB,KAAKy3B,OAA4B,IAAnBnL,EAASJ,MAoB1CqV,EAAA,EAAYrY,iBAAiB3oB,EAAOohC,EAAA,GACpCphC,EAAMkjB,WAAWvU,OArBsC,CAEvDqyB,EAAA,EAAYrY,iBAAiB3oB,EAAOohC,EAAA,GACpC,IAAM5Z,KACNuE,EAAS8B,mBAAmB,SAAC9B,QACItuB,IAA3BsuB,EAAStsB,KAAKZ,UAAkD,OAAxBktB,EAASO,YACnD9E,EAAM7vB,KAAKo0B,EAAStsB,KAAKoC,UAGR,IAAjB2lB,EAAM/vB,QACRuI,EAAMkjB,YAAW,GAEgBljB,EAAM+mB,YAAa/D,cACpDP,OAAU+E,EAAMllB,UAAUqC,KAAK,OAEZ,IAAjB6iB,EAAM/vB,QACRuI,EAAMkjB,YAAW,KAwBvBlqB,EAAQnB,UAAUgqC,aAAe,SAAS9V,EAAU5pB,EAClDw/B,EAAgBC,GAChB,IAAMK,EAA+ClW,EAAStsB,KAC1DO,EAAQ,KACNkiC,EAAoBnW,EAASR,OAAOR,OAEtCoX,GAAmB,EAKvB,QAJ4C1kC,IAAxCwkC,EAAU/hC,SAASiiC,mBACrBA,EAAmBF,EAAU/hC,SAASiiC,kBAGpCD,EAAmB,CACrBliC,EAAQzC,KAAK6kC,sBAAsBrW,IAAYkW,EAAU/K,OAEzD,IAAMmL,EAA0B,EAAfT,EACjBD,EAAeld,YAAY6d,SAASD,EAAUriC,OAEzC,CAEL,IADuBzC,KAAKglC,qBAAqBxW,GAE/C/rB,EAAQzC,KAAK6kC,sBAAsBrW,GAAU,GAE3C/yB,EAAQkxB,SAAS6B,EAASR,QACjB9G,YAAY6d,SAAS,EAAGtiC,GAKvC,OADAA,EAAMC,IAAI,mBAAoBkiC,GACvBniC,GAYThH,EAAQnB,UAAUuqC,sBAAwB,SAASrW,EACjDmL,GAAO,IAAA9yB,EAAA7G,KACHyC,SACEiiC,EAA+ClW,EAAStsB,KAC9D,GAAIy3B,EACFl3B,EAAQzC,KAAKU,aAAayE,uBACrB,CACL,IAAM8/B,EAAYjlC,KAAKklC,cAAc1W,GAC/BtqB,EAAYlE,KAAKgkC,kBAAkBU,EAAUxgC,WAAa,IAChEu/B,EAAA,EAAYngC,OAAOY,GACnBu/B,EAAA,EAAYngC,OAAOY,EAAUX,KAC7BkgC,EAAA,EAAYngC,OAAOY,EAAU7G,MAC7BomC,EAAA,EAAYngC,OAAOY,EAAUE,WAC7B3B,EAAQzC,KAAKU,aAAa2D,oBACxBH,EAAUX,IACV,GACAW,EAAUE,UACVF,EAAU7G,KACV4nC,OACA/kC,EACAgE,EAAUK,WAAa,kBAAoB,aAE7C,IAAI4gC,GAAoB,EACxB3W,EAAS8B,mBAAmB,SAAC8U,GAE3Bv+B,EAAKw+B,uBAAwDD,EAAKljC,KAAOO,GACrE2iC,EAAKljC,KAAKS,SAAS42B,YACrB6L,EAAKpW,SAAS,MAAM,GACpBnoB,EAAK49B,kBAAiDhiC,EAAQ2iC,GAC9DD,GAAoB,KAGxB1iC,EAAMkjB,WAAWwf,GACjB1iC,EAAMC,IAAI,gBAAiBgiC,EAAU3oC,MAEvC,OAAO0G,GAWThH,EAAQnB,UAAUiqC,yBAA2B,SAAS/V,EAAU5pB,GAC9D,IAAMxB,EAA8CorB,EAAStsB,KACzDO,SAEJ,GAAsB,SAAlBW,EAAS/F,KACXoF,EAAQzC,KAAKslC,iBAAsDliC,OAC9D,CACL,IAAMa,EAAkDb,EAClD6hC,EAAYjlC,KAAKklC,cAAc1W,GAC/BtqB,EAAYlE,KAAKgkC,kBAAuC//B,EAAYC,WAC1Eu/B,EAAA,EAAYngC,OAAOY,GACnBu/B,EAAA,EAAYngC,OAAOY,EAAUX,KAC7BkgC,EAAA,EAAYngC,OAAOY,EAAU7G,MAC7BomC,EAAA,EAAYngC,OAAOW,EAAYK,QAC/Bm/B,EAAA,EAAYngC,OAAOY,EAAUE,WAC7B3B,EAAQzC,KAAKU,aAAa2D,oBACxBH,EAAUX,IACVU,EAAYK,OACZJ,EAAUE,UACVF,EAAU7G,KACV4nC,OACA/kC,EACAgE,EAAUK,WAAa,kBAAoB,aAI/C9B,EAAMC,IAAI,gBAAiBU,EAASrH,MACpCiE,KAAKqlC,uBAAuBjiC,EAAUX,GACtC,IAAM8iC,GAA0C,IAAhCniC,EAAST,SAAS42B,UASlC,OARIgM,GACF/W,EAASQ,SAAS,MAAM,GAE1BvsB,EAAMkjB,WAAW4f,GAGf9pC,EAAQkxB,SAAS6B,EAASR,QACjB9G,YAAY6d,SAAS,EAAGtiC,GAC5BA,GAYThH,EAAQnB,UAAUkqC,8BAAgC,SAAShW,EAAU5pB,GACnE,IAAM4gC,EAA8ChX,EAAStsB,KACvDujC,EAAkBzlC,KAAK0lC,wBAAwBlX,GACrDiV,EAAA,EAAYngC,OAAOmiC,GACnB,IAAMhjC,EAAuCgjC,EAAgBhjC,MAC7DghC,EAAA,EAAYrY,iBAAiB3oB,EAAOohC,EAAA,GAEpC7jC,KAAKqlC,uBAAuBG,EAAU/iC,GAClC+iC,EAAS7iC,SAAS42B,WACpB/K,EAASQ,SAAS,MAAM,GACxBhvB,KAAKykC,kBAAkBhiC,EAAOgjC,IAE9BjX,EAASR,OAAOoB,gBAYpB3zB,EAAQnB,UAAUgrC,iBAAmB,SAASjiC,GAC5C,IAAMsiC,EAAW,IAAIlmC,EAAA,EAQrB,OAPAgkC,EAAA,EAAYngC,OAAOD,EAAaE,KAChCkgC,EAAA,EAAYngC,OAAOD,EAAaZ,OAChCzC,KAAKU,aAAa8C,iCAAiCH,EAAaE,IAC9DF,EAAaZ,MAAOY,EAAaI,UAAWJ,EAAaT,YAAYe,KAAK,SAAClB,GAC3EkjC,EAASrf,UAAU7jB,EAAM+mB,aACzBmc,EAASjjC,IAAI,qBAAsBD,EAAMpG,IAAI,yBAExCspC,GAUTlqC,EAAQnB,UAAU+qC,uBAAyB,SAASG,EAAU/iC,GAC5D,IAAMojB,EAAK+d,EAAA,EAAc4B,GACnBI,EAAiBnjC,EAAMpG,IAAI,sBAKjC,GAJAupC,EAAexrC,KAAKyrB,GACpBpjB,EAAMC,IAAI,iBAAkBkjC,GAETJ,EAAS7iC,SAASkjC,WACrB,CACd,IAAMC,EAAcrjC,EAAMpG,IAAI,mBAC9BypC,EAAY1rC,KAAKorC,EAAS7iC,SAASkjC,YACnCpjC,EAAMC,IAAI,cAAeojC,KAY7BrqC,EAAQnB,UAAU4qC,cAAgB,SAAS1W,GACzC,IAAIuX,SACAd,SACE/iC,EAAOssB,EAAStsB,KAWtB,GAVIA,EAAK4O,KACPi1B,EAAU7jC,EAAK4O,KACN5O,EAAKZ,UACdktB,EAAS8B,mBAAmB,SAAC9B,GAC3B,QAA+BtuB,IAA3BsuB,EAAStsB,KAAKZ,UAA0BktB,EAAStsB,KAAK4O,KAExD,OADAi1B,EAAUvX,EAAStsB,KAAK4O,KACjB4yB,EAAA,EAAwBxT,gBAAgBC,OAIjD4V,EAAS,CACX,IAAMC,EAAahmC,KAAK+jC,aAAakC,WAAWF,GAA7B,OACnBd,EAAYjlC,KAAK+jC,aAAa3E,mBAAmB2G,GAC/C50B,MAAO60B,EAAW,IAAMA,EACxB90B,IAAK80B,EAAW,KAGpB,OAAOf,GAUTxpC,EAAQnB,UAAU0qC,qBAAuB,SAASxW,GAChD,IAAIyB,EAAOzB,EAASR,OAChBkY,GAAoB,EACxB,GACEA,GAAwC,IAApBjW,EAAK/tB,KAAKy3B,MAC9B1J,EAAOA,EAAKjC,aAEPiC,EAAKjC,SAAWkY,GACvB,OAAOA,GAUTzqC,EAAQnB,UAAUorC,wBAA0B,SAC1ClX,GAEA,IADA,IAAIyB,EAAOzB,GACHyB,EAAKjC,OAAOR,QAClByC,EAAOA,EAAKjC,OAEd,OAAOiC,GAUTx0B,EAAQkxB,SAAW,SAAS6B,GAG1B,IAFA,IAAIyB,EAAOzB,EACP/rB,EAAQ,MACJwtB,EAAKzC,QAAoB,OAAV/qB,GACjBwtB,EAAKxtB,QACPA,EAAQwtB,EAAKxtB,OAEfwtB,EAAOA,EAAKjC,OAEd,OAAOvrB,IAOThH,EAAQC,OAASoM,QAAQpM,OAAO,uBAC9B8nC,EAAA,EAAe9nC,OAAOK,KACtB2nC,EAAA,EAAwBhoC,OAAOK,KAC/B4nC,EAAA,EAAgBjoC,OAAOK,QAEVgM,QAAQ,sBAAuBtM,GAG/B6B,EAAA,uCCpcf,IAAA6B,EAAA9D,EAAA,GAiCMI,EAAU,SAAS6xB,GAMvBttB,KAAKgsB,WAOLhsB,KAAKmmC,OAAS7Y,qDAYhB7xB,EAAQnB,UAAU8rC,aAAe,SAASpf,EAAWqf,EACnDC,GAAqB,IAAAjkC,EAAArC,KACjBumC,EAAUvmC,KAAKgsB,QAAQhF,GACtBuf,IACHA,EAAUvmC,KAAKgsB,QAAQhF,OAGzB,IAAMwf,EAAWxmC,KAAKmmC,OAAOvY,OAC3ByY,EAAK3wB,UACL,SAACE,EAAQiY,GACHjY,IAAWiY,IAGXjY,EACFvT,EAAKokC,iBAAiBzf,EAAWqf,GAEjChkC,EAAKqkC,iBAAiB1f,MAU5B,GANAuf,EAAQnsC,MACNisC,KAAMA,EACNM,YAAaL,IAAuB,EACpCE,SAAUA,IAGRrnC,EAAA,EAAYynC,eAAgB,CAE9B,IAAIC,EAAe,EACnBN,EAAQvjC,QAAQ,SAAC8jC,GACXA,EAAMH,aACRE,MAGJ1nC,EAAA,EAAYmE,OACVujC,GAAgB,EADlB,uCAC4D7f,KAWhEvrB,EAAQnB,UAAUysC,eAAiB,SAAS/f,EAAWqf,GACrD,IAAME,EAAUvmC,KAAKgsB,QAAQhF,GAC7B,GAAIuf,EACF,IAAK,IAAIvsC,EAAI,EAAGA,EAAIusC,EAAQrsC,OAAQF,IAClC,GAAIusC,EAAQvsC,GAAGqsC,MAAQA,EAAM,CAC3BE,EAAQvsC,GAAGwsC,WACXD,EAAQnrC,OAAOpB,EAAG,GAClB,QAYRyB,EAAQnB,UAAU0sC,gBAAkB,SAAShgB,GAC3C,IAAMuf,EAAUvmC,KAAKgsB,QAAQhF,GAC7B,GAAIuf,EAAS,CACX,IAAK,IAAIvsC,EAAI,EAAGA,EAAIusC,EAAQrsC,OAAQF,IAClCusC,EAAQvsC,GAAGwsC,kBAENxmC,KAAKgsB,QAAQhF,KAUxBvrB,EAAQnB,UAAU2sC,aAAe,SAASZ,GACxCA,EAAK1wB,WAAU,IASjBla,EAAQnB,UAAU4sC,eAAiB,SAASb,GAC1CA,EAAK1wB,WAAU,IAWjBla,EAAQnB,UAAUmsC,iBAAmB,SAASzf,EAAWqf,GAEvD,IADA,IAAME,EAAUvmC,KAAKgsB,QAAQhF,GACpBhtB,EAAI,EAAGA,EAAIusC,EAAQrsC,OAAQF,IAC9BqsC,GAAQE,EAAQvsC,GAAGqsC,MACrBE,EAAQvsC,GAAGqsC,KAAK1wB,WAAU,IAYhCla,EAAQnB,UAAUosC,iBAAmB,SAAS1f,GAK5C,IAJA,IAAMuf,EAAUvmC,KAAKgsB,QAAQhF,GACzB2f,EAAc,KACdQ,GAAgB,EAEXntC,EAAI,EAAGA,EAAIusC,EAAQrsC,OAAQF,IAClCmtC,EAAgBA,GAAiBZ,EAAQvsC,GAAGqsC,KAAK3wB,YAE7C6wB,EAAQvsC,GAAG2sC,cACbA,EAAcJ,EAAQvsC,GAAGqsC,MAIxBc,GAAiC,OAAhBR,GACpBA,EAAYhxB,WAAU,KAK1Bla,EAAQC,OAASoM,QAAQpM,OAAO,2BACjBqM,QAAQ,sBAAuBtM,GAG/B6B,EAAA,kCCxMf,IAAA8pC,EAAA/rC,EAAA,GAcMI,EAAU,WAMduE,KAAKqnC,kBAYP5rC,EAAQnB,UAAUgtC,eAAiB,SAASnZ,EAAKvd,GAC1C5Q,KAAKqnC,cAAclZ,IACtBnuB,KAAKunC,iBAAiBpZ,GAExBnuB,KAAKqnC,cAAclZ,GAAK/zB,KAAkCwW,IAS5DnV,EAAQnB,UAAUktC,iBAAmB,SAASrZ,GAC5CnuB,KAAKunC,iBAAiBpZ,IAaxB1yB,EAAQnB,UAAUitC,iBAAmB,SAASpZ,GACvCnuB,KAAKqnC,cAAclZ,GAGlBnuB,KAAKqnC,cAAclZ,GAAKj0B,SAC1B8F,KAAKqnC,cAAclZ,GAAKnrB,QAAQokC,EAAA,GAChCpnC,KAAKqnC,cAAclZ,GAAKj0B,OAAS,GAJnC8F,KAAKqnC,cAAclZ,QAavB1yB,EAAQC,OAASoM,QAAQpM,OAAO,uBACjBqM,QAAQ,kBAAmBtM,GAG3B6B,EAAA,yCCpDAA,EAAA,GAdbqL,IAAK,KAKL8+B,IAAK,IAKLC,GAAI,iGChBN,IAiBeC,EAjBFlsC,YAQX,SAAAA,EAAYuM,GAAS,mGAAAC,CAAAjI,KAAAvE,GAEnBuM,EAAQ3K,KAAO2K,EAAQ3K,MAAQuqC,EAAA,EAAwB/oC,sKAFpCqJ,CAAAlI,KAInBoqB,EAAA5vB,KAAAwF,KAAMgI,IAZJ,gUAAAqG,CAAA5S,EAAA2uB,GAAA3uB,EAAOA,CAAiBosC,EAAA,oBCA9B,IAoBeC,EApBFrsC,YASX,SAAAA,EAAYuM,GAAS,mGAAA+/B,CAAA/nC,KAAAvE,GAEnBuM,EAAQwK,SAAWxK,EAAQwK,UAAYq1B,EAAA,EAAap0B,aAAaS,KACjElM,EAAQ3K,KAAOuqC,EAAA,EAAwB7pC,sKAHpBiqC,CAAAhoC,KAKnBoqB,EAAA5vB,KAAAwF,KAAMgI,IAdJ,gUAAAigC,CAAAxsC,EAAA2uB,GAAA3uB,EAAOA,CAAiBosC,EAAA,oCCc9B,IAAMK,EAAOzsC,WAcX,SAAAA,EAAYqE,EAAgBqoC,EAAmBrE,gGAAasE,CAAApoC,KAAAvE,GAM1DuE,KAAK02B,gBAAkB52B,EAMvBE,KAAKqoC,mBAAqBF,EAM1BnoC,KAAK+jC,aAAeD,EAhClB,OAAAroC,EAAAohC,SAAA,oDAAAphC,EAAAnB,UA0CJguC,0BA1CI,SA0CsB/5B,EAAYg6B,GACpC,IAAMC,KACN77B,EAAwB4B,EAAxB3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAzB+T,EAAyBpD,EAClCs7B,EAAMpuC,KAAK4F,KAAKyoC,wBAAwBn4B,EAAWi4B,IAErD,OAAOC,GA/CL/sC,EAAAnB,UAyDJmuC,wBAzDI,SAyDoBn4B,EAAWi4B,GAEjC,IAAIG,SACE91B,GAA4B,IAAjB21B,EAKXxsC,EAAOiE,KAAK02B,gBAAgBpxB,UAAUgL,EAAUvU,MAItD,OAAQuU,EAAUjT,MAChB,KAAKuqC,EAAA,EAAwB/oC,KAC7B,KAAK+oC,EAAA,EAAwB9oC,SAEzB4pC,EAAO,IAAIf,EADT/0B,GAEA7W,KAAMA,EACNyW,SAAUq1B,EAAA,EAAal0B,qBAAqBe,OAC5C3B,WACE80B,EAAA,EAAal0B,qBAAqBe,OAClCmzB,EAAA,EAAal0B,qBAAqBa,OAClCqzB,EAAA,EAAal0B,qBAAqBc,MAEpCxB,aAAc3C,EAAUvU,KACxBsB,KAAMiT,EAAUjT,OAIhBtB,KAAMA,EACNyW,SAAUq1B,EAAA,EAAal0B,qBAAqBC,OAC5CX,aAAc3C,EAAUvU,KACxBsB,KAAMiT,EAAUjT,OAGpB,MACF,KAAKuqC,EAAA,EAAwB5oC,SAC3B0pC,EAAO,IAAIC,EAAA,GACT5sC,KAAMA,EACNyW,SAAUq1B,EAAA,EAAazzB,oBAAoBG,OAC3CxB,WACE80B,EAAA,EAAazzB,oBAAoBC,SACjCwzB,EAAA,EAAazzB,oBAAoBE,WACjCuzB,EAAA,EAAazzB,oBAAoBG,QAEnCtB,aAAc3C,EAAUvU,KACxBsB,KAAMiT,EAAUjT,OAElB,MACF,KAAKuqC,EAAA,EAAwB3oC,OAEzBypC,EADE91B,EACK,IAAIi1B,EAAA,GACT9rC,KAAMA,EACNyW,SAAUq1B,EAAA,EAAap0B,aAAaI,SACpCd,WACE80B,EAAA,EAAap0B,aAAaI,SAC1Bg0B,EAAA,EAAap0B,aAAaK,aAC1B+zB,EAAA,EAAap0B,aAAaM,yBAC1B8zB,EAAA,EAAap0B,aAAaO,YAC1B6zB,EAAA,EAAap0B,aAAaQ,wBAC1B4zB,EAAA,EAAap0B,aAAaU,cAE5BlB,aAAc3C,EAAUvU,KACxBsB,KAAMuqC,EAAA,EAAwB3oC,SAGzB,IAAI4oC,EAAA,GACT9rC,KAAMA,EACNyW,SAAUq1B,EAAA,EAAap0B,aAAaC,QACpCT,aAAc3C,EAAUvU,KACxBsB,KAAMuqC,EAAA,EAAwB3oC,SAGlC,MACF,KAAK2oC,EAAA,EAAwB1oC,OAC3BwpC,EAAO,IAAIE,EAAA,GACTC,QAASC,EAAA,EAAYxlC,OAAOgN,EAAUu4B,SACtC9sC,KAAMA,EACNkX,aAAc3C,EAAUvU,OAE1B,MACF,QAEI2sC,EAAO,IAAIZ,EADTl1B,GAEA7W,KAAMA,EACNyW,SAAUq1B,EAAA,EAAap0B,aAAaS,KACpCnB,WACE80B,EAAA,EAAap0B,aAAaS,KAC1B2zB,EAAA,EAAap0B,aAAaI,SAC1Bg0B,EAAA,EAAap0B,aAAaU,cAE5BlB,aAAc3C,EAAUvU,OAIxBA,KAAMA,EACNyW,SAAUq1B,EAAA,EAAap0B,aAAaS,KACpCjB,aAAc3C,EAAUvU,OAMhC,OAAO2sC,GAhKLjtC,EAAAnB,UAwKJyuC,YAxKI,SAwKQC,GACV,IAAMR,KACNl5B,EAAsB05B,EAAtBz5B,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAmC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAxByL,EAAwByH,EACjC+4B,EAAMpuC,KAAK4F,KAAKipC,WAAWjhC,IAE7B,OAAOwgC,GA7KL/sC,EAAAnB,UAqLJ2uC,WArLI,SAqLOjhC,GACT,IAAI0gC,SACJ,OAAQ1gC,EAAQ3K,MACd,KAAKuqC,EAAA,EAAwB/oC,KAC7B,KAAK+oC,EAAA,EAAwB9oC,SAC3B4pC,EAAO,IAAIf,EAAa3/B,GACxB,MACF,KAAK4/B,EAAA,EAAwB5oC,SAC3B0pC,EAAO,IAAIC,EAAA,EAAiB3gC,GAC5B,MACF,KAAK4/B,EAAA,EAAwB1oC,OAC3B,IAAMgqC,EACJlhC,EACF8gC,EAAA,EAAYxlC,OAAO4lC,EAAcL,SACjCH,EAAO,IAAIE,EAAA,EAAeM,GAC1B,MACF,QACER,EAAO,IAAIZ,EAAa9/B,GAG5B,OAAO0gC,GAzMLjtC,EAAAnB,UAmNJ6uC,UAnNI,SAmNMT,GAER,IAAInqB,SAEAnM,EAAas2B,EAAKt1B,gBACH,OAAfhB,IACFA,OAAalS,GAEf,IAWM8H,GACJoK,aACAQ,SAbe81B,EAAK91B,SAcpBN,cAb2C,OAAvBo2B,EAAKp2B,cAAyBo2B,EAAKp2B,mBACvDpS,EAaAnE,KAZW2sC,EAAK3sC,KAahByW,SAZiC,OAAlBk2B,EAAKl2B,SAAoBk2B,EAAKl2B,cAAWtS,EAaxD6S,UAZgB21B,EAAK31B,UAAY21B,EAAK31B,UAAU9V,MAAM,QAAKiD,EAa3D+S,aAZmBy1B,EAAKz1B,aAaxB5V,KAZyB,OAAdqrC,EAAKrrC,KAAgBqrC,EAAKrrC,UAAO6C,EAa5CwS,cAZ2C,OAAvBg2B,EAAKh2B,cAAyBg2B,EAAKh2B,mBACvDxS,GA8BF,OAhBIwoC,aAAgBf,EAClBppB,EAAQ,IAAIopB,EAAa3/B,GAChB0gC,aAAgBC,EAAA,GACzBpqB,EAAQ,IAAIoqB,EAAA,EAAiB3gC,IACvBuQ,QAAQ6lB,cACZp+B,KAAKqoC,mBAAmB7nB,wBAAwBkoB,EAAKnwB,UAE9CmwB,aAAgBE,EAAA,GACzB5gC,EAAQ6gC,QAAUH,EAAKG,QAAQ5rC,MAAM,GACrCshB,EAAQ,IAAIqqB,EAAA,EAAe5gC,IAE3BuW,EADSmqB,aAAgBZ,EACjB,IAAIA,EAAa9/B,GAEjB,IAAI6/B,EAAA,EAAa7/B,GAGpBuW,GAlQL9iB,EAAAnB,UA+QJ8uC,WA/QI,SA+QOC,EAAYC,GAEjBA,EAASl2B,kBAAoBi2B,EAAWj2B,iBAC1Ck2B,EAASj2B,cAAcg2B,EAAWj2B,iBAGhCk2B,EAASh3B,gBAAkB+2B,EAAW/2B,gBACxCg3B,EAASh3B,cAAgB+2B,EAAW/2B,eAGlCg3B,EAAS92B,WAAa62B,EAAW72B,WACnC82B,EAAS92B,SAAW62B,EAAW72B,UAG7B82B,EAAS52B,gBAAkB22B,EAAW32B,gBACxC42B,EAAS52B,cAAgB22B,EAAW32B,eAGlC22B,aAAsBV,EAAA,GACvBW,aAAoBX,EAAA,IAErB3oC,KAAKqoC,mBAAmB3nB,0BAA0B4oB,EAAS/wB,SAC3D+wB,EAAS/wB,QAAQ6lB,cACfp+B,KAAKqoC,mBAAmB7nB,wBAAwB6oB,EAAW9wB,YAtS7D9c,EAAAnB,UAgTJivC,eAhTI,SAgTWf,GAAO,IAAAnmC,EAAArC,KACpB,OAAOwoC,EAAM5jC,IAAI,SAAC8jC,GAEhB,OADuBrmC,EAAKmnC,cAAcd,MAlT1CjtC,EAAAnB,UA6TJkvC,cA7TI,SA6TUd,GACZ,IAAMe,GACJ1tC,KAAM2sC,EAAK3sC,KACXkX,aAAcy1B,EAAKz1B,aACnB5V,KAAMqrC,EAAKrrC,MAgCb,OA7BwB,OAApBqrC,EAAKt2B,aACPq3B,EAAIr3B,WAAas2B,EAAKt2B,YAGG,OAAvBs2B,EAAKp2B,gBACPm3B,EAAIn3B,cAAgBo2B,EAAKp2B,eAGL,OAAlBo2B,EAAKl2B,WACPi3B,EAAIj3B,SAAWk2B,EAAKl2B,UAGC,OAAnBk2B,EAAK31B,YACP02B,EAAI12B,UAAY21B,EAAK31B,UAAU9V,MAAM,IAGZ,OAAvByrC,EAAKh2B,gBACP+2B,EAAI/2B,cAAgBg2B,EAAKh2B,eAGvBg2B,aAAgBC,EAAA,IAClBc,EAAIpf,kBAAoBrqB,KAAKqoC,mBAAmB7nB,wBAC9CkoB,EAAKnwB,UAGLmwB,aAAgBE,EAAA,IAClBa,EAAIZ,QAAUH,EAAKG,SAGdY,GAjWLhuC,EAAAnB,UA4WJovC,aA5WI,SA4WS1hC,GAEX,IAAM2G,EAAiD3G,EAAQ2G,WAC3Dg7B,EAAa,KAEjB,GAAI3hC,EAAQ9C,OACVykC,EAAa3hC,EAAQ9C,WAChB,CACL,IAAMsjC,EAAQxgC,EAAQa,aAAe8F,EAAW9F,YAC1C+gC,KAEN,GAAIpB,GAASA,EAAMtuC,OACjB,KAAA2V,EAAmB24B,EAAnB14B,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA0B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAfmsC,EAAe14B,EAClB9K,EAASlF,KAAK6pC,sBAClBnB,EACA/5B,EACA3G,EAAQ8hC,SAEN5kC,GACF0kC,EAAWxvC,KAAK8K,IAKtB,IAAMhI,EAAYyR,EAAWlG,gBACH,IAAtBmhC,EAAW1vC,OACbyvC,EAAaC,EAAW,GACfA,EAAW1vC,QAAU,IAC1BgD,IAAc6sC,EAAA,EAAoBphC,IACpCghC,EAAaK,EAAA,IAAmBnvC,MAAM,KAAM+uC,GACnC1sC,IAAc6sC,EAAA,EAAoBrC,IAClCxqC,IAAc6sC,EAAA,EAAoBtC,MAE3CkC,EAAaK,EAAA,GAAkBnvC,MAAM,KAAM+uC,KAG3CD,GAAczsC,IAAc6sC,EAAA,EAAoBtC,MAClDkC,EAAaK,EAAA,IAAmBL,IAIpC,GAAI3hC,EAAQiiC,QAAS,CACnB,IAAMC,EAAalqC,KAAKmqC,gCAAgCx7B,GACpDu7B,IAEAP,EADEA,EACWK,EAAA,IAAmBnvC,MAC9B,MAEE8uC,EACAO,IAISA,GAKnB,GAAIliC,EAAQoiC,cAAe,CACzB,IAAMC,EAAmBrqC,KAAKsqC,sCAAsC37B,GAChE07B,IAEAV,EADEA,EACWK,EAAA,IAAmBnvC,MAC9B,MAEE8uC,EACAU,IAISA,GAKnB,OAAOV,GAvbLluC,EAAAnB,UA+bJiwC,mBA/bI,SA+beviC,GACjB,IAAIwiC,EAAe,KACbtlC,EAASlF,KAAK0pC,aAAa1hC,GACjC,GAAI9C,EAAQ,CACV,IAAMulC,EAAapwC,OAAAqwC,EAAA,EAAArwC,CAAY6K,GAE/BslC,GADsB,IAAIG,eACGC,kBAAkBH,GAEjD,OAAOD,GAvcL/uC,EAAAnB,UAkdJuvC,sBAldI,SAkdkBnB,EAAM/5B,EAAYk8B,GAEtC,IAAI3lC,EAAS,KAEP3I,EAAQmsC,EAAKnsC,MACnB,IAAKA,EACH,OAAO,KAGT,IAAM6V,EAAa7V,EAAM6V,WACnBE,EAAgB/V,EAAM+V,cACtBE,EAAWjW,EAAMiW,SACjBS,EAAe1W,EAAM0W,aACrBP,EAAgBnW,EAAMmW,cAEtBo4B,EAAOjD,EAAA,EAAap0B,aACpBs3B,EAAOlD,EAAA,EAAazzB,oBACpB42B,EAAOnD,EAAA,EAAal0B,qBAEpBs3B,GACJF,EAAK12B,SACL02B,EAAKz2B,WACLy2B,EAAKx2B,QAGD22B,GACJJ,EAAIh3B,aACJg3B,EAAI/2B,yBACJ+2B,EAAI92B,YACJ82B,EAAI72B,yBAGN,GAAIy0B,aAAgBf,EAAc,CAChC,IAAIwD,SACAC,SAEA54B,IAAaw4B,EAAKp3B,QACpBu3B,EAAa9wC,OAAAgxC,EAAA,EAAAhxC,CAAOiY,GAAe9E,OAAO,cAC1C49B,EAAW/wC,OAAAgxC,EAAA,EAAAhxC,CAAOqY,GAAelF,OAAO,eAC/BgF,IAAaw4B,EAAKt2B,QAC3By2B,EAAa9wC,OAAAgxC,EAAA,EAAAhxC,CACX+X,GACA5E,OACA,uBAEF49B,EAAW/wC,OAAAgxC,EAAA,EAAAhxC,CACT+X,GACAwiB,IACA,EAAG,QACH0W,SACA,EAAG,WACH99B,OACA,wBAEOgF,IAAaw4B,EAAKx2B,QAC3B22B,EAAa9wC,OAAAgxC,EAAA,EAAAhxC,CACX+X,GACA5E,OACA,cAGF49B,EAAW/wC,OAAAgxC,EAAA,EAAAhxC,CACT+X,GACAwiB,IACA,GAAI,SACJpnB,OACA,eAEOgF,IAAaw4B,EAAKv2B,OAE3B02B,EAAa,aACbC,EAAW/wC,OAAAgxC,EAAA,EAAAhxC,CACT+X,GACA5E,OACA,eAGA29B,GAAcC,IAChBlmC,EAAS8kC,EAAA,OACP/2B,EACAk4B,EACAC,SAGC,GAAI1C,aAAgBE,EAAA,EAAgB,CACzC,IAAM2C,EAAkB7C,EAAK6C,gBAC7B,GAA+B,IAA3BA,EAAgBrxC,OAClBgL,EAAS8kC,EAAA,QACP/2B,EACAs4B,EAAgB,SAEb,GAAIA,EAAgBrxC,QAAU,EAAG,CACtC,IAAM0vC,KACN15B,EAA6Bq7B,EAA7Bp7B,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA8C,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MAAA,IAAnCivC,EAAmCn7B,EAC5Cu5B,EAAWxvC,KACT4vC,EAAA,QACE/2B,EACAu4B,IAINtmC,EAAS8kC,EAAA,GAAkBnvC,MAAM,KAAM+uC,SAEpC,GAAI7mC,EAAA,EAAiBkoC,EAAcz4B,GAAW,CACnD,IAAMpJ,EAAeuF,EAAWvF,aAChC0/B,EAAA,EAAY1d,iBAAiBsd,EAAMC,EAAA,GACnC,IAAMntB,EAAWstB,EAAA,EAAYxlC,OAAOolC,EAAKltB,UACrChJ,IAAau4B,EAAK12B,SACpBnP,EAAS8kC,EAAA,SACP5gC,EACAoS,EACAqvB,GAEOr4B,IAAau4B,EAAKz2B,WAC3BpP,EAAS8kC,EAAA,WACP5gC,EACAoS,EACAqvB,GAEOr4B,IAAau4B,EAAKx2B,SAC3BrP,EAAS8kC,EAAA,OACP5gC,EACAoS,EACAqvB,SAGC,GAAI9nC,EAAA,EAAiBmoC,EAAc14B,GAAW,CACnD,IAAMi5B,EAAoB3C,EAAA,EAAY/tB,aAAa3I,GAC/CI,IAAas4B,EAAIh3B,aACnB5O,EAAS8kC,EAAA,YACP/2B,EACAw4B,GAEOj5B,IAAas4B,EAAI/2B,yBAC1B7O,EAAS8kC,EAAA,qBACP/2B,EACAw4B,GAEOj5B,IAAas4B,EAAI92B,YAC1B9O,EAAS8kC,EAAA,SACP/2B,EACAw4B,GAEOj5B,IAAas4B,EAAI72B,0BAC1B/O,EAAS8kC,EAAA,kBACP/2B,EACAw4B,SAGC,GAAIj5B,IAAas4B,EAAIp3B,QAC1BxO,EAAS8kC,EAAA,QACP/2B,EACAX,EACAI,QAEG,GAAIF,IAAas4B,EAAIj3B,SAC1B3O,EAAS8kC,EAAA,QACP/2B,EACAb,QAEG,GAAII,IAAas4B,EAAI52B,KAAM,CAChC,IAAMw3B,EAAmBC,OAAOv5B,GAC7BgT,QAAQ,KAAM,MACdA,QAAQ,MAAO,MACfA,QAAQ,MAAO,MAClBlgB,EAAS8kC,EAAA,KACP/2B,EADO,IAEHy4B,EAFG,IAGP,IACA,IACA,KACA,QAEOl5B,IAAas4B,EAAI32B,eAC1BjP,EAAS8kC,EAAA,WACP/2B,EACAb,IAIJ,OAAOlN,GAtoBLzJ,EAAAnB,UAipBJgwC,sCAjpBI,SAipBkC37B,GACpC,IAAM0C,EAAS1C,EAAWpG,wBACpB3F,EAAa+L,EAAW/L,WAExBgnC,KACN,IAAK,IAAMh5B,KAAOS,EAAQ,CACxB,IAAI9U,EAAQ8U,EAAOT,GAAKrU,MACV,OAAVA,QACsB2D,IAApB0C,EAAWgO,IAA0C,OAApBhO,EAAWgO,KAC9CrU,EAAQqG,EAAWgO,IAGT,OAAVrU,GACFqtC,EAAWxvC,KAAK4vC,EAAA,QAAuB34B,EAAOT,GAAKg7B,MAAOrvC,GAAO,IAGrE,OAA0B,IAAtBqtC,EAAW1vC,OACN0vC,EAAW,GACTA,EAAW1vC,QAAU,EACvB8vC,EAAA,IAAmBnvC,MAAM,KAAM+uC,GAEjC,MAtqBLnuC,EAAAnB,UAirBJ6vC,gCAjrBI,SAirB4Bx7B,GAC9B,IAAIzJ,EAAS,KACP6L,EAAQpC,EAAW2C,eACnBxG,EAAe6D,EAAW7D,aAC1B/O,EAAO4S,EAAWjE,kBAExB,GAAIqG,GAASjG,GAAgB/O,EAE3B,QAAkBmE,IAAd6Q,EAAMG,IAAmB,CAI3B,IAAM7L,EAASrF,KAAK+jC,aAAa3E,mBAC/Bt0B,EACAiG,GACAgH,MAAM,KAER7S,EAAS8kC,EAAA,OAAsBjuC,EAAMsJ,EAAO,GAAIA,EAAO,QAClD,CAKL,IAAM4nB,EAAaniB,EAAamiB,YAAc,UACxC1wB,EAAQyD,KAAK+jC,aAAa3E,mBAC9Bt0B,EACAiG,GAEE86B,SAEJ,OAAQ5e,GACN,IAAK,OACH4e,EAAYxxC,OAAAgxC,EAAA,EAAAhxC,CAAOkC,GAAOq4B,IAAI,EAAG,SAAS0W,SAAS,EAAG,WACtD,MACF,IAAK,QACHO,EAAYxxC,OAAAgxC,EAAA,EAAAhxC,CAAOkC,GAAOq4B,IAAI,EAAG,UAAU0W,SAAS,EAAG,WACvD,MACF,IAAK,MACHO,EAAYxxC,OAAAgxC,EAAA,EAAAhxC,CAAOkC,GAAOq4B,IAAI,EAAG,QAAQ0W,SAAS,EAAG,WAQzD,GAAIO,EAAW,CACb,IAAMC,EAAazxC,OAAAgxC,EAAA,EAAAhxC,CAAOkC,GAAOiR,OAAO,uBAClC49B,EAAWS,EAAUr+B,OAAO,uBAClCtI,EAAS8kC,EAAA,OAAsBjuC,EAAM+vC,EAAYV,IAKvD,OAAOlmC,GAvuBLzJ,EAAOA,GA+uBbysC,EAAQxsC,OAASoM,QAAQpM,OAAO,kBAC9BqwC,EAAA,EAAsBrwC,OAAOK,KAC7BiwC,EAAA,EAAgBtwC,OAAOK,OAEzBmsC,EAAQxsC,OAAOqM,QAAQ,iBAAkBmgC,GAG1B5qC,EAAA,qWClwBf,IAwFe2uC,EAxFFxwC,YAQX,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAAA,IAAA4G,mKAAA6F,CAAAlI,KAEnBmI,EAAA3N,KAAAwF,KAAMgI,IAFa,OAWnB3F,EAAK6pC,oBAAsBlkC,EAAQ2V,UAAY,IAAIwuB,EAAA,EAMnD9pC,EAAKknB,QAAU,IAAI6iB,EAAA,GACjBzuB,SAAUtb,EAAK6pC,oBACfG,OAAO,IAOThqC,EAAK6pB,OAAS,IAAIogB,EAAA,GAChB9mB,OAAQnjB,EAAKknB,UA3BIlnB,EARjB,gUAAAgM,CAAA5S,EAAA0M,GAAA0I,EAAApV,IAAAmV,IAAA,WAAAvU,IAAA,WAiDF,OAAO2D,KAAKksC,oBAAoB/kB,cAjD9BvW,IAAA,qBAAAvU,IAAA,WA8DF,OAAO2D,KAAKksC,uBA9DVt7B,IAAA,QAAAvU,IAAA,WAsEF,OAAO2D,KAAKksB,UAtEVtb,IAAA,SAAAvU,IAAA,WAmFF,OAAO2D,KAAKupB,QAAQrJ,gBAnFlBzkB,EAAOA,CAAiB8wC,EAAA,YCD9B,IAsFeC,EAtFF/wC,YAUX,SAAAA,EAAYuM,gGAASykC,CAAAzsC,KAAAvE,GAAA,IAAA4G,mKAAAqqC,CAAA1sC,KAEnB2sC,EAAAnyC,KAAAwF,KAAMgI,IAEA4kC,EAAW5kC,EAAQ4kC,SAJN,OAanBvqC,EAAKqrB,WAAakf,EAASvwC,IAAI,cAQ/BgG,EAAKwqC,eArBcxqC,EAVjB,gUAAAyqC,CAAArxC,EAAAkxC,GAAAlxC,EAAAnB,UAqCJyyC,cArCI,SAqCUp+B,GACZg+B,EAAAryC,UAAMyyC,cAANvyC,KAAAwF,KAAoB2O,GACpBm6B,EAAA,EAAY1d,iBAAiBzc,EAAYs9B,GACzCjsC,KAAKgtC,oBAAoBr+B,IAxCvBlT,EAAAnB,UA+CJ0yC,oBA/CI,SA+CgBr+B,GAClB3O,KAAK6sC,YAAYl+B,EAAWkX,IAAM7lB,KAAK0tB,WAAWE,OAChD,kBAAMjf,EAAWiX,SACjB5lB,KAAKitC,+BAA+BjwC,KAAKgD,KAAM2O,KAlD/ClT,EAAAnB,UA4DJ2yC,+BA5DI,SA4D2Bt+B,EAAYpS,EAAO2wC,QAClChtC,IAAV3D,GACFoS,EAAWlM,MAAMkjB,WAAWppB,IA9D5Bd,EAAAnB,UAqEJ6yC,iBArEI,SAqEax+B,GACfg+B,EAAAryC,UAAM6yC,iBAAN3yC,KAAAwF,KAAuB2O,GACvBm6B,EAAA,EAAY1d,iBAAiBzc,EAAYs9B,GACzCjsC,KAAKotC,sBAAsBz+B,IAxEzBlT,EAAAnB,UA+EJ8yC,sBA/EI,SA+EkBz+B,GACpB3O,KAAK6sC,YAAYl+B,EAAWkX,aACrB7lB,KAAK6sC,YAAYl+B,EAAWkX,KAjFjCpqB,EAAOA,CAAiB4xC,EAAA,gQCF9B,IA6BeC,EA7BF7xC,YAQX,SAAAA,EAAYuM,gGAASulC,CAAAvtC,KAAAvE,GAAA,IAAA4G,mKAAAmrC,CAAAxtC,KAEnB2sC,EAAAnyC,KAAAwF,KAAMgI,IAFa,OAQnB3F,EAAKorC,KAAOzlC,EAAQzE,IARDlB,EARjB,gUAAAqrC,CAAAjyC,EAAAkxC,GAAAgB,EAAAlyC,IAAAmV,IAAA,MAAAvU,IAAA,WAwBF,OAAO2D,KAAKytC,SAxBVhyC,EAAOA,CAAiB4xC,EAAA,+PCG9B,IAoMeO,EApMFnyC,YAcX,SAAAA,EAAYuM,EAASnI,gGAAiBguC,CAAA7tC,KAAAvE,GAAA,IAAA4G,mKAAAyrC,CAAA9tC,KAEpC+tC,EAAAvzC,KAAAwF,KAAMgI,IAEA4kC,EAAW5kC,EAAQ4kC,SAJW,OAapCvqC,EAAK6pB,OAML7pB,EAAK2rC,iBAAmBnuC,EAMxBwC,EAAKqrB,WAAakf,EAASvwC,IAAI,cAQ/BgG,EAAK4rC,4BAGL5rC,EAAK6rC,QApC+B7rC,EAdlC,gUAAA8rC,CAAA1yC,EAAAsyC,GAAAtyC,EAAAnB,UAwDJ4zC,MAxDI,WAyDFpF,EAAA,EAAYxlC,OACVtD,KAAKg9B,YAAY9iC,OAAQ,yCAE3B,IAAAyS,EAAyB3M,KAAKg9B,YAA9BpwB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAhCoS,EAAgCzB,EACzC47B,EAAA,EAAY1d,iBAAiBzc,EAAYy/B,EAAA,GACzCpuC,KAAKgtC,oBAAoBr+B,KA9DzBlT,EAAAnB,UAqEJiZ,QArEI,WAsEF,IAAAjE,EAAyBtP,KAAKg9B,YAA9BztB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA2C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAhCoS,EAAgCc,EACzCq5B,EAAA,EAAY1d,iBAAiBzc,EAAYy/B,EAAA,GACzCpuC,KAAKotC,sBAAsBz+B,GAE7Bo/B,EAAAzzC,UAAMiZ,QAAN/Y,KAAAwF,OA1EEvE,EAAAnB,UAkGJyyC,cAlGI,SAkGUp+B,GACZo/B,EAAAzzC,UAAMyyC,cAANvyC,KAAAwF,KAAoB2O,GACpBm6B,EAAA,EAAY1d,iBAAiBzc,EAAYy/B,EAAA,GACzCpuC,KAAKgtC,oBAAoBr+B,IArGvBlT,EAAAnB,UA4GJ0yC,oBA5GI,SA4GgBr+B,GAElB,IAAMkX,EAAKlX,EAAWkX,GAEtB7lB,KAAKiuC,yBAAyBpoB,GAAM7lB,KAAK0tB,WAAWE,OAClD,kBAAMjf,EAAWiX,SACjB5lB,KAAKitC,+BAA+BjwC,KAAKgD,OAGtCA,KAAKksB,QAKRlsB,KAAKksB,OAAO7vB,IAAI,kBAAkBjC,KAAKyrB,GACvC7lB,KAAKquC,gBALLruC,KAAKksB,OAASlsB,KAAKguC,iBAAiBtoB,kCAClC/W,IAvHFlT,EAAAnB,UAoIJ2yC,+BApII,SAoI2B1wC,EAAO2wC,QACtBhtC,IAAV3D,GAAuBA,IAAU2wC,GACnCltC,KAAKquC,gBAtIL5yC,EAAAnB,UA6IJ+zC,aA7II,WA8IF,IAAM5rC,EAAQzC,KAAKyC,MACf4M,KAGJQ,EAAyB7P,KAAKg9B,YAA9BltB,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA2C,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAhCoS,EAAgCqB,EACzC84B,EAAA,EAAY1d,iBAAiBzc,EAAYy/B,EAAA,GACrCz/B,EAAWiX,UACbvW,EAAaA,EAAW2N,OAAOrO,EAAWiB,qBAK9C5P,KAAKguC,iBAAiBhkB,oBAAoBvnB,EAAO4M,EAAWjI,KAAK,OA1J/D3L,EAAAnB,UAgKJ6yC,iBAhKI,SAgKax+B,GACfo/B,EAAAzzC,UAAM6yC,iBAAN3yC,KAAAwF,KAAuB2O,GACvBm6B,EAAA,EAAY1d,iBAAiBzc,EAAYy/B,EAAA,GACzCpuC,KAAKotC,sBAAsBz+B,IAnKzBlT,EAAAnB,UA0KJ8yC,sBA1KI,SA0KkBz+B,GAEpB,IAAMkX,EAAKlX,EAAWkX,GAChBpjB,EAAQzC,KAAKyC,OAInB6rC,EADmBtuC,KAAKiuC,yBAAyBpoB,aAE1C7lB,KAAKiuC,yBAAyBpoB,GAGrC9iB,EAAA,EAAe/C,KAAKg9B,YAAaruB,GAGjC,IAAM9L,EAAM7C,KAAKguC,iBAAiB9jB,kBAAkBznB,GAChDI,GACFE,EAAA,EAAeF,EAAKgjB,GAGlB7lB,KAAKg9B,YAAY9iC,QACnB8F,KAAKquC,gBA9LLE,EAAA9yC,IAAAmV,IAAA,QAAAvU,IAAA,WAuFF,OAAO2D,KAAKksB,WAvFVzwB,EAAOA,CAAiB6xC,+RCe9B,IAAMkB,EAAO/yC,WAmBX,SAAAA,EAAYqE,EAAgBH,EAAWC,EAAI0tB,EAAYwO,EACrD2S,EAAU5uC,gGAAiB6uC,CAAA1uC,KAAAvE,GAQ3BuE,KAAK2uC,UAAYhvC,EAMjBK,KAAK4uC,GAAKhvC,EAMVI,KAAK0tB,WAAaJ,EAQlBttB,KAAKk8B,aAAeJ,EAAgB72B,WAMpCjF,KAAK6uC,UAAYJ,EAMjBzuC,KAAKguC,iBAAmBnuC,EAgBxBG,KAAK8uC,mBAOL9uC,KAAK+uC,UAML/uC,KAAKgvC,KAAO,KAOZhvC,KAAKivC,WAAa,IAAIzC,GACpBxP,eACA4P,SAAU5sC,KAAK2uC,UACfO,MAAOpvC,EAAewF,UAAU,iBAQlCtF,KAAKmvC,qBAAuB,IAAIhD,EAAA,EAOhCnsC,KAAKovC,sBAAwB,IAAIjD,EAAA,EAQjCnsC,KAAKqvC,cAELC,EAAA,EAAgBtvC,KAAKk8B,aAAc,SAAUl8B,KAAKuvC,yBAA0BvvC,MA5H1E,OAAAvE,EAAAohC,SAAA,+FAAAphC,EAAAnB,UAiJJk1C,aAjJI,SAiJSC,GACXzvC,KAAK0vC,oBAAoBt1C,KAAKq1C,IAlJ5Bh0C,EAAAnB,UAyJJq1C,gBAzJI,SAyJYF,GACdzvC,KAAK0vC,oBAAoBE,OAAOH,IA1J9Bh0C,EAAAnB,UAiKJu1C,YAjKI,SAiKQtsC,GACV,IAAIskB,EAAQ,KACZlb,EAAuB3M,KAAK8vC,UAA5BljC,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAuC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA5BkzC,EAA4BviC,EACrC,GAAIuiC,EAASlsC,MAAQA,EAAK,CACxBskB,EAAQ4nB,EACR,OAGJ,OAAO5nB,GAzKLpsB,EAAAnB,UAoMJy1C,cApMI,SAoMUC,GACZhwC,KAAKiwC,qBAAqB71C,KAAK41C,IArM7Bv0C,EAAAnB,UA4MJ41C,iBA5MI,SA4MaF,GACfhwC,KAAKiwC,qBAAqBL,OAAOI,IA7M/Bv0C,EAAAnB,UAoNJ61C,aApNI,SAoNS5sC,GACX,IAAIskB,EAAQ,KACZvY,EAAwBtP,KAAKowC,WAA7B7gC,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAyC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAA9ByzC,EAA8BvgC,EACvC,GAAIugC,EAAUzsC,MAAQA,EAAK,CACzBskB,EAAQmoB,EACR,OAGJ,OAAOnoB,GA5NLpsB,EAAAnB,UA0PJ+1C,qBA1PI,SA0PiB1hC,GACnB,QAAS3O,KAAK8uC,gBAAgBngC,EAAWkX,KA3PvCpqB,EAAAnB,UAsRJg2C,UAtRI,SAsRM7tC,GACRzC,KAAKuwC,WAAWrpB,YAAY9sB,KAAKqI,IAvR/BhH,EAAAnB,UA8RJk2C,aA9RI,SA8RS/tC,GACXzC,KAAKuwC,WAAWrpB,YAAY0oB,OAAOntC,IA/RjChH,EAAAnB,UAwSJm2C,wCAxSI,SAwSoChuC,EAAOikB,EAAcnjB,GAE3D,IAAMsiB,EAAKpqB,EAAQi1C,MAAMjuC,GACnBsF,EAAU2e,EAAA,QAEZ/X,SAGJ,GAAI3O,KAAK8uC,gBAAgBjpB,GACvBlX,EAAa3O,KAAK8uC,gBAAgBjpB,OAC7B,CACL,IAAM8qB,EAAMjqB,EAAA,mBAGNqZ,EAAU4Q,EAAA,cAEVpnC,EAAew2B,EAAQ6Q,SADR,yBAEJ7Q,EAAQ,GAInBh0B,EADc4kC,EAAA,sBACcC,SAChCxC,EAAA,EAAkBpiC,cAAcC,KAC9BmiC,EAAA,EAAkBpiC,cAAcC,SAAM/L,EAGpCwM,GAAmC,IAAvBjK,EAAA,gBACIvC,IAAlB6L,EAIJ4C,EAAa,IAAIy/B,EAAA,GACfvoB,GAAIA,EACJ9pB,KAAM0G,EAAA,MACN8G,aAAcA,EACdE,YACE1N,KAAM0G,EAAA,KACNiK,UAAWA,IAEb3C,QAASqkC,EAAA,EAAkBpkC,KAAKnC,IAChC+d,SAAS,EACT7Z,cAAeA,EACfM,OAAQ9I,IAIVvD,KAAK8uC,gBAAgBjpB,GAAMlX,EAO7B,IAAI8gC,EAAWzvC,KAAK6vC,YAAYtsC,GAC5BksC,EACGA,EAASzS,YAAY4T,SAASjiC,KACjC8gC,EAAS1C,cAAcp+B,GACvB3O,KAAKk8B,aAAa9hC,KAAKuU,KAGzB8gC,EAAW,IAAI7B,GACb5Q,aAAcruB,GACdi+B,SAAU5sC,KAAK2uC,UACfO,MAAOnnC,EAAA,MACPxE,IAAKA,GACJvD,KAAKguC,kBACRhuC,KAAKswC,UAAUb,EAAShtC,OACxBzC,KAAKwvC,aAAaC,GAClBzvC,KAAKk8B,aAAa9hC,KAAKuU,KA5WvBlT,EAAAnB,UAsXJu2C,yCAtXI,SAsXqCpuC,EAAOikB,EAAcja,GAC5D,IAAMoZ,EAAKpqB,EAAQi1C,MAAMjuC,GAIzB,IAAIzC,KAAKqvC,WAAWxpB,GAApB,CAIA,IAAIlX,SAGJ,GAAI3O,KAAK8uC,gBAAgBjpB,GACvBlX,EAAa3O,KAAK8uC,gBAAgBjpB,OAC7B,CAEL,IAAM9pB,EAAO+sC,EAAA,EAAYtrB,aAAa/a,EAAA,OAChC8J,EAAYu8B,EAAA,EAAYtrB,aAAa/a,EAAA,YAI3CkM,EAAa,IAAIy/B,EAAA,GACfvoB,GAAIA,EACJ9pB,KAAMA,EACNgO,QAASqkC,EAAA,EAAkBpkC,KAAKpC,KAChCge,SAAS,EACTrZ,UAAWA,EACXE,QAASA,IAIXzM,KAAK8uC,gBAAgBjpB,GAAMlX,EAI7B,IAAIqhC,EAAYhwC,KAAKmwC,aAAa1jC,GAC7BujC,IACHA,EAAY,IAAI1C,GACdtQ,eACAkS,MAAOxoB,EAAA,4BACPnjB,IAAKkJ,IAEPzM,KAAK+vC,cAAcC,IAErBA,EAAUjD,cAAcp+B,GAGxB,IAAMmiC,EAAW9wC,KAAKguC,iBAAiBvnB,oCACrCC,EACAjkB,GAEFzC,KAAKswC,UAAUQ,GAGf9wC,KAAKk8B,aAAa9hC,KAAKuU,GAGvB3O,KAAKqvC,WAAWxpB,IACdirB,SAAUA,EAGVxC,WAAYtuC,KAAK0tB,WAAWE,OAC1B,kBAAMjf,EAAWiX,SACjB5lB,KAAK+wC,mCAAmC/zC,KAAKgD,KAAM8wC,OArbrDr1C,EAAAnB,UAgcJ02C,+BAhcI,SAgc2BC,EAAMC,GAAc,IAAA7uC,EAAArC,KACjDA,KAAKmxC,mBAAmBF,GAAMttC,KAC5B,SAACgL,GACC,IAAIuU,GAAU,EACRkuB,EAAY/uC,EAAK4sC,WAGvB,GAAI50C,OAAAqlB,EAAA,EAAArlB,CAAQsU,EAAW+Q,QACrBwD,GAAU,MAEL,CAEL,GAAIkuB,EAAUpU,YAAY4T,SAASjiC,GACjC,OAIFtM,EAAKiuC,UAAU3hC,EAAWlM,OAG1B2uC,EAAUrE,cAAcp+B,GAGxBtM,EAAK2sC,KAAKvvB,UAAU4xB,IAAI1iC,EAAW+Q,QAGnCrd,EAAK65B,aAAa9hC,KAAKuU,GAGrBuiC,GACFA,EAAahuB,IAGjB,SAACouB,GACCxtC,QAAQC,MAAR,wBAAsCktC,EAAKl1C,MACvCm1C,GACFA,GAAa,MApejBz1C,EAAAnB,UAgfJ62C,mBAhfI,SAgfeF,GAAM,IAAAlrC,EAAA/F,KAEjBY,EAAQZ,KAAK4uC,GAAGhuC,QAEtB,GAAIZ,KAAK+uC,OAAOkC,EAAKl1C,MACnB6E,EAAMoD,QAAQhE,KAAK+uC,OAAOkC,EAAKl1C,WAC1B,CACL,IAAM0yC,EAAWzuC,KAAK6uC,UACtBJ,EAASroB,KAAK6qB,GAAMttC,KAAK,SAAC4tC,GACxB,IAAI5zB,SACE6zB,GACJ9yB,kBAAmB3Y,EAAKipC,KAAKvvB,UAAUgyB,iBASzC,GANIhD,EAASiD,MAAMH,GACjB5zB,GAAW,IAAIK,EAAA,GAAc2zB,aAAaJ,EAASC,GAC1C/C,EAASmD,MAAML,KACxB5zB,GAAW,IAAIG,EAAA,GAAc6zB,aAAaJ,EAASC,IAGjD7zB,EAAU,CACZ,IAAMkI,EAAKpqB,EAAQi1C,MAAMO,GAEnBtiC,EAAa,IAAIs9B,GACrBtuB,SAAU,IAAIwuB,EAAA,EAAaxuB,GAC3BkI,GAAIA,EACJ9pB,KAAMk1C,EAAKl1C,KACX6pB,SAAS,IAIX7f,EAAKgpC,OAAOkC,EAAKl1C,MAAQ4S,EACzB5I,EAAK+oC,gBAAgBjpB,GAAMlX,EAE3B/N,EAAMoD,QAAQ2K,QAEd/N,EAAM4G,WAKZ,OAAO5G,EAAME,SAzhBXrF,EAAAnB,UAkiBJy2C,mCAliBI,SAkiB+BtuC,EAAOlG,EAAO2wC,QACjChtC,IAAV3D,GAAuBA,IAAU2wC,GACnCzqC,EAAMkjB,WAAWppB,IApiBjBd,EAAAnB,UA+iBJi1C,yBA/iBI,SA+iBqBpkB,GACvB,IAAMxc,EAAawc,EAAIvB,QACnB5pB,KAAK8uC,gBAAgBngC,EAAWkX,MAAQlX,IACtCA,aAAsBs9B,EACxBjsC,KAAK6xC,sBAAsBljC,GAClBA,aAAsBy/B,EAAA,GAC/BpuC,KAAK8xC,qBAAqBnjC,KArjB5BlT,EAAAnB,UAmkBJu3C,sBAnkBI,SAmkBkBljC,GACpB3O,KAAKwwC,aAAa7hC,EAAWlM,OAC7BzC,KAAKivC,WAAW9B,iBAAiBx+B,IArkB/BlT,EAAAnB,UAmlBJw3C,qBAnlBI,SAmlBiBnjC,GACnB,GAAIA,EAAW5E,UAAYqkC,EAAA,EAAkBpkC,KAAKnC,IAAK,CAErD,IAAMtE,EAAMoL,EAAWtC,OACvBy8B,EAAA,EAAYxlC,OAAOC,GAEnB,IAAMksC,EAAWzvC,KAAK6vC,YAAYtsC,GAC9BksC,GAAYA,EAASzS,YAAY4T,SAASjiC,KAE5C8gC,EAAStC,iBAAiBx+B,GAIrB8gC,EAASzS,YAAY9iC,SACxB8F,KAAKwwC,aAAaf,EAAShtC,OAC3BgtC,EAASl8B,UACTvT,KAAK2vC,gBAAgBF,UAGpB,GAAI9gC,EAAW5E,UAAYqkC,EAAA,EAAkBpkC,KAAKpC,KAAM,CAE7D,IAAMrE,EAAMoL,EAAWlC,QACvBq8B,EAAA,EAAYxlC,OAAOC,GAEnB,IAAMysC,EAAYhwC,KAAKmwC,aAAa5sC,GACpC,GAAIysC,GAAaA,EAAUhT,YAAY4T,SAASjiC,GAAa,CAE3DqhC,EAAU7C,iBAAiBx+B,GAI3B,IAAMkX,EAAKlX,EAAWkX,GACtB7lB,KAAKwwC,aAAaxwC,KAAKqvC,WAAWxpB,GAAIirB,UACtC9wC,KAAKqvC,WAAWxpB,GAAIyoB,oBACbtuC,KAAKqvC,WAAWxpB,GAIlBmqB,EAAUhT,YAAY9iC,SACzB81C,EAAUz8B,UACVvT,KAAKkwC,iBAAiBF,OA3nB1B+B,EAAAt2C,IAAAmV,IAAA,YAAAvU,IAAA,WAuIF,OAAO2D,KAAKivC,cAvIVr+B,IAAA,YAAAvU,IAAA,WAiLF,OAAO2D,KAAKmvC,qBAAqBhoB,cAjL/BvW,IAAA,sBAAAvU,IAAA,WA0LF,OAAO2D,KAAKmvC,wBA1LVv+B,IAAA,aAAAvU,IAAA,WAqOF,OAAO2D,KAAKovC,sBAAsBjoB,cArOhCvW,IAAA,uBAAAvU,IAAA,WA8OF,OAAO2D,KAAKovC,yBA9OVx+B,IAAA,aAAAvU,IAAA,WAmQF,IAAMuI,EAAM5E,KAAKgvC,KAEjB,OADAlG,EAAA,EAAYxlC,OAAOsB,GACZ5E,KAAKguC,iBAAiBjnB,gBAC3BniB,EACAotC,EAAA,EAAQC,4BAvQRrhC,IAAA,MAAAlO,IAAA,SA8QIkC,GACN5E,KAAKgvC,KAAOpqC,MA/QVnJ,EAAOA,GAgpBb+yC,EAAQkC,MAAQ,SAASjuC,GACvB,OAAOyvC,EAAA,EAAczvC,GAAS,KAIhC+rC,EAAQ9yC,OAASoM,QAAQpM,OAAO,iCAC9By2C,EAAA,EAAmBz2C,OAAOK,KAC1Bq2C,EAAA,EAAa12C,OAAOK,KACpBs2C,EAAA,EAA0B32C,OAAOK,OAEnCyyC,EAAQ9yC,OAAOqM,QAAQ,gCACrBymC,GAGalxC,EAAA,mCC/qBf,IAAM7B,EAAUqM,QAAQpM,OAAO,uBAoC/BD,EAAQ62C,mBAAqB,SAASC,GACpC,OACEC,SAAU,IACVhiB,WAAY,yBAOZiiB,KAAM,SAACC,EAAO9oB,EAAS+oB,EAAOniB,GAC5B,IAAM7a,EAAY48B,EAAOI,EAAA,oBAA6BttB,OAElD1P,GACF+8B,EAAM9kB,OAEJ,kBAAM4C,EAAWoiB,SAAS5sC,KAAK,SAAA6sC,GAAA,OAAsC,IAAvBA,EAAYH,MAC1D,SAACI,GACCn9B,EAAU+8B,EAAOI,QAlB7Br3C,EAAQ62C,sCA2BR72C,EAAQs3C,UAAU,eAAgBt3C,EAAQ62C,oBAW1C72C,EAAQu3C,mBAAqB,SAAS3lB,GAKpCrtB,KAAK4yC,YAML5yC,KAAKmmC,OAAS9Y,GAXhB5xB,EAAQu3C,sCAkBRv3C,EAAQu3C,mBAAmB14C,UAAU24C,SAAW,SAASzsB,GAAO,IAAAnkB,EAAArC,KAC9DA,KAAK4yC,SAAS5vC,QAAQ,SAACkwC,EAAcl5C,GAC/BA,GAAKwsB,GACP0sB,EAAa7tB,OAAOhjB,EAAK8jC,QAAQ,MAUvC1qC,EAAQu3C,mBAAmB14C,UAAU64C,UAAY,SAASD,GAExD,OADAlzC,KAAK4yC,SAASx4C,KAAK84C,GACZlzC,KAAK4yC,SAAS14C,OAAS,GAIhCuB,EAAQ+0B,WAAW,yBACjB/0B,EAAQu3C,oBAqBVv3C,EAAQ23C,cAAgB,SAASb,GAC/B,OACEc,SAAU,iBAAkB,WAC5Bb,SAAU,IAOVC,KAAM,SAACC,EAAO9oB,EAAS+oB,EAAOW,GAC5B,IAAMC,EAAcD,EAAM,GACpBE,EAAcF,EAAM,GACtBG,GAAgB,EAEdC,EAAanB,EAAOI,EAAA,SACpBgB,EAAaD,EAAWruB,YAGJnlB,IAAtBwzC,EAAWhB,IACbiB,EAAWjB,GAAO,GAEA,OAAhBa,IACFE,EAAeF,EAAYJ,UAAUO,IAIvC9pB,EAAQ+R,GAAG,QAAS,WAClB+W,EAAMkB,OAAO,WACXJ,EAAYK,eAAeL,EAAYM,YACvCN,EAAYO,cAKhBP,EAAYO,QAAU,WAChBP,EAAYM,YAA8B,OAAhBP,GAC5BA,EAAYN,SAASQ,GAEvB7pB,EAAQoqB,YAAY,SAAUR,EAAYM,gBAvClDr4C,EAAQ23C,iCA8CR33C,EAAQs3C,UAAU,UAAWt3C,EAAQ23C,eAGtB91C,EAAA,mUCnLf,IAAM7B,aAkBJ,SAAAA,iGAAcwM,CAAAjI,KAAAvE,GAMZuE,KAAKi0C,YAAc,IAAIC,EAAA,EAMvBl0C,KAAKgvC,KAAO,KAMZhvC,KAAKqnC,iBAELxc,EAAA,EAAgB7qB,KAAKi0C,YAAa,MAAOj0C,KAAKm0C,sBAAuBn0C,MAtCnE,OAAAvE,EAAAnB,UAsEJ85C,SAtEI,SAsEKxvC,GAGP,IAAM4a,EAAO5a,EAAI6a,UACjBzf,KAAKqnC,cAAcjtC,KACjBywB,EAAA,EAAgBrL,EAAM,oBAAqBxf,KAAKq0C,4BAA6Br0C,OAI/E,IAAMitB,EAAazN,EAAK2J,gBACxBhqB,EAAA,EAAY4b,aAAakS,GACzBjtB,KAAKs0C,6BAA6BrnB,IAjFhCxxB,EAAAnB,UAyFJi6C,WAzFI,SAyFO3vC,GACT5E,KAAKqnC,cAAcrkC,QAAQ6nB,EAAA,GAC3B7qB,KAAKqnC,kBA3FH5rC,EAAAnB,UAoGJ+5C,4BApGI,SAoGwBlpB,GAC1B,IAAM3L,EAAO2L,EAAIE,OACjBlsB,EAAA,EAAYisB,iBAAiB5L,EAAMg1B,EAAA,GACnC,IAAMvnB,EAAazN,EAAK2J,gBACxBhqB,EAAA,EAAY4b,aAAakS,GACzBjtB,KAAKs0C,6BAA6BrnB,IAzGhCxxB,EAAAnB,UAiHJg6C,6BAjHI,SAiHyBrnB,GAAY,IAAA5qB,EAAArC,KACvCA,KAAKi0C,YAAYjxC,QAAQ,SAAC2L,GACxBtM,EAAKoyC,4BAA4B9lC,EAAYse,MAnH7CxxB,EAAAnB,UA6HJm6C,4BA7HI,SA6HwB9lC,EAAYse,GAGtC,GAAKte,EAAW+lC,uBAAhB,CAIA,IAAMpuC,EAAgBqI,EAAWrI,cAC3BG,EAAgBkI,EAAWlI,cAQ3BkuC,GAN+B,OAAlBluC,QACGvG,IAAlBuG,GACAwmB,GAAcxmB,KACmB,OAAlBH,QACGpG,IAAlBoG,GACA2mB,GAAc3mB,GAGlBqI,EAAWgmC,QAAUA,IA/InBl5C,EAAAnB,UAwJJ65C,sBAxJI,SAwJkB3xB,GACpB,IAAM7T,EAAaxP,EAAA,EAAYisB,iBAC7B5I,EAAMoH,QAASjY,EAAA,GACjB,GAAI3R,KAAKgvC,KAAM,CACb,IAAM/hB,EAAajtB,KAAKgvC,KAAKvvB,UAAU0J,gBACvChqB,EAAA,EAAY4b,aAAakS,GACzBjtB,KAAKy0C,4BAA4B9lC,EAAYse,KA9J7Cpc,EAAApV,IAAAmV,IAAA,MAAAlO,IAAA,SA6CIkC,GACF5E,KAAKgvC,OAASpqC,IAId5E,KAAKgvC,MACPhvC,KAAKu0C,WAAWv0C,KAAKgvC,MAGvBhvC,KAAKgvC,KAAOpqC,EAERA,GACF5E,KAAKo0C,SAASxvC,OAzDdgM,IAAA,aAAAvU,IAAA,WA8DF,OAAO2D,KAAKi0C,gBA9DVx4C,KAwKNA,EAAQC,OAASoM,QAAQpM,OAAO,sBAEhCD,EAAQC,OAAOqM,QAAQ,kBAAmBtM,GAG3B6B,EAAA,oCCtLf,SAAAo4B,GAAA,IAAAkf,EAAAv5C,EAAA,KAAAw5C,EAAAx5C,EAAA,KAAAy5C,EAAAz5C,EAAA,KAAA05C,EAAA15C,EAAA,KAAA25C,EAAA35C,EAAA,GAAA45C,EAAA55C,EAAA,KAAA65C,GAAA75C,EAAA,KAAAA,EAAA,KAAAA,EAAA,MAAA85C,EAAA95C,EAAA,KAAA+5C,EAAA/5C,EAAA,IAAAg6C,EAAAh6C,EAAA,KAAAi6C,EAAAj6C,EAAA,IAAAk6C,EAAAl6C,EAAA,KAAAm6C,EAAAn6C,EAAA,KAAAo6C,EAAAp6C,EAAA,IAAAq6C,EAAAr6C,EAAA,KAAAs6C,EAAAt6C,EAAA,KAAAu6C,EAAAv6C,EAAA,KAAAw6C,EAAAx6C,EAAA,KAAAy6C,EAAAz6C,EAAA,KAAA06C,EAAA16C,EAAA,IAAA26C,EAAA36C,EAAA,IAAA46C,EAAA56C,EAAA,KAAA66C,EAAA76C,EAAA,GAAA86C,EAAA96C,EAAA,GAAA+6C,EAAA/6C,EAAA,IAAAg7C,EAAAh7C,EAAA,GAAAi7C,EAAAj7C,EAAA,GAAAk7C,EAAAl7C,EAAA,IAAAm7C,EAAAn7C,EAAA,KAAAo7C,EAAAp7C,EAAA,KAAAq7C,EAAAr7C,EAAA,KAAAs7C,EAAAt7C,EAAA,KAAAu7C,EAAAv7C,EAAA,IAAAw7C,EAAAx7C,EAAA,IAAAy7C,EAAAz7C,EAAA,KA6DMI,EAAUqM,QAAQpM,OAAO,8BAC7Bk5C,EAAA,EAAsBl5C,OAAOK,KAC7B84C,EAAA,EAAmBn5C,OAAOK,KAC1B+4C,EAAA,EAAwBp5C,OAAOK,KAC/Bm5C,EAAA,EAA+Bn5C,KAC/Bo5C,EAAA,EAAkCp5C,KAClC05C,EAAA,EAAmB/5C,OAAOK,KAC1B45C,EAAA,EAA0B55C,KAC1B65C,EAAA,EAAqB75C,KACrB+5C,EAAA,EAAoBp6C,OAAOK,KAC3Bg6C,EAAA,EAAsBr6C,OAAOK,KAC7Bk6C,EAAA,EAAwBv6C,OAAOK,OAIjCN,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoC57C,EAAQ,SA4CjEI,EAAQy7C,WAAa,WACnB,OACE1mB,WAAY,qCACZkiB,OACEyE,MAAS,uBACTC,iBAAoB,kCACpBxyC,IAAO,qBACPqqB,MAAS,uBACT0N,UAAa,4BACb0a,YAAe,yBAEjBC,kBAAkB,EAClBC,YAAa,qCAKjB97C,EAAQs3C,UAAU,iBAChBt3C,EAAQy7C,YAuBVz7C,EAAQ+7C,YAAc,SAASC,EAAU73C,EAAIytB,EAAQ+I,EACnDt2B,EAAgB43C,EAAgBC,EAAaC,EAC7CC,EAAiB1P,EAAmBtoC,EAAiBi4C,GAAqB,IAAAz1C,EAAArC,KAW1EA,KAAKm3C,MAMLn3C,KAAKo3C,iBAMLp3C,KAAK4E,IAQL5E,KAAKivB,MAMLjvB,KAAK28B,UAML38B,KAAKq3C,YASLr3C,KAAK+3C,SAAWN,EAMhBz3C,KAAK4uC,GAAKhvC,EAMVI,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK02B,gBAAkB52B,EAMvBE,KAAKi4C,gBAAkBP,EAMvB13C,KAAKk4C,aAAeP,EAMpB33C,KAAKm4C,kBAAoBP,EAMzB53C,KAAKo4C,iBAAmBP,EAMxB73C,KAAKqoC,mBAAqBF,EAM1BnoC,KAAKguC,iBAAmBnuC,EAMxBG,KAAKq4C,qBAAuBP,EAS5B93C,KAAKs4C,cAMLt4C,KAAKu4C,kBAQLv4C,KAAKw4C,iBAAmB,KAQxBx4C,KAAKy4C,gCAAiC,EAOtCz4C,KAAKo9B,SAAU,EAMfp9B,KAAKoR,QAAS,EAMdpR,KAAK04C,cAAe,EAMpB14C,KAAK24C,mBAAqB,IAAI3C,EAAA,EAAqBh2C,KAAM,gBAMzDA,KAAK44C,iBAAkB,EAMvB54C,KAAK64C,sBAAwB,IAAI7C,EAAA,EAAqBh2C,KAAM,mBAM5DA,KAAKuY,QAAU,KAEfvY,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAKkW,SACXvY,KAAK84C,qBAAqB97C,KAAKgD,OAOjCA,KAAK+4C,eAAY74C,EAMjBF,KAAK2d,SAML3d,KAAKg5C,cAAgB,IAAI5C,EAAA,EAMzBp2C,KAAKi5C,QAMLj5C,KAAKk5C,mBAMLl5C,KAAKm5C,MAAQ,IAAIzD,EAAA,GACf0D,UACEC,IAAK,eACL9zC,MAAOzF,EAAewF,UAAU,QAChCvJ,KAAM,SAENs9C,IAAK,qBACL9zC,MAAOzF,EAAewF,UAAU,UAChCvJ,KAAM,aAQViE,KAAKs5C,WAMLt5C,KAAKu5C,QAMLv5C,KAAKw5C,mBAMLx5C,KAAKy5C,sBAMLz5C,KAAKqnC,iBAMLrnC,KAAKuO,WAAa,KAMlBvO,KAAK05C,SAML15C,KAAK25C,iBAAkB,EAMvB35C,KAAK45C,mBAAqB,KAM1B55C,KAAK65C,gBAAkB,MAjTzBp+C,EAAQ+7C,2MAwTR/7C,EAAQ+7C,YAAYl9C,UAAUw/C,QAAU,WAAW,IAAA/zC,EAAA/F,KAC3C+5C,EAAO/5C,KAAK02B,gBAAgBsjB,qBAClCtkB,EAAEukB,eAAeC,UAAUH,GAC3BrkB,EAAEukB,eAAeE,iBAAiB,IAAIlF,EAAA,GAGtCj1C,KAAKm3C,OAAuB,IAAfn3C,KAAKm3C,MAClBn3C,KAAKs4C,cACHt4C,KAAKo3C,iBAAiBl1C,KACxBlC,KAAK2d,SAAW3d,KAAKq3C,YAAY7tB,YAAY4wB,wBAC7Cp6C,KAAK28B,eAA+Bz8B,IAAnBF,KAAK28B,UAA0B38B,KAAK28B,UAAY,GAGjE,IAAMl6B,EAAQsyC,EAAA,EAA6BpoB,SAAS3sB,KAAKo3C,kBACzDpC,EAAA,EAAY1xC,OACVb,aAAiBi0C,EAAA,GAAgBj0C,aAAiBk0C,EAAA,GACpD32C,KAAKu4C,kBAAoB91C,EAGzBzC,KAAKi5C,QAAU,IAAIxC,EAAA,GACjB4D,gBAAiBjF,EAAA,EAAUiF,gBAC3B18B,SAAU3d,KAAK2d,SACf5E,MAAO/Y,KAAKqoC,mBAAmBzvB,gBAAe,KAEhD5Y,KAAKg5C,cAAc5+C,KAAK4F,KAAKi5C,SAE7Bj5C,KAAKu5C,QAAU,IAAIhE,EAAA,GACjB53B,SAAU3d,KAAK2d,SACf5E,MAAO,IAAI89B,EAAA,GACTz8B,KAAM,IAAI08B,EAAA,GACR18B,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIk8B,EAAA,GACRh9B,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKu5C,SAE7Bv5C,KAAKs5C,WAAa,IAAI9D,EAAA,GACpB73B,SAAU3d,KAAK2d,SACf5E,MAAO,IAAI89B,EAAA,GACTz8B,KAAM,IAAI08B,EAAA,GACR18B,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIk8B,EAAA,GACRh9B,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKs5C,YAE7Bt5C,KAAKs6C,0BAELt6C,KAAKk5C,mBAAqB,IAAIlD,EAAA,EAAqBh2C,KAAKi5C,QAAS,UACjEj5C,KAAKw5C,mBAAqB,IAAIxD,EAAA,EAAqBh2C,KAAKu5C,QAAS,UACjEv5C,KAAKy5C,sBAAwB,IAAIzD,EAAA,EAAqBh2C,KAAKs5C,WAAY,UAGvEt5C,KAAK4E,IAAIuwB,WAAWn1B,KAAKm5C,OAIzBn5C,KAAKmmC,OAAOvY,OACV,kBAAM7nB,EAAK2yC,cACX,SAAC9iC,EAAQiY,GACHjY,GACF7P,EAAKmyC,aAAaqC,gCAKxBv6C,KAAKmmC,OAAOjY,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,OAErD,IAAMmuB,EAAM+nB,EAAA,EAAcl2C,MAC1BA,KAAKo4C,iBAAiB9Q,eACpBnZ,EACAkoB,EAAA,EACEr2C,KAAK2d,SACL,MACA3d,KAAKy6C,kBACLz6C,OAIJA,KAAKmmC,OAAOvY,OACV,kBAAM7nB,EAAK6yC,iBACX54C,KAAK06C,6BAA6B19C,KAAKgD,OAGzCA,KAAKmmC,OAAOvY,OACV,kBAAM7nB,EAAKkpB,OACX,SAAC6jB,EAAU5F,GACT,IAAMje,EAAQxzB,EAAQk/C,MAClB7H,IAAa7jB,EAAM2rB,qBACrB70C,EAAK80C,gBAAgBl3C,KAAK,WACxBoC,EAAKkpB,MAAQA,EAAM6rB,uBAEZhI,IAAa7jB,EAAM8rB,oBAC5Bh1C,EAAK80C,gBAAgBl3C,KAAK,WACxBoC,EAAKkpB,MAAQA,EAAM+rB,uBAM3Bh7C,KAAKmmC,OAAOvY,OACV,kBAAM7nB,EAAK0yC,gCACX,SAAC3F,EAAU5F,GAELA,IAAa4F,IACf/sC,EAAKkpB,MAAQxzB,EAAQk/C,MAAMM,QAOjCj7C,KAAKm4C,kBAAkB7pC,cAActO,KAAKs4C,cAAczyB,IAAIliB,KAC1D3D,KAAKk7C,eAAel+C,KAAKgD,OAI3BA,KAAKm7C,SAAQ,IASf1/C,EAAQ+7C,YAAYl9C,UAAU8gD,KAAO,WAAW,IAAAv0C,EAAA7G,KAC9Cg1C,EAAA,EAAY1xC,OAAOtD,KAAKuO,YAExB,IAAMgK,EAAUvY,KAAKuY,QAAQgG,QAC7BhG,EAAQ8iC,MAAMr7C,KAAKuY,QAAQm4B,SAC3B,IAAM7qB,EAAK7lB,KAAK+4C,UAEhB/4C,KAAKo9B,SAAU,EAEf,IAAMke,EAAgB,IAAIrG,EAAA,EAC1BtoC,EAAwB3M,KAAKuO,WAA7B3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAyC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA9B+T,EAA8BpD,EACvC,GAAIoD,EAAU9C,OACZ,GAAIxN,KAAKuY,QAAQlc,IAAIiU,EAAUvU,MAAO,CACpC,IAAMA,EAAOiE,KAAKuY,QAAQlc,IAAIiU,EAAUvU,MACxCi5C,EAAA,EAAYx3B,aAAazhB,GACzB,IAAMQ,EAAQ++C,EAAcC,UAAUx/C,EAAMuU,EAAU9C,QAClDguC,EAAa,gBACM,SAAnBlrC,EAAUjT,KACZm+C,EAAa,QACe,SAAnBlrC,EAAUjT,KACnBm+C,EAAa,QACe,aAAnBlrC,EAAUjT,MAEnBd,EAAMk/C,WAAWl/C,EAAMm/C,aAAen/C,EAAMo/C,qBAE9CpjC,EAAQ7V,IAAI4N,EAAUvU,KAAMu/C,EAAcM,WAAWr/C,EAAOi/C,SAG5DjjC,EAAQ7V,IAAI4N,EAAUvU,KAAM,OAKlB8pB,EACd7lB,KAAKi4C,gBAAgB4D,cACnB77C,KAAKs4C,cAAczyB,GACnBtN,GAEFvY,KAAKi4C,gBAAgB6D,eACnB97C,KAAKs4C,cAAczyB,IAClBtN,KAEG5U,KACN,SAACC,GACCiD,EAAKswC,OAAQ,EACbtwC,EAAKu2B,SAAU,EACfv2B,EAAKk1C,mBAAmBn4C,GACxBiD,EAAKqxC,aAAa8D,WAEpB,SAACp4C,GACCiD,EAAK8yC,iBAAkB,EACvB9yC,EAAKu2B,SAAU,EACfv2B,EAAKgzC,gBAAL,gBAAwCj2C,EAASlK,KAAT,WACxCmN,EAAK+yC,mBAAL,mBAA6Ch2C,EAASlK,KAAT,WASnD+B,EAAQ+7C,YAAYl9C,UAAUm+B,OAAS,WACrCz4B,KAAKm3C,OAAQ,EACbn3C,KAAKuY,QAAU,KACfvY,KAAK2d,SAAS+O,QACd1sB,KAAKm5C,MAAM8C,QACXj8C,KAAKy4C,gCAAiC,GAWxCh9C,EAAQ+7C,YAAYl9C,UAAUugD,cAAgB,WAAW,IAAAliB,EAAA34B,KACvD,OAAOA,KAAKk8C,yBAAyBv4C,KAAK,WACxCg1B,EAAKF,YAcTh9B,EAAQ+7C,YAAYl9C,UAAU4hD,uBAAyB,SACrDC,GAWA,OAVAn8C,KAAKw4C,iBAAmBx4C,KAAK4uC,GAAGhuC,QAC5BZ,KAAKuY,SAAWvY,KAAKm3C,OACvBn3C,KAAKy4C,gCAAiC,EAClC0D,GACFn8C,KAAKmmC,OAAOyN,UAGd5zC,KAAKw4C,iBAAiBx0C,UAGjBhE,KAAKw4C,iBAAiB13C,SAO/BrF,EAAQ+7C,YAAYl9C,UAAU8hD,sBAAwB,WACpDp8C,KAAKy4B,SACLz4B,KAAKw4C,iBAAiBx0C,WAOxBvI,EAAQ+7C,YAAYl9C,UAAU+hD,OAAS,WAAW,IAAAxjB,EAAA74B,KAC1C0jB,EAAM1jB,KAAK02B,gBAAgBpxB,UAC/B,sDAEEg3C,QAAQ54B,KACV1jB,KAAKo9B,SAAU,EAGfp9B,KAAKi4C,gBAAgBsE,cACnBv8C,KAAKs4C,cAAczyB,GACnB7lB,KAAKuY,SACL5U,KACA,SAACC,GACCi1B,EAAKse,OAAQ,EACbte,EAAKuE,SAAU,EACfvE,EAAKmV,iBAAiB1kB,gBAAgBuP,EAAK0f,mBAG3C1f,EAAKJ,UAEP,SAAC70B,GACCi1B,EAAK8gB,iBAAkB,EACvB9gB,EAAKuE,SAAU,EACfvE,EAAKghB,gBAAL,gBAAwCj2C,EAASlK,KAAT,WACxCm/B,EAAK+gB,mBAAL,mBAA6Ch2C,EAASlK,KAAT,YAcrD+B,EAAQ+7C,YAAYl9C,UAAUkiD,OAAS,WAAW,IAAAnjB,EAAAr5B,KAGhDA,KAAKg4C,SAAS,WACZ3e,EAAK0e,SAAS0E,KAAK,wBAAwBC,SAC1C,IAQLjhD,EAAQ+7C,YAAYl9C,UAAUyhD,mBAAqB,SAASY,GAC1D,IAAMh/B,GAAW,IAAI64B,EAAA,GAAkB7E,aAAagL,EAAKjjD,MACrDikB,EAASzjB,SACX8F,KAAKuY,QAAQ8iC,MAAM19B,EAAS,GAAG+yB,SAC/B1wC,KAAKguC,iBAAiB1kB,gBAAgBtpB,KAAKu4C,oBAEzCv4C,KAAKw4C,kBACPx4C,KAAKw4C,iBAAiBx0C,WAS1BvI,EAAQ+7C,YAAYl9C,UAAU4gD,eAAiB,SAAS3sC,GAEtDvO,KAAKuO,WAAaA,EAClB,IAAAe,EAAwBf,EAAxBgB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAoC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAzB+T,EAAyBb,EACZ,QAAlBa,EAAUjT,MACZiT,EAAU9C,OAAS,QACnB8C,EAAUssC,KAAO,cACU,QAAlBtsC,EAAUjT,MACnBiT,EAAU9C,OAAS,MACnB8C,EAAUssC,KAAO,SACU,YAAlBtsC,EAAUjT,OACnBiT,EAAU9C,OAAS,YACnB8C,EAAUssC,KAAO,oBAKrB,IAAMC,EAAWxH,EAAA,EAAuByH,qBACtC98C,KAAKuO,YAEHsuC,GAAYA,EAASnD,WACvB15C,KAAK05C,SAAWmD,EAASnD,WAS7Bj+C,EAAQ+7C,YAAYl9C,UAAUmgD,kBAAoB,SAAStvB,GAAK,IAAA2O,EAAA95B,KAC9DA,KAAKuY,QAAU,KACfvY,KAAKg4C,SAAS,WACZhD,EAAA,EAAY1xC,OAAOw2B,EAAKvrB,YACxB,IAAMgK,EAAU4S,EAAIvB,QACpBorB,EAAA,EAAY5pB,iBAAiB7S,EAASg+B,EAAA,GACtC,IAAM+E,EAAgB,IAAIrG,EAAA,EAC1BplC,EAAwBiqB,EAAKvrB,WAA7BuB,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAyC,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAA9B+T,EAA8BN,EACvC,GAAIM,EAAU9C,OACZ,GAAI+K,EAAQlc,IAAIiU,EAAUvU,MAAO,CAC/B,IAAIQ,SACJ,GAAuB,aAAnB+T,EAAUjT,MACZd,EAAQ,IAAIuiC,KAAKvmB,EAAQlc,IAAIiU,EAAUvU,QAEjC0/C,WAAWl/C,EAAMm/C,aAAen/C,EAAMo/C,yBACvC,CACL,IAAIH,EAAa,GACM,SAAnBlrC,EAAUjT,KACZm+C,EAAa,QACe,SAAnBlrC,EAAUjT,OACnBm+C,EAAa,SAEf,IAAMz/C,EAAOwc,EAAQlc,IAAIiU,EAAUvU,MACnCi5C,EAAA,EAAYx3B,aAAazhB,GACzBQ,EAAQ++C,EAAcC,UAAUx/C,EAAMy/C,GAExCjjC,EAAQ7V,IAAI4N,EAAUvU,KAAMu/C,EAAcM,WAAWr/C,EAAO+T,EAAU9C,cAGtE+K,EAAQ7V,IAAI4N,EAAUvU,KAAM,MAIlC+9B,EAAKvhB,QAAUA,EACfuhB,EAAK4e,cAAe,EACfngC,EAAQm4B,UACX5W,EAAKqd,OAAQ,GAEfrd,EAAKqM,OAAOyN,UACX,IASLn4C,EAAQ+7C,YAAYl9C,UAAU6gD,QAAU,SAAS/pC,GAE/C,IAAM2rC,EAAO/8C,KAAKqnC,cACZ2V,GAAa,UAAW9G,EAAA,EAAcl2C,OAAOoH,KAAK,KAClD61C,GAAY,SAAU/G,EAAA,EAAcl2C,OAAOoH,KAAK,KAChD81C,EAAUl9C,KAAKq4C,qBAEjBjnC,GAKF2rC,EAAK3iD,KAAKi8C,EAAA,EAAgBr2C,KAAKm5C,MAAO,cACpCn5C,KAAKm9C,uBAAwBn9C,OAE/B+8C,EAAK3iD,KAAKi8C,EAAA,EAAgBr2C,KAAKs5C,WAC7B,eACAt5C,KAAKo9C,oBAAqBp9C,OAE5B+8C,EAAK3iD,KAAKi8C,EAAA,EAAgBr2C,KAAKu5C,QAAS,YAAav5C,KAAKq9C,iBAAkBr9C,OAE5Ek9C,EAAQ9W,aAAa4W,EAAWh9C,KAAK24C,oBAAoB,GACzDuE,EAAQ9W,aAAa4W,EAAWh9C,KAAK64C,uBAAuB,GAE5DqE,EAAQ9W,aAAa6W,EAAUj9C,KAAK24C,oBAAoB,GACxDuE,EAAQ9W,aAAa6W,EAAUj9C,KAAKk5C,oBAAoB,GACxDgE,EAAQ9W,aAAa6W,EAAUj9C,KAAKy5C,uBAAuB,GAC3DyD,EAAQ9W,aAAa6W,EAAUj9C,KAAKw5C,oBAAoB,KAOxDuD,EAAK/5C,QAAQqzC,EAAA,GACb0G,EAAK7iD,OAAS,EAEdgjD,EAAQnW,eAAeiW,EAAWh9C,KAAK24C,oBACvCuE,EAAQnW,eAAeiW,EAAWh9C,KAAK64C,uBAEvCqE,EAAQnW,eAAekW,EAAUj9C,KAAK24C,oBACtCuE,EAAQnW,eAAekW,EAAUj9C,KAAKk5C,oBACtCgE,EAAQnW,eAAekW,EAAUj9C,KAAKy5C,uBACtCyD,EAAQnW,eAAekW,EAAUj9C,KAAKw5C,oBAEtCx5C,KAAK04C,cAAe,EACpB14C,KAAKy4B,UAGPz4B,KAAKi5C,QAAQtjC,UAAUvE,GACvBpR,KAAK44C,gBAAkBxnC,EACvBpR,KAAKo3C,iBAAiBh6B,WAAtB,QAA8ChM,GAUhD3V,EAAQ+7C,YAAYl9C,UAAUogD,6BAA+B,SAC3DtpC,GAEA,IAAMksC,EAASt9C,KAAK4E,IAAI24C,cACxBvI,EAAA,EAAYwI,cAAcF,GAEtBlsC,GACFilC,EAAA,EAAgBr2C,KAAK4E,IAAK,QACxB5E,KAAKy9C,gBAAiBz9C,MAExBq2C,EAAA,EAAgBiH,EAAQ,cACtBt9C,KAAK09C,sBAAuB19C,QAG9Bq2C,EAAA,EAAkBr2C,KAAK4E,IAAK,QAC1B5E,KAAKy9C,gBAAiBz9C,MAExBq2C,EAAA,EAAkBiH,EAAQ,cACxBt9C,KAAK09C,sBAAuB19C,QAsBlCvE,EAAQ+7C,YAAYl9C,UAAUmjD,gBAAkB,SAAStyB,GAAK,IAAAkP,EAAAr6B,KACtDi0B,EAAa9I,EAAI8I,WACjB0pB,EAAQxyB,EAAIwyB,MAIF39C,KAAK4E,IAAIg5C,sBACvBD,EACA,SAACplC,GACC,IAAIslC,GAAM,EAIV,OAHI1H,EAAA,EAAiB9b,EAAK1c,SAASwJ,WAAY5O,KAC7CslC,EAAMtlC,GAEDslC,IAGPC,aAAc,KAUlB99C,KAAKk8C,wBAAuB,GAAMv4C,KAAK,WAErC,IAGMo6C,EAHM1jB,EAAKz1B,IACA6a,UACO0J,gBACIkR,EAAKsC,UAC3Bjd,EAAS42B,EAAA,GACZriB,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACzD8pB,GAIF1jB,EAAK4d,gBAAgB+F,qBAClB3jB,EAAKie,cAAczyB,IACpBnG,GACA/b,KAAK02B,EAAK4jB,mBAAmBjhD,KAAxBq9B,IAGPA,EAAK5B,SAGL4B,EAAK+C,SAAU,KASnB3hC,EAAQ+7C,YAAYl9C,UAAUojD,sBAAwB,SAASvyB,GAAK,IAAAyP,EAAA56B,KAC5D29C,EAAQ39C,KAAK4E,IAAIs5C,cAAc/yB,GAC/B8I,EAAaj0B,KAAK4E,IAAIu5C,uBAAuBR,GAE/CplC,EAAUvY,KAAK4E,IAAIg5C,sBACrBD,EACA,SAACplC,GACC,IAAIslC,GAAM,EAIV,OAHI1H,EAAA,EAAiBvb,EAAKjd,SAASwJ,WAAY5O,KAC7CslC,EAAMtlC,GAEDslC,IAGPC,aAAc,IAOlB,GAHAvlC,EAAUA,GAAoB,KAGjB,CACX,IAAMlb,EAAO2C,KAAKqoC,mBAAmBrvB,QAAQT,GACzClb,IAASi4C,EAAA,EAAiBz3C,SAAWR,IAASi4C,EAAA,EAAiB33C,eAC/DN,IAASi4C,EAAA,EAAiB93C,aAAeH,IAASi4C,EAAA,EAAiB73C,mBACrEuC,KAAKm5C,MAAMiF,KAAKnqB,GAElB9I,EAAIkzB,iBACJlzB,EAAImzB,oBASR7iD,EAAQ+7C,YAAYl9C,UAAU2jD,mBAAqB,SAAStgC,GAAU,IAAA4gC,EAAAv+C,KACpEA,KAAKo9B,SAAU,EAEfp9B,KAAKg4C,SAAS,WACZ,GAAIr6B,EAASzjB,OAAQ,CACnB,IAAMqe,EAAUoF,EAAS,GACzB4gC,EAAKhmC,QAAUA,EACfgmC,EAAK5gC,SAASvjB,KAAKme,KAEpB,IAQL9c,EAAQ+7C,YAAYl9C,UAAUggD,wBAA0B,WACtDt6C,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1BA,EAAYvlB,WAAU,GACtBkgC,EAAA,EAAiB3a,YAAYA,MASjCz/B,EAAQ+7C,YAAYl9C,UAAUkkD,sBAAwB,WAAW,IAAAC,EAAAz+C,KAC/DA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1BujB,EAAK75C,IAAI0vB,eAAe4G,MAS5Bz/B,EAAQ+7C,YAAYl9C,UAAUokD,wBAA0B,WAAW,IAAAC,EAAA3+C,KACjEA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1ByjB,EAAK/5C,IAAIyvB,kBAAkB6G,MAU/Bz/B,EAAQ+7C,YAAYl9C,UAAUw+C,qBAAuB,SACnD8F,EAAYC,GACZ,IAAAC,EAAA9+C,KAEIqc,SACAwiC,IACFxI,EAAA,EAAkBwI,EAAY,iBAAkB7+C,KAAK++C,6BAA8B/+C,MACnFqc,EAAOwiC,EAAWviC,cAClB04B,EAAA,EAAY1xC,OAAO+Y,GACnBg6B,EAAA,EACEh6B,EACA,SACArc,KAAK8qB,6BACL9qB,MAEFA,KAAK0+C,2BAGHE,GACF5+C,KAAK+4C,UAAY6F,EAAWlO,QAC5B2F,EAAA,EAAgBuI,EAAY,iBAAkB5+C,KAAK++C,6BAA8B/+C,MACjFqc,EAAOuiC,EAAWtiC,cAClB04B,EAAA,EAAY1xC,OAAO+Y,GACnBg6B,EAAA,EACEh6B,EACA,SACArc,KAAK8qB,6BACL9qB,MAEFA,KAAKw+C,wBAELx+C,KAAKk4C,aAAaqC,8BAMdv6C,KAAK+4C,WACP/4C,KAAKg4C,SAAS,WACZ8G,EAAK3H,OAAQ,EACb2H,EAAK3Y,OAAOyN,UACX,IAGL5zC,KAAK+4C,eAAY74C,GASrBzE,EAAQ+7C,YAAYl9C,UAAUykD,6BAA+B,WAC3D/+C,KAAKm3C,OAAQ,GAOf17C,EAAQ+7C,YAAYl9C,UAAUwwB,6BAA+B,WAC3D9qB,KAAKm3C,OAAQ,EACbn3C,KAAKmmC,OAAOyN,UAQdn4C,EAAQ+7C,YAAYl9C,UAAU6iD,uBAAyB,SAAShyB,GAG9D,OAFeA,EAAIxI,OAAOq8B,QAGxB,IAAK,OACHh/C,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,SACZ,MACF,IAAK,SACH5zC,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,WAYlBn4C,EAAQ+7C,YAAYl9C,UAAU8iD,oBAAsB,SAASjyB,GAC3DnrB,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,UAQdn4C,EAAQ+7C,YAAYl9C,UAAU+iD,iBAAmB,SAASlyB,GACxDnrB,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,UAOdn4C,EAAQ+7C,YAAYl9C,UAAUkgD,eAAiB,WAC7Cx6C,KAAK2d,SAAS+O,QACd1sB,KAAK84C,qBAAqB,KAAM94C,KAAKuY,SACrCvY,KAAKuY,QAAU,KACf,IAAM4V,EAAM+nB,EAAA,EAAcl2C,MAC1BA,KAAKo4C,iBAAiB5Q,iBAAiBrZ,GACvCnuB,KAAKm7C,SAAQ,GACbn7C,KAAK06C,8BAA6B,GAClC16C,KAAK0+C,2BAIPjjD,EAAQ+0B,WAAW,2BACjB/0B,EAAQ+7C,aAOV/7C,EAAQk/C,OAKNM,KAAM,OAMND,mBAAoB,qBAMpBD,mBAAoB,qBAOpBD,qBAAsB,uBAMtBF,qBAAsB,wBAITt9C,EAAA,4DCvwCf,IAAA2hD,EAAA5jD,EAAA,IAAAu6B,EAAAv6B,EAAA,IAAA6jD,EAAA7jD,EAAA,KA8BMI,EAAU,SAAS6xB,EAAYgJ,EAAW6oB,EAC9CC,EAAgB7oB,GAMhBv2B,KAAKq/C,YAAc/xB,EAMnBttB,KAAK42B,WAAaN,EAMlBt2B,KAAKs/C,UAAYH,EAMjBn/C,KAAKu/C,gBAAkBH,EAMvBp/C,KAAKk3B,kBAAoBX,EAMzBv2B,KAAKw/C,WAAa,0MAYpB/jD,EAAQnB,UAAUmlD,SAAW,SAASr+C,EAAOw2B,GACvC53B,KAAKs/C,WACPt/C,KAAKk3B,kBAAkBiB,aACrB/2B,MAASA,EAAMrF,OAEjBiE,KAAK0/C,aAAat+C,EAAMrF,MACxBiE,KAAKu/C,gBAAgBjoB,oBAAoBl2B,EAAME,WAE/CtB,KAAKu/C,gBAAgB7nB,oBAAoBt2B,EAAME,UAAU,EAAOs2B,IASpEn8B,EAAQnB,UAAUqlD,aAAe,WAC/B,OAAO3/C,KAAKw/C,YAQd/jD,EAAQnB,UAAUslD,UAAY,WAC5B,OAAQ5/C,KAAK42B,WAAW71B,QAO1BtF,EAAQnB,UAAUolD,aAAe,SAAS3jD,EAAM67B,GAC9C53B,KAAKw/C,WAAazjD,EACb67B,GACH53B,KAAKq/C,YAAYQ,MAAMpkD,EAAQqkD,UAAUC,eAAgBhkD,IAS7DN,EAAQnB,UAAU4+B,UAAY,WAC5Bl5B,KAAKu/C,gBAAgBrmB,aAOvBz9B,EAAQqkD,WAINC,eAAgB,oCAOlBtkD,EAAQC,OAASoM,QAAQpM,OAAO,mBAC9BujD,EAAA,EAAwBvjD,OAAOK,KAC/B65B,EAAA,EAAel6B,OAAOK,KACtBmjD,EAAA,EAAwBxjD,OAAOK,QAMlBQ,MAAM,2BAA2B,GAEhDd,EAAQC,OAAOqM,QAAQ,kBAAmBtM,GAG3B6B,EAAA,2RCxJf,IAAM7B,aAkBJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAiBnBuE,KAAKggD,UAA+B,IAApBh4C,EAAQ2sC,QAQxB30C,KAAKigD,UAA+B,IAApBj4C,EAAQ4d,QAcxB5lB,KAAKuO,WAAavG,EAAQuG,YAAc,KAOxCvO,KAAKkgD,IAAMl4C,EAAQ6d,GASnB7lB,KAAKmgD,qBAAuBn4C,EAAQo4C,oBAOpCpgD,KAAKqgD,eAAiBr4C,EAAQ1B,cAO9BtG,KAAKsgD,eAAiBt4C,EAAQvB,cAO9BzG,KAAK6S,MAAQ7K,EAAQjM,KA9FnB,OAAAN,EAAAnB,UA6IJgU,cA7II,WA8IF,OAAOtO,KAAKuO,YA9IV9S,EAAAnB,UAqJJkU,cArJI,SAqJUD,GACZvO,KAAKuO,WAAaA,GAtJhBsC,EAAApV,IAAAmV,IAAA,UAAAvU,IAAA,WA0GF,OAAO2D,KAAKggD,UA1GVt9C,IAAA,SAiHQiyC,GACV30C,KAAKggD,SAAWrL,KAlHd/jC,IAAA,UAAAvU,IAAA,WA0HF,OAAO2D,KAAKigD,UA1HVv9C,IAAA,SAiIQkjB,GACV5lB,KAAKigD,SAAWr6B,KAlIdhV,IAAA,KAAAvU,IAAA,WA8JF,OAAO2D,KAAKkgD,OA9JVtvC,IAAA,sBAAAvU,IAAA,WAsKF,OAAO2D,KAAKmgD,wBAtKVvvC,IAAA,gBAAAvU,IAAA,WA8KF,OAAO2D,KAAKqgD,kBA9KVzvC,IAAA,gBAAAvU,IAAA,WAsLF,OAAO2D,KAAKsgD,kBAtLV1vC,IAAA,OAAAvU,IAAA,WA8LF,OAAO2D,KAAK6S,SA9LVjC,IAAA,YAAAvU,IAAA,WA4MF,OAAO,KA5MLuU,IAAA,yBAAAvU,IAAA,WAqNF,OAA8B,OAAvB2D,KAAKsG,eAAiD,OAAvBtG,KAAKyG,kBArNzChL,KA0NS6B,EAAA,4SC1Nf,IAAM7B,cAYJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAEnBuM,EAAQwK,SAAW+tC,EAAA,EAAa9sC,aAAaI,SAC7C7L,EAAQ3K,KAAOmjD,EAAA,EAAwBthD,OAHpB,IAAAmD,mKAAA6F,CAAAlI,KAKnBoqB,EAAA5vB,KAAAwF,KAAMgI,IALa,OAanB3F,EAAKo+C,SAAWz4C,EAAQ6gC,QAbLxmC,EAZjB,gUAAAgM,CAAA5S,EAAA2uB,GAAAvZ,EAAApV,IAAAmV,IAAA,UAAAvU,IAAA,WAoCF,OAAO2D,KAAKygD,YApCV7vC,IAAA,kBAAAvU,IAAA,WA8CF,IAAIkvC,SACAvrC,KAAKoS,WAEPm5B,EADyBI,OAAO3rC,KAAKoS,YACF2F,MAAM,KAEzCwzB,KAEF,OAAOA,MArDL9vC,GAAwB8kD,EAAA,GA2DfjjD,EAAA,uCCjEf,IAAAojD,EAAArlD,EAAA,KAAAslD,EAAAtlD,EAAA,KAkBMI,EAAU,SAASiE,EAAOkhD,GAM9B5gD,KAAK6gD,MAAQnhD,EAUbM,KAAK8gD,SAAWF,yEAclBnlD,EAAQnB,UAAU0jD,oBAAsB,SAAS+C,EAAUrhC,GACzD,IAAMnc,EAAMo9C,EAAA,EACP3gD,KAAK8gD,SADE,IACUC,EAAS35C,KAAK,MAEhC45C,KAAQthC,EAAOtY,KAAK,OAGxB,OAAOpH,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAAK3D,KAAKi+C,mBAAmBjhD,KAAKgD,QAiB/DvE,EAAQnB,UAAU2mD,iCAAmC,SACnDF,EAAUG,GAEV,IAAM9jC,KACAtW,KAEN6F,EAAqBu0C,EAArBt0C,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA8B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAnB2I,EAAmBgI,EAC5BpG,EAAU5B,EAAOvI,SAAjB,KAA8BuI,EAAOsN,UAActN,EAAO3I,MAC1D6gB,EAAWhjB,KAAK8K,EAAOvI,UAGzBmK,EAAA,UAAsBsW,EAAWhW,KAAK,KAEtC,IAAM7D,EAAMo9C,EAAA,EAAsB3gD,KAAK8gD,SAA3B,IAAuCC,EAAS35C,KAAK,KAAQN,GACzE,OAAO9G,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAAK3D,KAAKi+C,mBAAmBjhD,KAAKgD,QAS/DvE,EAAQnB,UAAU2jD,mBAAqB,SAAStB,GAC9C,OAAO,IAAI+D,EAAA,GAAkB/O,aAAagL,EAAKjjD,OAUjD+B,EAAQnB,UAAUwhD,eAAiB,SAASqF,EAASxjC,GACnD,IAAMpa,EAASvD,KAAK8gD,SAAd,IAA0BK,EAC1BC,GAAU,IAAIV,EAAA,GAAkB/hC,cAAchB,GACpD,OAAO3d,KAAK6gD,MAAMQ,KAAK99C,EAAK69C,GAC1BE,SAAUC,eAAgB,oBAC1Br6C,iBAAiB,KAWrBzL,EAAQnB,UAAUuhD,cAAgB,SAASsF,EAAS5oC,GAClD,IAAMhV,EAASvD,KAAK8gD,SAAd,IAA0BK,EAAQp/B,WAAlC,IAAgDxJ,EAAQm4B,QACxD0Q,GAAU,IAAIV,EAAA,GAAkBc,aAAajpC,GACnD,OAAOvY,KAAK6gD,MAAM5J,IAAI1zC,EAAK69C,GACzBE,SAAUC,eAAgB,oBAC1Br6C,iBAAiB,KAWrBzL,EAAQnB,UAAUiiD,cAAgB,SAAS4E,EAAS5oC,GAClD,IAAMhV,EAASvD,KAAK8gD,SAAd,IAA0BK,EAAQp/B,WAAlC,IAAgDxJ,EAAQm4B,QAC9D,OAAO1wC,KAAK6gD,MAAMxE,OAAO94C,GACvB+9C,SAAUC,eAAgB,oBAC1Br6C,iBAAiB,MAQrBzL,EAAQC,OAASoM,QAAQpM,OAAO,sBACjBqM,QAAQ,iBAAkBtM,GAG1B6B,EAAA,kCCpJf,IAAM7B,EAAUqM,QAAQpM,OAAO,mBAc/BD,EAAQgmD,SAAW,SAASrrB,GAC1B,gBASWsrB,EAAMC,EAAMC,GAInB,IAAIC,EAAU,KACd,OACE,WAAkB,QAAAC,EAAA3yC,UAAAjV,OAANglB,EAAMrS,MAAAi1C,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN7iC,EAAM6iC,GAAA5yC,UAAA4yC,GAChB,IAAMC,EAAUhiD,KAKA,OAAZ6hD,GACFzrB,EAASqC,OAAOopB,GAElBA,EAAUzrB,EAPI,WACZyrB,EAAU,KACVH,EAAK7mD,MAAMmnD,EAAS9iC,IAKIyiC,EAAMC,MAzB1CnmD,EAAQgmD,8BA8BRhmD,EAAQwmD,QAAQ,eAAgBxmD,EAAQgmD,UAGzBnkD,EAAA,kCCrDf,IAAA6B,EAAA9D,EAAA,GAAA6mD,EAAA7mD,EAAA,IAiCMI,EAAU,SAAS0mD,EAAUC,GAKjCpiD,KAAKqiD,SAAWD,EAMhBpiD,KAAKsiD,QAAUH,EAASI,SAASrgC,UAAU,EAAGigC,EAASI,SAASroD,OAAS,GAMzE8F,KAAKwiD,QAAUL,EAASM,SAMxBziD,KAAK0iD,MAAQP,EAASQ,KAAO9gB,SAASsgB,EAASQ,KAAM,SAAMziD,EAM3DF,KAAK4iD,MAAQT,EAASU,SAMtB7iD,KAAK8iD,WAAaZ,EAAA,EAAUa,kBAAkBZ,EAASa,QAMvDhjD,KAAKijD,UAAYf,EAAA,EAAUa,kBAAkBZ,EAASe,OAQxDznD,EAAQ0nD,aAAe,SAASf,EAASnzB,GACvC,IACEmzB,EAAQe,aAAa,KAAM,GAAIl0B,GAC/B,MAAOlrB,MAYXtI,EAAQnB,UAAU8oD,QAAU,WAC1B,OAAOpjD,KAAK4iD,OASdnnD,EAAQnB,UAAU+oD,aAAe,WAC/B,IAAMC,KAEFtjD,KAAKsiD,SACPgB,EAAIlpD,KAAK4F,KAAKsiD,QAAS,MAGrBtiD,KAAKwiD,SAA4B,SAAjBxiD,KAAKsiD,WACvBgB,EAAIlpD,KAAK,MAETkpD,EAAIlpD,KAAK4F,KAAKwiD,cAEKtiD,IAAfF,KAAK0iD,OACPY,EAAIlpD,KAAK,IAAKuxC,OAAO3rC,KAAK0iD,SAI1B1iD,KAAK4iD,QACH5iD,KAAKwiD,SAAoC,MAAzBxiD,KAAK4iD,MAAMxgB,OAAO,IACpCkhB,EAAIlpD,KAAK,KAEXkpD,EAAIlpD,KAAK4F,KAAK4iD,QAGhB,IAAMW,EAAmBrB,EAAA,EAAUsB,kBAAkBxjD,KAAK8iD,YACtDS,EAAiBrpD,OAAS,GAC5BopD,EAAIlpD,KAAK,IAAKmpD,GAGhB,IAAME,EAAkBvB,EAAA,EAAUsB,kBAAkBxjD,KAAKijD,WAIzD,OAHIQ,EAAgBvpD,OAAS,GAC3BopD,EAAIlpD,KAAK,IAAKqpD,GAETH,EAAIl8C,KAAK,KAUlB3L,EAAQnB,UAAU+M,SAAW,SAASuJ,GACpC,OAAOA,KAAO5Q,KAAK8iD,YAUrBrnD,EAAQnB,UAAUopD,iBAAmB,SAAS9yC,GAC5C,OAAOA,KAAO5Q,KAAKijD,WAUrBxnD,EAAQnB,UAAUqpD,SAAW,SAAS/yC,GACpC,OAAO5Q,KAAK8iD,WAAWlyC,IAUzBnV,EAAQnB,UAAUspD,iBAAmB,SAAShzC,GAC5C,OAAO5Q,KAAKijD,UAAUryC,IAWxBnV,EAAQnB,UAAUupD,cAAgB,SAASjzC,GACzC,IAAMrU,EAAQyD,KAAK2jD,SAAS/yC,GAC5B,QAAc1Q,IAAV3D,EAAJ,CAGA4C,EAAA,EAAYqe,aAAajhB,GACzB,IAAMunD,EAAajiB,SAAStlC,EAAO,IACnC,OAAQwnD,MAAMD,QAAe5jD,EAAY4jD,IAY3CroD,EAAQnB,UAAU0pD,gBAAkB,SAASpzC,GAC3C,IAAMrU,EAAQyD,KAAK2jD,SAAS/yC,GAC5B,QAAc1Q,IAAV3D,EAAJ,CAGA4C,EAAA,EAAYqe,aAAajhB,GACzB,IAAM0nD,EAAeC,WAAW3nD,GAChC,OAAOwnD,MAAME,QAAgB/jD,EAAY+jD,IAW3CxoD,EAAQnB,UAAU6pD,sBAAwB,SAASvzC,GACjD,IAAMrU,EAAQyD,KAAK4jD,iBAAiBhzC,GACpC,QAAc1Q,IAAV3D,EAAJ,CAGA4C,EAAA,EAAYqe,aAAajhB,GACzB,IAAMunD,EAAajiB,SAAStlC,EAAO,IACnC,OAAQwnD,MAAMD,QAAe5jD,EAAY4jD,IAS3CroD,EAAQnB,UAAU8pD,aAAe,WAC/B,IAAMrH,KACN,IAAK,IAAMnsC,KAAO5Q,KAAK8iD,WACrB/F,EAAK3iD,KAAKwW,GAEZ,OAAOmsC,GASTthD,EAAQnB,UAAU+pD,qBAAuB,WACvC,IAAMtH,KACN,IAAK,IAAMnsC,KAAO5Q,KAAKijD,UACrBlG,EAAK3iD,KAAKwW,GAEZ,OAAOmsC,GAWTthD,EAAQnB,UAAUgqD,uBAAyB,SAASjjB,GAClD,IAAM0b,KACN,IAAK,IAAMnsC,KAAO5Q,KAAK8iD,WACM,GAAvBlyC,EAAI4Q,QAAQ6f,IACd0b,EAAK3iD,KAAKwW,GAGd,OAAOmsC,GAWTthD,EAAQnB,UAAUiqD,+BAAiC,SAASljB,GAC1D,IAAM0b,KACN,IAAK,IAAMnsC,KAAO5Q,KAAKijD,UACM,GAAvBryC,EAAI4Q,QAAQ6f,IACd0b,EAAK3iD,KAAKwW,GAGd,OAAOmsC,GASTthD,EAAQnB,UAAUmrB,aAAe,SAAS3e,GACxC,IAAK,IAAM8J,KAAO9J,EAChB9G,KAAK8iD,WAAWlyC,GAAO9J,EAAO8J,IAUlCnV,EAAQnB,UAAUkqD,qBAAuB,SAAS19C,GAChD,IAAK,IAAM8J,KAAO9J,EAChB9G,KAAKijD,UAAUryC,GAAO9J,EAAO8J,IAUjCnV,EAAQnB,UAAUk9B,YAAc,SAAS5mB,UAChC5Q,KAAK8iD,WAAWlyC,IASzBnV,EAAQnB,UAAUmqD,oBAAsB,SAAS7zC,UACxC5Q,KAAKijD,UAAUryC,IAQxBnV,EAAQnB,UAAU0hD,QAAU,WAC1BvgD,EAAQ0nD,aAAanjD,KAAKqiD,SAAUriD,KAAKqjD,iBAS3C5nD,EAAQnB,UAAUoqD,QAAU,SAASC,GACnC3kD,KAAK4iD,MAAQ+B,IAYflpD,EAAQmpD,gBAAkB,SAASt3B,EAAYu3B,GAC7C,IAAMzC,EAAUyC,EAAQzC,QAClBr6C,EAAU,IAAItM,EAAQopD,EAAQ1C,SAAU0C,EAAQzC,SAElD0C,EAAU/8C,EAAQs7C,eActB,OAbA/1B,EAAWM,OAAO,WAChB,IAAMm3B,EAASh9C,EAAQs7C,eACnByB,IAAYC,GACdz3B,EAAW03B,WAAW,WACpBF,EAAUC,OACM7kD,IAAZkiD,QAAkDliD,IAAzBkiD,EAAQe,cACnC1nD,EAAQ0nD,aAAaf,EAAS2C,GAEhCz3B,EAAWqB,WAAW,0BAKrB5mB,sCAcTtM,EAAQwpD,aAAe,SAASC,GAI9BA,EAAA,KAA4B,WA0D1B,OArDEC,OAJqD,WAKnD,MAAO,IAMTjC,KAXqD,SAWhDkC,GACH,YAAoBllD,IAAbklD,EAAyBplD,KAAO,IAKzCqlD,KAjBqD,WAkBnD,MAAO,IAMTV,KAxBqD,SAwBhDS,GACH,YAAoBllD,IAAbklD,EAAyBplD,KAAO,IAKzC2iD,KA9BqD,WA+BnD,OAAO,GAKTJ,SApCqD,WAqCnD,MAAO,IAETn9B,QAvCqD,aA8CrD49B,OA9CqD,SA8C9CsC,EAAYC,GACjB,YAAsBrlD,IAAfolD,EAA2BtlD,SAMpCuD,IArDqD,SAqDjDiiD,GACF,MAAO,uCAaf/pD,EAAQC,OAASoM,QAAQpM,OAAO,oBACjBumD,QAAQ,eAAgBxmD,EAAQmpD,iBAGhCtnD,EAAA,kCCtef,IAAA6B,EAAA9D,EAAA,GAAAoqD,EAAApqD,EAAA,KAeMI,EAAU,SAASiqD,EAAcC,GAAmB,IAAAtjD,EAAArC,KAMxDA,KAAK4lD,gBAKL5lD,KAAK0lD,aAAeA,EAMpB1lD,KAAK6lD,cAAgBF,EAMrB3lD,KAAK8lD,iBAEL9lD,KAAK+lD,oBAAmB,GAMxB,IAAMC,EAAYN,EAAatB,eAAel/C,OAAO,SAAA0L,GAAA,MAAc,SAAPA,GAAyB,eAAPA,IAE9E,GAAyB,IAArBo1C,EAAU9rD,QACZ,GAAI8F,KAAK8lD,iBAAkB,KAAAnoB,EAAA,SACd/sB,GACTzR,EAAA,EAAYmE,OAAOsN,GAEnBvO,EAAKwjD,cAAc7/C,KAAK,SAACigD,GACvB,GAAIr1C,EAAIs1C,MAAMD,GAAY,CACxB,IAAM1pD,EAAQO,OAAOqpD,aAAav1C,GAMlC,OAJEvO,EAAKujD,aAAah1C,QADN1Q,IAAV3D,GAAiC,OAAVA,EACAA,EAEA,IAEpB,MAXb,IAAK,IAAMqU,KAAO9T,OAAOqpD,aAAcxoB,EAA5B/sB,SAiBbo1C,EAAUhjD,QAAQ,SAAC4N,GACjBvO,EAAKwjD,cAAc7/C,KAAK,SAACigD,GACvB,GAAIr1C,EAAIs1C,MAAMD,GAAY,CACxB,IAAM1pD,EAAQ8F,EAAKqjD,aAAa/B,SAAS/yC,GACzC,QAAc1Q,IAAV3D,EAEF,OADA8F,EAAKujD,aAAah1C,GAAOrU,GAClB,sGAanBd,EAAQnB,UAAUyrD,mBAAqB,SAASxpD,GAI9C,GAHAyD,KAAK8lD,iBAAmBvpD,EAGpByD,KAAK8lD,iBACP,IACM,iBAAkBhpD,QACpBA,OAAOqpD,aAAP,KAA8B,UACvBrpD,OAAOqpD,aAAP,MAEPnmD,KAAK8lD,kBAAmB,EAE1B,MAAOM,GACPtiD,QAAQC,MAAMqiD,GACdpmD,KAAK8lD,kBAAmB,EAG5B,OAAO9lD,KAAK8lD,kBAQdrqD,EAAQnB,UAAU+rD,gBAAkB,SAASz1C,GAC3C,OAAO5Q,KAAK4lD,aAAah1C,IAS3BnV,EAAQnB,UAAUgsD,sBAAwB,SAAS11C,GACjD,IAAMrU,EAAQyD,KAAK4lD,aAAah1C,GAChC,QAAc1Q,IAAV3D,EAGJ,OAAOA,GASTd,EAAQnB,UAAUisD,sBAAwB,SAAS31C,GACjD,IAAMrU,EAAQyD,KAAK4lD,aAAah1C,GAChC,QAAc1Q,IAAV3D,EAGJ,OAAO2nD,WAAW3nD,IASpBd,EAAQnB,UAAUksD,uBAAyB,SAAS51C,GAClD,IAAMrU,EAAQyD,KAAK4lD,aAAah1C,GAChC,QAAc1Q,IAAV3D,EAGJ,MAAiB,SAAVA,GAQTd,EAAQnB,UAAU69B,YAAc,SAASz7B,GAEvC,GADAsD,KAAK0lD,aAAajgC,aAAa/oB,GAC3BsD,KAAK8lD,iBACP,IAAK,IAAMl1C,KAAOlU,EAAQ,CACxByC,EAAA,EAAYmE,OAAOsN,GACnB,IAAMrU,EAAQG,EAAOkU,GACrBzR,EAAA,EAAYmE,YAAiBpD,IAAV3D,GACnBO,OAAOqpD,aAAav1C,GAAOrU,IAUjCd,EAAQnB,UAAUk9B,YAAc,SAAS5mB,GACvC5Q,KAAK0lD,aAAaluB,YAAY5mB,GAC1B5Q,KAAK8lD,yBACAhpD,OAAOqpD,aAAav1C,KAQ/BnV,EAAQC,OAASoM,QAAQpM,OAAO,oBAC9B+pD,EAAA,EAAyB/pD,OAAOK,QAEnBgM,QAAQ,mBAAoBtM,GAC3CA,EAAQC,OAAOa,MAAM,qBAAsB,IAAIkqD,OAAO,QAGvCnpD,EAAA,mCCrMf,IAAAopD,EAAArrD,EAAA,IAGMI,GAONA,4BAAsC,WACpC,IAAMsd,EAAQ1e,OAAAqsD,EAAA,EAAArsD,GACd,OAAO,SAASke,EAAS0U,GACvB,OAAOlU,EAAMR,EAAQ+D,cAActD,aAQvCvd,8BAAwC,WACtC,IAAMsd,EAAQ1e,OAAAqsD,EAAA,EAAArsD,GACd,OAAO,SAASke,EAAS0U,GACvB,OAAOlU,EAAA,SAKIzb,EAAA,2DCTf,IAAM7B,cAUJ,SAAAA,EAAYiE,EAAOC,EAAW2tB,EAAYq5B,EAAuBC,gGAAS3+C,CAAAjI,KAAAvE,GAAA,IAAA4G,mKAAA6F,CAAAlI,KAExE6mD,EAAArsD,KAAAwF,OAFwE,OAQxEqC,EAAKhC,OAASX,EAMd2C,EAAKg9C,YAAc/xB,EAOnBjrB,EAAKy+C,SAAW6F,EAAsBvhC,QAAQ,MAAO,IAMrD/iB,EAAKykD,MAAQF,EAQbvkD,EAAK0kD,cAAiBpnD,EAAUY,IAAI,iCAChCZ,EAAUtD,IAAI,iCACd,KAEJgG,EAAK2kD,QAvCmE3kD,EAVtE,OAAA5G,EAAAohC,SAAA,6XAAAxuB,CAAA5S,EAAAorD,GAAAprD,EAAAnB,UAyDJ0sD,MAzDI,WA0DF,IAAMzjD,EAASvD,KAAK8gD,SAAd,IAA0BrlD,EAAQwrD,YAAYC,aACpDlnD,KAAKK,OAAOhE,IAAIkH,GAAM2D,iBAAiB,IAAOvD,KAC5C3D,KAAKmnD,aAAanqD,KAAKgD,MAAM,KA5D7BvE,EAAAnB,UAuEJ8sD,eAvEI,SAuEWC,EAAQC,EAAQC,GAAS,IAAAxhD,EAAA/F,KAChCuD,EAASvD,KAAK8gD,SAAd,IAA0BrlD,EAAQwrD,YAAYO,gBAEpD,OAAOxnD,KAAKK,OAAOghD,KAAK99C,EAAKmyB,EAAE+xB,OAC7BC,YAAeL,EACfM,YAAeL,EACfM,mBAAsBL,KAEtBjG,SAAUC,eAAgB,qCAC1Br6C,iBAAiB,IAChBvD,KAAM,SAACC,GACRmC,EAAK+gD,MAAMe,qBAAsB,EACjC9hD,EAAKs5C,YAAYyI,WAChB9qD,KAAKgD,QApFNvE,EAAAnB,UA6FJytD,MA7FI,SA6FEA,EAAOC,GACX,IAAMzkD,EAASvD,KAAK8gD,SAAd,IAA0BrlD,EAAQwrD,YAAYgB,MAEpD,OAAOjoD,KAAKK,OAAOghD,KAAK99C,EAAKmyB,EAAE+xB,OAAOM,MAASA,EAAOG,SAAYF,KAChE1G,SAAUC,eAAgB,qCAC1Br6C,iBAAiB,IAChBvD,KACD3D,KAAKmnD,aAAanqD,KAAKgD,MAAM,KApG7BvE,EAAAnB,UA2GJ6tD,OA3GI,WA2GK,IAAAthD,EAAA7G,KACDooD,EAAWpoD,KAAK8mD,MAAL,YAA4B9mD,KAAK+mD,cAC5CxjD,EAASvD,KAAK8gD,SAAd,IAA0BrlD,EAAQwrD,YAAYoB,OACpD,OAAOroD,KAAKK,OAAOhE,IAAIkH,GAAM2D,iBAAiB,IAAOvD,KAAK,WACxDkD,EAAKyhD,WAAWF,MA/GhB3sD,EAAAnB,UAwHJiuD,cAxHI,SAwHUR,GACZ,IAAMxkD,EAASvD,KAAK8gD,SAAd,IAA0BrlD,EAAQwrD,YAAYuB,eAM9CC,EAAY,SAAS9L,GAGzB,OADEA,EAAKjjD,MAEPsD,KAAKgD,MAEP,OAAOA,KAAKK,OAAOghD,KAAK99C,EAAKmyB,EAAE+xB,OAAOM,MAASA,KAC7CzG,SAAUC,eAAgB,uCACzB59C,KAAK8kD,IAvINhtD,EAAAnB,UA6IJouD,mBA7II,WA8IF,OAAO1oD,KAAK8mD,MAAM6B,iBA9IhBltD,EAAAnB,UAoJJsuD,UApJI,WAqJF,OAAO5oD,KAAK8mD,MAAM+B,SArJhBptD,EAAAnB,UA8JJ6sD,aA9JI,SA8JS2B,EAAqBnM,GAChC,IAAMoM,EAA4DpM,EAAKjjD,KAEvE,GADAsG,KAAKgpD,SAASD,GAAWD,GACrBA,EAAqB,CAEvB,IAAMtmC,EAAQ,IAAIymC,EAAA,EAAgB,SAAUC,KAAMlpD,KAAK8mD,QACvD9mD,KAAKuH,cAAcib,GAErB,OAAOm6B,GAtKLlhD,EAAAnB,UA8KJ0uD,SA9KI,SA8KKD,EAAUI,GACjB,IAAK,IAAMv4C,KAAOm4C,EAChB/oD,KAAK8mD,MAAMl2C,GAAOm4C,EAASn4C,GAE7B,GAAIu4C,QAAmCjpD,IAAtB6oD,EAASK,SAAwB,CAEhD,IAAM5mC,EAAQ,IAAIymC,EAAA,EAAgB,SAAUC,KAAMlpD,KAAK8mD,QACvD9mD,KAAKuH,cAAcib,KArLnB/mB,EAAAnB,UA8LJguD,WA9LI,SA8LOF,GAET,IAAK,IAAMx3C,KADXw3C,EAAWA,IAAY,EACLpoD,KAAK8mD,MACrB9mD,KAAK8mD,MAAMl2C,GAAO,KAGpB,IAAM4R,EAAQ,IAAIymC,EAAA,EAAgB,UAAWC,KAAMlpD,KAAK8mD,QACxD9mD,KAAKuH,cAAcib,GACd4lC,GACHpoD,KAAKgnD,SAvMLvrD,SAAwB,GA+M9BA,EAAQwrD,aACNO,gBAAiB,cACjBN,aAAc,YACde,MAAO,QACPI,OAAQ,SACRG,eAAgB,sBAMlB/sD,EAAQC,OAASoM,QAAQpM,OAAO,+BAChCD,EAAQC,OAAOqM,QAAQ,2BAA4BtM,GAEnDA,EAAQC,OAAOa,MAAM,WACnBosD,gBAAmB,KACnBd,oBAAuB,KACvBgB,QAAW,KACXQ,UAAa,KACbD,SAAY,OAIC9rD,EAAA,sDC/Of,IAAM7B,EAAU,aAOhBA,EAAQnB,UAAUgvD,WAAa,SAAS/sD,GAA4B,IAArBgtD,EAAqBp6C,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,GAAN,KAC5D,OAAiB,OAAV5S,EAAiB,IAAIuiC,KAAKviC,GAASgtD,GAQ5C9tD,EAAQnB,UAAUkvD,QAAU,SAAS3qB,GAA2B,IAArB0qB,EAAqBp6C,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,GAAN,KACxD,OAAO0vB,EAAOA,EAAK2qB,UAAYD,GAcjC9tD,EAAQnB,UAAU2rC,WAAa,SAASn1B,GAEtC,IAAM24C,EAAUzpD,KAAKspD,WAAWx4C,EAAK44C,UAC/BC,EAAU3pD,KAAKspD,WAAWx4C,EAAK84C,UAE/BC,EAAiB7pD,KAAKspD,WAAWx4C,EAAKg5C,YAAaL,GACnDM,EAAiB/pD,KAAKspD,WAAWx4C,EAAKk5C,YAAaL,GAEnDM,EAA+B,UAAdn5C,EAAKyuB,MACzBv/B,KAAKwpD,QAAQK,GAAiB7pD,KAAKwpD,QAAQO,IAC5C/pD,KAAKwpD,QAAQK,GAEf,OACEJ,QAASzpD,KAAKwpD,QAAQC,GACtBE,QAAS3pD,KAAKwpD,QAAQG,GACtBtkD,OAAQ4kD,IAYZxuD,EAAQnB,UAAU4vD,WAAa,SAASC,GACtC,OAAO,IAAIrrB,KACTqrB,EAAUC,iBACVD,EAAUE,cACVF,EAAUD,gBAOdzuD,EAAQC,OAASoM,QAAQpM,OAAO,gBACjBqM,QAAQ,WAAYtM,GAGpB6B,EAAA,gKCzDTgtD,EAAU,SAAV7uD,EAAmBuM,GAEvBuiD,EAAA,EAAqB/vD,KAAKwF,MACxBwqD,gBAAiB/uD,EAAQgvD,iBACzBp5B,YAAa51B,EAAQ61B,aACrBo5B,cAAejvD,EAAQkvD,iBAOzB3qD,KAAK4qD,QAAU,KAOf5qD,KAAKupB,aAA6BrpB,IAAnB8H,EAAQwd,OAAuBxd,EAAQwd,OAAS,KAO/DxlB,KAAK6qD,UAAW,EAOhB7qD,KAAK8qD,eAAiB,KAOtB9qD,KAAK+qD,aAAe,KAUpB/qD,KAAKgrD,uBAAyB,EAQ9BhrD,KAAKirD,aAAe,IAAI3e,EAAA,GACtB9mB,OAAQ,IAAI4mB,EAAA,GACVngB,iBAAiB,EACjBogB,OAAO,IAETtzB,MAAO/Q,EAAQ+Q,OAASmyC,EAAA,EAAsBC,gCAGhD7b,EAAA,EAAgBtvC,KAAM,gBAAiBA,KAAKgzB,aAAchzB,OAG5DkyC,EAAA,EAAgBoY,EAASC,EAAA,GASzBD,EAAQG,iBAAmB,SAASjoC,GAElC,OADAxiB,KAAK4qD,QAAUpoC,EAAMm7B,OACd,GAUT2M,EAAQK,eAAiB,SAASnoC,GAChC,IAAM4oC,EAASprD,KAAK4qD,QACdS,EAAU7oC,EAAMm7B,MAChB2N,EAAKF,EAAO,GAAKC,EAAQ,GACzBE,EAAKH,EAAO,GAAKC,EAAQ,GAE3BG,GAAO,EAUX,OAXwBF,EAAKA,EAAKC,EAAKA,GAEhBvrD,KAAKgrD,yBAC1BhrD,KAAKyrD,mBAAmBjpC,GACnBxiB,KAAK6qD,SAGR7qD,KAAK0rD,iBAFL1rD,KAAK2rD,cAAcnpC,GAIrBgpC,GAAO,GAEFA,GAUTlB,EAAQh5B,aAAe,SAASs6B,GAC9B,IAAIJ,GAAO,EAMX,MAL6B,gBAAzBI,EAAgBvuD,KAClBmuD,EAAOxrD,KAAKyrD,mBAAmBG,GACG,aAAzBA,EAAgBvuD,OACzBmuD,GAAO,GAEFjB,EAAA,EAAmB/vD,KAAKwF,KAAM4rD,IAAoBJ,GAU3DlB,EAAQhwD,UAAUmxD,mBAAqB,SAASjpC,GAM9C,OALIxiB,KAAK6qD,SACP7qD,KAAK6rD,eAAerpC,GAEpBxiB,KAAK8rD,2BAA2BtpC,IAE3B,GAQT8nC,EAAQhwD,UAAUwxD,2BAA6B,SAAStpC,GACtD,IAAM1F,EAAc0F,EAAMyR,WAAWh3B,QACrC,GAA0B,OAAtB+C,KAAK+qD,aACP/qD,KAAK+qD,aAAe,IAAIgB,EAAA,EAAU,IAAIC,EAAA,EAAYlvC,IAClD9c,KAAKisD,4BACA,CACL,IAAMC,EAAkBlsD,KAAK+qD,aAAazuC,cAC1CwsB,EAAA,EAAY1d,iBAAiB8gC,EAAiBF,EAAA,GAC9CE,EAAgBC,eAAervC,KASnCwtC,EAAQhwD,UAAU2xD,sBAAwB,WACxC,IAAMG,KACsB,OAAxBpsD,KAAK8qD,gBACPsB,EAAehyD,KAAK4F,KAAK8qD,gBAED,OAAtB9qD,KAAK+qD,cACPqB,EAAehyD,KAAK4F,KAAK+qD,cAE3B,IAAMvlC,EAASxlB,KAAKirD,aAAazhC,YACjChE,EAAOkH,OAAM,GACblH,EAAO6mC,YAAYD,IASrB9B,EAAQhwD,UAAUqxD,cAAgB,SAASnpC,GACzC,IAAMrR,EAAQqR,EAAMyR,WACpBj0B,KAAK6qD,UAAW,EAChB,IAAMxvC,EAAO,IAAIixC,EAAA,GAAkBn7C,EAAMlU,QAASkU,EAAMlU,UAClDo2B,EAAS,IAAIk5B,EAAA,EAAap7C,EAAO,GACjCqK,EAAW,IAAIgxC,EAAA,GAA0BnxC,EAAMgY,IACrDyV,EAAA,EAAYxlC,YAAoBpD,IAAbsb,GACnBxb,KAAK8qD,eAAiB,IAAIiB,EAAA,EAC1B/rD,KAAK8qD,eAAet/B,YAAYhQ,GAChCxb,KAAKisD,wBAEL,IAAM9gC,EAAM,IAAIshC,EAAA,EAAgB,aAAcl0C,QAASvY,KAAK8qD,iBAC5D9qD,KAAKuH,cAAc4jB,IASrBm/B,EAAQhwD,UAAUuxD,eAAiB,SAASrpC,GAC1C,IAAMyR,EAAazR,EAAMyR,WAGnBy4B,EAFW5jB,EAAA,EAAY1d,iBAC3BprB,KAAK8qD,eAAexuC,cAAekwC,EAAA,GACTG,qBACtBtxC,EAAOqxC,EAAW,GACxB5jB,EAAA,EAAY1d,iBAAiB/P,EAAMixC,EAAA,GACnC,IAAMxvC,EAAczB,EAAK0B,iBACnBmvC,EAAkBlsD,KAAK+qD,aAAazuC,cAC1CwsB,EAAA,EAAY1d,iBAAiB8gC,EAAiBF,EAAA,GAC9CE,EAAgBC,eAAel4B,GAC/B,IAAM24B,EAAO9vC,EAAYA,EAAY5iB,OAAS,GAC9C0yD,EAAK,GAAK34B,EAAW,GACrB24B,EAAK,GAAK34B,EAAW,GACrB6U,EAAA,EAAY1d,iBAAiB/P,EAAMixC,EAAA,GACnCjxC,EAAK8wC,eAAervC,GACLgsB,EAAA,EAAY1d,iBAAiBshC,EAAW,GAAIH,EAAA,GACpDM,UAAUxxC,EAAKyxC,aACtB9sD,KAAKisD,yBASP3B,EAAQhwD,UAAUyyD,cAAgB,WAChC/sD,KAAK6qD,UAAW,EAChB,IAAMj5B,EAAgB5xB,KAAK8qD,eAM3B,OALsB,OAAlBl5B,IACF5xB,KAAK8qD,eAAiB,KACtB9qD,KAAK+qD,aAAe,KACpB/qD,KAAKirD,aAAazhC,YAAYkD,OAAM,IAE/BkF,GAOT04B,EAAQhwD,UAAU0yD,gBAAkBC,EAAA,EAMpC3C,EAAQhwD,UAAU04B,aAAe,WAC/B,IAAMpuB,EAAM5E,KAAKo0B,SACXhjB,EAASpR,KAAK0V,YACR,OAAR9Q,GAAiBwM,GACnBpR,KAAK+sD,gBAEP/sD,KAAKirD,aAAal+B,OAAO3b,EAASxM,EAAM,OAQ1C0lD,EAAQhwD,UAAUoxD,eAAiB,WACjC,IAAM95B,EAAgB5xB,KAAK+sD,gBAC3BjkB,EAAA,EAAYxlC,OAAyB,OAAlBsuB,GAEE,OAAjB5xB,KAAKupB,SACPvpB,KAAKupB,QAAQ+C,WAAWsF,GAI1B,IAAMpP,EAAQ,IAAIiqC,EAAA,EAAgB,WAAYl0C,QAASvY,KAAK8qD,iBAC5D9qD,KAAKuH,cAAcib,IAOrB8nC,EAAQhwD,UAAUyyB,OAAS,SAASnoB,GAClC2lD,EAAA,EAAqBjwD,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GACjD5E,KAAKgzB,gBAIQ,IAAAk6B,EAAA,mBCnSTC,EAAU,SAASC,EAAkBC,GAA6E,IAA/DrlD,EAA+DmH,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,MAEtHm+C,EAAA,EAAuB9yD,KAAKwF,KAA0DgI,GAOtFhI,KAAK6xB,iBACuB3xB,IAAxB8H,EAAQ6pB,YACV7xB,KAAK6xB,YAAc7pB,EAAQ6pB,aAE3B7xB,KAAK6xB,YAAcM,SAASC,cAAc,QAC1CpyB,KAAK6xB,YAAYQ,YAAc,oBAOjCryB,KAAKqtD,aAAevkB,EAAA,EAAYxlC,OAAO+pD,GAMvCrtD,KAAKotD,iBAAmBtkB,EAAA,EAAYxlC,OAAO8pD,IAI7Clb,EAAA,EAAgBib,EAASG,EAAA,GAMzBH,EAAQ7yD,UAAUo4B,sBAAwB,SAAS3Z,EACjDyM,GAEA,OAAO,IAAI0nC,GACT1nC,SACAzM,WAUJo0C,EAAQ7yD,UAAUk6B,cAAgB,SAASjyB,GACzC,IAAM8Z,EAAOysB,EAAA,EAAY1d,iBAAiBprB,KAAK4xB,cAActV,cAAekwC,EAAA,GACtEnxC,EAAOytB,EAAA,EAAY1d,iBAAiB/O,EAAKkxC,gBAAgB,GAAIjB,EAAA,GAInE/pD,EAHe4qD,EAAQpuC,yBACrB1D,EAAMytB,EAAA,EAAY1d,iBAAiBprB,KAAKo0B,SAAS3U,UAAUgyB,gBAAiB+b,EAAA,GAC5ExtD,KAAK8xB,SAAU9xB,KAAK+xB,UAAW/xB,KAAKotD,iBAAkBptD,KAAKqtD,cAC5ChyC,EAAKK,sBAcxByxC,EAAQpuC,yBAA2B,SACjC1D,EAAMhD,EAAYyZ,EAAUC,EAAW07B,EAAcC,GAErD,IAAIpqB,EAAS6pB,EAAQQ,mBAAmBtyC,EAAMyW,EAAU47B,GAKxD,OAHApqB,QAAegqB,EAAA,EAAuB/xC,mBACpCF,EAAMhD,EAAY0Z,EAAW07B,IAajCN,EAAQQ,mBAAqB,SAAStyC,EAAMyW,EAAUtkB,GAEpD,OAAUA,EADK2/C,EAAQS,UAAUvyC,GACRyW,GAAzB,KASFq7B,EAAQS,UAAY,SAASvyC,GAC3B,IAAMwyC,EAASxyC,EAAK0B,iBACduuC,EAAKuC,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BtC,EAAKsC,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BC,EAAMlyC,KAAKmyC,KAAKxC,EAAK3vC,KAAKoyC,KAAK1C,EAAKA,EAAKC,EAAKA,IAEpD,OADeD,EAAK,EAAI,GAAK,GACZwC,EAAM,IAAMlyC,KAAKE,GAAM,KAI3Bxe,EAAA,6CClIT2wD,UAAUnmD,QAAQpM,OAAO,aAC7B,gBAIFuyD,EAAQ1xD,MAAM,uBAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,qBACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,gCAGN0W,EAAQlX,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+B57C,EAAQ,SA0B5D4yD,EAAQC,WAAa,SAASC,GAC5B,OACE3b,SAAU,IACV+E,YAAa4W,EAMb1b,KAAM,SAACC,EAAO9oB,EAAS+oB,GACrB/oB,EAAQwkC,SAAS,WAKjB1b,EAAMuJ,MAAQ,SAAS9wB,GACjBA,IACFA,EAAImzB,kBACJnzB,EAAIkzB,kBAENz0B,EAAQwkC,SAAS,WAInB1b,EAAM9kB,OAAO,OAAQ,SAAChY,EAAQiY,GAC5BjE,EAAQykC,IAAI,UAAWz4C,EAAS,QAAU,aAzBlDq4C,EAAQC,4CA+BRD,EAAQlb,UAAU,YAAakb,EAAQC,YAGxB,IAAAI,EAAA,ECrDTC,EAAU,SAASC,EAAUlhC,EAAYkV,EAAMpM,GAAU,IAAA/zB,EAAArC,KAO7DA,KAAK0yC,MAAQplB,EAAWmhC,MAAK,GAG7BzuD,KAAK0yC,MAAM9kB,OACT,kBAAMvrB,EAAKqwC,MAAL,MACN,SAAC0L,IACMA,GAAQ/7C,EAAKqsD,cAChBrsD,EAAK21C,SAAS,WACZ31C,EAAKkR,cAUbvT,KAAK2uD,KAAOnsB,EAMZxiC,KAAKg4C,SAAW5hB,EAOhBp2B,KAAK+3C,SAAWjwC,QAAQ8hB,QAAQ,0BAMhC5pB,KAAK0uD,cAAe,EAIpBF,EAASxuD,KAAK+3C,SAAdyW,CAAwBxuD,KAAK0yC,OAC7B5qC,QAAQ8hB,QAAQuI,SAASy8B,MAAMC,OAAO7uD,KAAK+3C,WAS7CwW,EAAQj0D,UAAUw0D,QAAU,WAC1B,OAAO9uD,KAAK0yC,MAAL,MAST6b,EAAQj0D,UAAUy0D,QAAU,SAAS3Q,GACnCp+C,KAAK0yC,MAAL,KAAqB0L,GAQvBmQ,EAAQj0D,UAAUiZ,QAAU,WAC1BvT,KAAK0yC,MAAMsc,WACXhvD,KAAK+3C,SAASnI,UAShB2e,EAAQj0D,UAAU20D,SAAW,SAAS/f,GACpC,IAAMggB,EAAelvD,KAAK2uD,KAAKjsB,YAAYwM,GAC3ClvC,KAAK0yC,MAAL,MAAsBwc,GAaxBX,EAAQj0D,UAAU60D,WAAa,SAAS5d,EAAS6d,GAC/CpvD,KAAK0yC,MAAL,QAAwB0c,EAAcpvD,KAAK2uD,KAAKjsB,YAAmC6O,GAAYA,GASjGgd,EAAQj0D,UAAU+0D,OAAS,SAAS9rD,GAClC,IAAMguC,EAAUvxC,KAAK2uD,KAAKjsB,YAAV,gBACEn/B,EADF,0CAGhBvD,KAAKmvD,WAAW5d,IASlBgd,EAAQj0D,UAAUg1D,SAAW,SAASv1C,GACpC/Z,KAAK+3C,SAASh+B,MAAMA,IAStBw0C,EAAQj0D,UAAUi1D,UAAY,SAASC,GACrCxvD,KAAK+3C,SAASyX,OAAOA,IAUvBjB,EAAQj0D,UAAUm1D,QAAU,SAAS11C,EAAOy1C,GAC1CxvD,KAAKsvD,SAASv1C,GACd/Z,KAAKuvD,UAAUC,IAUjBjB,EAAQj0D,UAAUo1D,eAAiB,SAASC,GAC1C3vD,KAAK0uD,aAAeiB,GAStBpB,EAAQj0D,UAAU8zD,SAAW,SAAS/U,GACpCr5C,KAAK+3C,SAASqW,SAAS/U,IASzBkV,EAAQj0D,UAAU8jD,KAAO,SAASp2C,GAE5BA,EAAQzE,IACVvD,KAAKqvD,OAAOrnD,EAAQzE,KACXyE,EAAQupC,QACjBvxC,KAAKmvD,WAAWnnD,EAAQupC,SAExBzI,EAAA,EAAYtkC,KAAK,iEAGStE,IAAxB8H,EAAQ2nD,aACV3vD,KAAK0vD,eAAe1nD,EAAQ2nD,kBAGVzvD,IAAhB8H,EAAQqxC,KACVr5C,KAAKouD,SAASpmD,EAAQqxC,UAGDn5C,IAAnB8H,EAAQwnD,QACVxvD,KAAKuvD,UAAUvnD,EAAQwnD,aAGHtvD,IAAlB8H,EAAQknC,OACVlvC,KAAKivD,SAASjnD,EAAQknC,YAGFhvC,IAAlB8H,EAAQ+R,OACV/Z,KAAKsvD,SAAStnD,EAAQ+R,OAGxB/Z,KAAK+uD,SAAQ,KAYfR,EAAQqB,QAAU,SAASpB,EAAUlhC,EAAYkV,EAAMpM,GACrD,kBAKI,OAAO,IAAIm4B,EAAQC,EAAUlhC,EAAYkV,EAAMpM,2DAQrDm4B,EAAQ7yD,OAASoM,QAAQpM,OAAO,mBAC9B4yD,EAA0BvyD,QAEbkmD,QAAQ,kBAAmBsM,EAAQqB,SAGnCtyD,EAAA,kCCjRf,IAAA8pC,EAAA/rC,EAAA,GAUMI,EAAU,SAASo0D,EAASrpC,GAMhCxmB,KAAK8vD,SAAWD,EAMhB7vD,KAAK+vD,UAAY,KAMjB/vD,KAAKgwD,OAASxpC,GAShB/qB,EAAQnB,UAAUgyB,WAAa,SAAS/T,GACtCvY,KAAK8vD,SAASxjC,WAAW/T,EAASvY,KAAKgwD,SASzCv0D,EAAQnB,UAAUmyB,cAAgB,SAASlU,GACzCvY,KAAK8vD,SAASrjC,cAAclU,EAASvY,KAAKgwD,SAQ5Cv0D,EAAQnB,UAAUoyB,MAAQ,WACxB1sB,KAAK8vD,SAASpjC,MAAM1sB,KAAKgwD,SAa3Bv0D,EAAQnB,UAAU21D,YAAc,SAAStyC,GAAU,IAAAtb,EAAArC,KAC1B,OAAnBA,KAAK+vD,YACP/vD,KAAK+vD,UAAUrjC,QACf0a,EAAA,EAAkBpnC,KAAK+vD,UAAW,MAAO/vD,KAAKy6C,kBAAmBz6C,MACjEonC,EAAA,EAAkBpnC,KAAK+vD,UAAW,SAAU/vD,KAAKkwD,qBAAsBlwD,OAExD,OAAb2d,IACFA,EAAS3a,QAAQ,SAACuV,GAChBlW,EAAKiqB,WAAW/T,KAElB6uB,EAAA,EAAgBzpB,EAAU,MAAO3d,KAAKy6C,kBAAmBz6C,MACzDonC,EAAA,EAAgBzpB,EAAU,SAAU3d,KAAKkwD,qBAAsBlwD,OAEjEA,KAAK+vD,UAAYpyC,GAUnBliB,EAAQnB,UAAUge,SAAW,SAASS,GACpC/Y,KAAK8vD,SAASx3C,SAASS,EAAO/Y,KAAKgwD,SAQrCv0D,EAAQnB,UAAUmgD,kBAAoB,SAAStvB,GAC7C,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKssB,WAAW/T,IAQlB9c,EAAQnB,UAAU41D,qBAAuB,SAAS/kC,GAChD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKysB,cAAclU,IAMrB9c,EAAQC,OAASoM,QAAQpM,OAAO,yBAGjB4B,EAAA,mCC3Hf,IAAA6B,EAAA9D,EAAA,GAAA80D,EAAA90D,EAAA,KAAA+0D,EAAA/0D,EAAA,IAAAg1D,EAAAh1D,EAAA,GAAAi1D,EAAAj1D,EAAA,KAiBMI,EAAU,WACd60D,EAAA,EAAY91D,KAAKwF,OAGnBqwD,EAAA,EAAgB50D,EAAS60D,EAAA,GAQzB70D,EAAQnB,UAAU8rB,KAAO,SAASZ,GAChC,OACyC8qC,EAAA,EAAYh2D,UAAU8rB,KAAK5rB,KAAKwF,KAAMwlB,IAUjF/pB,EAAQnB,UAAUi2D,iBAAmB,SAASC,GAC5CrxD,EAAA,EAAYmE,OAAOktD,EAAIC,UAAYC,KAAKC,cACtC,mCACF,IAAK,IAAIn0D,EAAIg0D,EAAII,WAAYp0D,EAAGA,EAAIA,EAAEq0D,YACpC,GAAIr0D,EAAEi0D,UAAYC,KAAKI,aACrB,OAAO9wD,KAAK+wD,aAAav0D,GAG7B,OAAO,MASTf,EAAQnB,UAAUy2D,aAAe,SAAS7uD,GACxC/C,EAAA,EAAYmE,OAAOpB,EAAKuuD,UAAYC,KAAKI,aACvC,mCACF3xD,EAAA,EAAYmE,OAAyB,UAAlBpB,EAAK8uD,UACtB,8BAEF,IAAIC,EAAW/uD,EAAKgvD,qBAAqB,WACpCD,EAAS/2D,SACZ+2D,EAAW/uD,EAAKgvD,qBAAqB,gBAKvC,IAHA,IAAM3iD,KAEF+B,SACKtW,EAAI,EAAGmH,EAAK8vD,EAAS/2D,OAAQF,EAAImH,EAAInH,KAC5CsW,EAAYtQ,KAAKmxD,qBAAqBF,EAASj3D,MAE7CuU,EAAWnU,KAAKkW,GAIpB,OAAO/B,GAST9S,EAAQnB,UAAU62D,qBAAuB,SAASjvD,GAEhD,IAAMnG,EAAOmG,EAAKkvD,aAAa,QAC/BjyD,EAAA,EAAYqe,aAAazhB,EAAM,2CAE/B,IAAMmiC,EAAQh8B,EAAKkvD,aAAa,SAC1BC,EAAWnvD,EAAKkvD,aAAa,YAG7B9gD,GACJvU,OACAmiC,QACAozB,YAL8B,IAAbD,GAAkC,SAAbA,IAQlCh0D,EAAO6E,EAAKkvD,aAAa,QAC/B,GAAI/zD,EACG8yD,EAAA,EAAoBoB,gBAAgBjhD,EAAWjT,IAClD2C,KAAKwxD,uBAAuBlhD,EAAWjT,OAEpC,CAKL,IAAIo0D,EAAevvD,EAAKgvD,qBAAqB,eAI7C,GAHKO,EAAav3D,SAChBu3D,EAAevvD,EAAKgvD,qBAAqB,oBAEvCO,EAAav3D,OAAQ,CACvBoW,EAAUjT,KAAO+yD,EAAA,EAAwBlxD,OAEzC,IADA,IAAM2pC,KACG7uC,EAAI,EAAGmH,EAAKswD,EAAav3D,OAAQF,EAAImH,EAAInH,IAChD6uC,EAAQzuC,KAAKq3D,EAAaz3D,GAAGo3D,aAAa,UAE5C9gD,EAAUu4B,QAAUA,MACf,CAEL,IAAI6oB,EAAexvD,EAAKgvD,qBAAqB,eAI7C,GAHKQ,EAAax3D,SAChBw3D,EAAexvD,EAAKgvD,qBAAqB,oBAEvCQ,EAAax3D,QAAUw3D,EAAa,GAAI,CAC1C,IAAMC,EAAkBD,EAAa,GACrC1xD,KAAKwxD,uBACHlhD,EACAqhD,EAAgBP,aAAa,SAG/B,IAAIQ,EAAa1vD,EAAKgvD,qBAAqB,aACtCU,EAAW13D,SACd03D,EAAa1vD,EAAKgvD,qBAAqB,kBAErCU,EAAW13D,QAAU03D,EAAW,KAClCthD,EAAUuhD,UAAYh0B,OAAO+zB,EAAW,GAAGR,aAAa,aAMhE,OAAK9gD,EAAUjT,MAIf8B,EAAA,EAAYmE,OAAOgN,EAAUjT,MAEtBiT,GALE,MAiBX7U,EAAQnB,UAAUk3D,uBAAyB,SACzClhD,EAAWjT,GAEE,gBAATA,EACFiT,EAAUjT,KAAO+yD,EAAA,EAAwBxxD,QACvB,aAATvB,EACTiT,EAAUjT,KAAO+yD,EAAA,EAAwBvxD,KACvB,iBAATxB,EACTiT,EAAUjT,KAAO+yD,EAAA,EAAwBtxD,SACvB,aAATzB,EACTiT,EAAUjT,KAAO+yD,EAAA,EAAwBrxD,KACvB,gBAAT1B,GAAmC,eAATA,GACnCiT,EAAUjT,KAAO+yD,EAAA,EAAwBnxD,OACzCqR,EAAUwhD,QAAUr2D,EAAQs2D,WAAWC,OACrB,gBAAT30D,GACTiT,EAAUjT,KAAO+yD,EAAA,EAAwBnxD,OACzCqR,EAAUwhD,QAAUr2D,EAAQs2D,WAAWE,SACrB,eAAT50D,IACTiT,EAAUjT,KAAO+yD,EAAA,EAAwBryD,OAU7CtC,EAAQqhD,qBAAuB,SAASvuC,GAEtC,IADA,IAAI2jD,EAAgB,KACXl4D,EAAI,EAAGmH,EAAKoN,EAAWrU,OAAQF,EAAImH,EAAInH,IAC9C,GAAIuU,EAAWvU,GAAGqD,OAAS+yD,EAAA,EAAwBpxD,SAAU,CAC3DkzD,EAAgB3jD,EAAWvU,GAC3B,MAGJ,OAAOk4D,GAQTz2D,EAAQs2D,YAKNC,MAAO,QAKPC,QAAS,WAII30D,EAAA,0SCzNf,IAAM7B,aAWJ,SAAAA,EAAYuM,gGAASC,CAAAjI,KAAAvE,GAQnBuE,KAAKmyD,uBAAyB,IAAIC,EAAA,EAAapqD,EAAQg1B,aASvDh9B,KAAKqyD,OAASrqD,EAAQknC,MA5BpB,OAAAzzC,EAAAnB,UAkCJiZ,QAlCI,WAmCFvT,KAAKmyD,uBAAuBzlC,SAnC1BjxB,EAAAnB,UAiHJg4D,mBAjHI,SAiHe3jD,GACjB,OAAOA,EAAWiX,QAChBnqB,EAAQ82D,gBAAgBC,GACxB/2D,EAAQ82D,gBAAgBE,KApHxBh3D,EAAAnB,UA2HJyyC,cA3HI,SA2HUp+B,GACZ3O,KAAKmyD,uBAAuB/3D,KAAKuU,IA5H/BlT,EAAAnB,UAmIJ6yC,iBAnII,SAmIax+B,GACf3O,KAAKmyD,uBAAuBviB,OAAOjhC,IApIjClT,EAAAnB,UAiJJo4D,sBAjJI,WAkJF,IAAMC,EACF3yD,KAAK4yD,kBAAoBn3D,EAAQ82D,gBAAgBC,GACrD7lD,EAAyB3M,KAAKg9B,YAA9BpwB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAhCoS,EAAgCzB,EACrCyB,EAAWiX,UAAY+sC,IACzBhkD,EAAWiX,QAAU+sC,KAtJvB9hD,EAAApV,IAAAmV,IAAA,cAAAvU,IAAA,WA+CF,OAAO2D,KAAKmyD,uBAAuBhrC,cA/CjCvW,IAAA,wBAAAvU,IAAA,WAwDF,OAAO2D,KAAKmyD,0BAxDVvhD,IAAA,QAAAvU,IAAA,WAqEF,OAAO2D,KAAKqyD,UArEVzhD,IAAA,kBAAAvU,IAAA,WAkFF,IAAI4yB,SAEJ3f,EAAyBtP,KAAKg9B,YAA9BztB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA2C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAhCoS,EAAgCc,EACzC,QAAcvP,IAAV+uB,EACFA,EAAQjvB,KAAKsyD,mBAAmB3jD,QAEb3O,KAAKsyD,mBAAmB3jD,KACxBsgB,IACjBA,EAAQxzB,EAAQ82D,gBAAgBM,eAGpC,GAAI5jC,IAAUxzB,EAAQ82D,gBAAgBM,cACpC,MAMJ,OAFA1zD,EAAA,EAAYqe,aAAayR,GAElBA,MApGLxzB,KAgKNA,EAAQ82D,iBACNM,cAAe,gBACfJ,IAAK,MACLD,GAAI,MAISl1D,EAAA,iHC7JTw1D,EAAU,WAEdC,EAAA,EAAYv4D,KAAKwF,OAInBkyC,EAAA,EAAgB4gB,EAASC,EAAA,GAWzBD,EAAQx4D,UAAU8rB,KAMlB0sC,EAAQx4D,UAAUi2D,iBAAmB,SAASC,GAC5C,IAAK,IAAIh0D,EAAIg0D,EAAII,WAAYp0D,EAAGA,EAAIA,EAAEq0D,YACpC,GAAIr0D,EAAEi0D,UAAYC,KAAKI,aACrB,OAAO9wD,KAAK+wD,aAAav0D,GAG7B,OAAO,MAOTs2D,EAAQx4D,UAAUy2D,aAAe,SAAS7uD,GACxC,IAAInH,KAOJ,OANAA,EAASi4D,EAAA,EACPj4D,EACA+3D,EAAQG,SACR/wD,OAaJ4wD,EAAQI,aAAe,SAAShxD,EAAMixD,GAEpC,IADA,IAAM5kD,KACGvU,EAAI,EAAGo5D,EAAMlxD,EAAKqM,WAAWrU,OAAQF,EAAIo5D,EAAKp5D,IAAK,CAC1D,IAAMsW,EAAYpO,EAAKqM,WAAW/L,KAAKxI,GACvCuU,EAAW+B,EAAUvU,MAAQuU,EAAU/T,MAMzC,OAJ2B,IAAvB42D,EAAYj5D,SAEdqU,EAAA,KAAqBA,EAAA,KAAmBwJ,MAAM,KAAKs7C,OAE9C9kD,GAUTukD,EAAQQ,iBAAmB,SAASpxD,EAAMixD,GACxC,IAAMp3D,EAAOmG,EAAKkvD,aAAa,QACzB10D,EAASs2D,EAAA,GACZj3D,KAAQA,GACT+2D,EAAQS,sBACRrxD,EAAMixD,GAKR,OAFAz2D,EAAA,eACEA,EAAA,0CACKA,GAUTo2D,EAAQU,oBAAsB,SAC5BtxD,EAAMixD,GAEN,OAAOH,EAAA,KAELF,EAAQW,yBACRvxD,EACAixD,IAWJL,EAAQY,eAAiB,SAASxxD,EAAMixD,GACtC,OAAOH,EAAA,KAELF,EAAQa,mBACRzxD,EACAixD,IAWJL,EAAQc,cAAgB,SAAS1xD,EAAMixD,GACrC,OAAOH,EAAA,KAELF,EAAQe,kBACR3xD,EACAixD,IAUJL,EAAQgB,iBACN,KACA,oCASFhB,EAAQG,SAAWnqB,EAAA,EAAYxlC,OAAO0vD,EAAA,EACpCF,EAAQgB,iBACNlqC,QAAWopC,EAAA,EACTF,EAAQI,cAEVa,YAAef,EAAA,EACbF,EAAQQ,qBAUdR,EAAQS,sBAAwBzqB,EAAA,EAAYxlC,OAAO0vD,EAAA,EACjDF,EAAQgB,iBACNE,eAAkBhB,EAAA,EAChBF,EAAQU,wBAUdV,EAAQW,yBAA2B3qB,EAAA,EAAYxlC,OAAO0vD,EAAA,EACpDF,EAAQgB,iBACNG,UAAajB,EAAA,EACXF,EAAQY,mBAUdZ,EAAQa,mBAAqB7qB,EAAA,EAAYxlC,OAAO0vD,EAAA,EAC9CF,EAAQgB,iBACNI,SAAYlB,EAAA,EACVF,EAAQc,kBAUdd,EAAQe,kBAAoB/qB,EAAA,EAAYxlC,OAAO0vD,EAAA,EAC7CF,EAAQgB,iBACNlqC,QAAWopC,EAAA,EACTF,EAAQI,iBAKC,IAAAiB,EAAA,qDCzNf,IAAMC,EAAO34D,WAwBX,SAAAA,EAAYiE,EAAOE,EAAIy0D,EAAgBvwB,gGAAa77B,CAAAjI,KAAAvE,GAQlDuE,KAAK6gD,MAAQnhD,EAMbM,KAAK4uC,GAAKhvC,EAMVI,KAAKs0D,gBAAkBD,EAMvBr0D,KAAK+jC,aAAeD,EAUpB9jC,KAAKu0D,qBAQLv0D,KAAKw0D,+BAQLx0D,KAAKy0D,gCA5EH,OAAAh5D,EAAAohC,SAAA,6CAAAphC,EAAAnB,UA0FJwiC,MA1FI,SA0FE90B,GAEJ,IAAMtD,KACAE,EAAMoD,EAAQpD,IAGpB5E,KAAK00D,8BAGL,IAAI33B,SACJ,GAAI/0B,EAAQ+0B,qBACVA,EAAuB/0B,EAAQ+0B,yBAC1B,CACL,IAAMC,EAAch1B,EAAQg1B,YAC5B8L,EAAA,EAAYxlC,OAAO05B,EAAa,6BAChCD,EAAuB/8B,KAAKi9B,wBAAwBD,EAAap4B,GAMnE,IAAM+vD,EAAyB30D,KAAK40D,6BAClC73B,EAAqB83B,KAOvB,GANAnwD,EAAStK,KAAK4F,KAAK80D,kBAAkBH,EAAwB3sD,IAK1CA,EAAQisB,WACX,CACd,IAAM8gC,EAAyB/0D,KAAKg1D,6BAClCj4B,EAAqBk4B,KACvBvwD,EAAStK,KAAK4F,KAAKk1D,kBAAkBH,EAAwB/sD,IAG/D,OAAOhI,KAAK4uC,GAAG5pC,IAAIN,GAAUf,KAC3B3D,KAAKm1D,2BAA2Bn4D,KAAKgD,QA9HrCvE,EAAAnB,UA8IJ2iC,wBA9II,SA8IoBD,EAAap4B,GAEnC,IAAMm4B,GACJ83B,OACAI,QAEIhoC,EAAa6b,EAAA,EAAY/tB,aAAanW,EAAI6a,UAAU0J,iBAE1Dxc,EAAyBqwB,EAAzBpwB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAsC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA3BoS,EAA2BzB,EAG/BlN,KAAKo1D,uBAAuBzmD,EAAYse,KAIzCte,aAAsBy/B,EAAA,IAEpBz/B,EAAWpB,YACbwvB,EAAqB83B,IAAIz6D,KAAKuU,GAE9BouB,EAAqBk4B,IAAI76D,KAAKuU,KAKpC,OAAOouB,GAvKLthC,EAAAnB,UA+KJ+6D,uBA/KI,SA+KmB1mD,GAErBm6B,EAAA,EAAYxlC,OACVqL,EAAW2mD,mBADb,wIAMA,IAAMC,EAAgB5mD,EAAWiB,mBAE3BrM,EAAMiyD,EAAA,EACV1sB,EAAA,EAAYtrB,aAAa7O,EAAW9C,SAElCgd,QAAW,sBACXF,QAAW,MACXC,QAAW,QACX6sC,SAAYF,IAIhB,OAAOv1D,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAAK,SAACC,GAE/B,OADe,IAAIuwD,GACL/tC,KAAKxiB,EAASlK,SArM5B+B,EAAAnB,UA+MJo7D,uBA/MI,SA+MmBC,EAAmB5vC,GAExC,IAAI8B,EAAQ,KAEZvY,EAA8BqmD,EAA9BpmD,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAiD,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAtCq5D,EAAsCnmD,EAC/C,GAAImmD,EAAA,OAA4B7vC,EAAW,CACzC8B,EAAQ+tC,EACR,MACK,GAAIA,EAAA,QACT/tC,EAAQ7nB,KAAK01D,uBACXE,EAAA,MAA0B7vC,IAE1B,MAKN,OAAO8B,GAhOLpsB,EAAAnB,UA2OJu7D,mBA3OI,SA2OeC,EAASC,GAE1B,IAAM9uD,GAAsB,IAAd8uD,EAQRxyD,EAAMiyD,EAAA,EAAmBM,GAL7BjtC,QAAW,kBACXF,QAAW,MACXC,QAAW,UAIT9nB,SAiBJ,OAfKmG,GAAUjH,KAAKw0D,4BAA4BsB,GAKrC7uD,GAASjH,KAAKw0D,4BAA4BsB,KACnDh1D,EAAUd,KAAKw0D,4BAA4BsB,IAL3Ch1D,EAAUd,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAAK,SAACC,GAElC,OADe,IAAIoyD,EAAA,GACL5vC,KAAKxiB,EAASlK,QAMhCovC,EAAA,EAAYxlC,OAAOxC,GAEfmG,IAAUjH,KAAKw0D,4BAA4BsB,KAC7C91D,KAAKw0D,4BAA4BsB,GAAWh1D,GAGvCA,GAvQLrF,EAAAnB,UAgRJ27D,wBAhRI,SAgRoBN,EAAmB5vC,GACzC,IAAI8B,EAAQ,KACZhY,EAA8B8lD,EAA9B7lD,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAiD,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAtCq5D,EAAsC5lD,EAC/C,GAAI4lD,EAAA,aAAkC7vC,EAAW,CAC/C8B,EAAQ+tC,EACR,OAGJ,OAAO/tC,GAxRLpsB,EAAAnB,UAoSJ47D,oBApSI,SAoSgB3yD,EAAKwyD,GAEvB,IAAM9uD,GAAsB,IAAd8uD,EACVj1D,SAiBJ,OAfKmG,GAAUjH,KAAKy0D,6BAA6BlxD,GAKtC0D,GAASjH,KAAKy0D,6BAA6BlxD,KACpDzC,EAAUd,KAAKy0D,6BAA6BlxD,IAL5CzC,EAAUd,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAAK,SAACC,GAElC,OADe,IAAIuyD,EAAA,GACL/vC,KAAKxiB,EAASlK,QAMhCovC,EAAA,EAAYxlC,OAAOxC,GAEfmG,IAAUjH,KAAKy0D,6BAA6BlxD,KAC9CvD,KAAKy0D,6BAA6BlxD,GAAOzC,GAGpCA,GAxTLrF,EAAAnB,UA8UJ66D,2BA9UI,SA8UuBvxD,GACzB,IAAMwyD,KACNlmD,EAAmBtM,EAAnBuM,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA6B,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MAAA,IAAlB2mD,EAAkB7yC,EAC3B,IAAK,IAAMgmD,KAAmBnT,EAAM,CAClC,IAAMoT,EAAez4B,OAAOw4B,GAC5BD,EAAaE,GAAgBpT,EAAKoT,IAGtC,OAAOF,GAtVL36D,EAAAnB,UAsWJi8D,mBAtWI,SAsWev5B,EAAaT,EAAOs4B,EAAKjxD,GAC1C,IAAMs/C,KAEN3xC,EAAyByrB,EAAzBxrB,EAAA3E,MAAAC,QAAAyE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvE,OAAAC,cAAsC,KAAAyE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArX,OAAA,MAAAwX,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApE,QAAAC,KAAA,MAAAsE,EAAAD,EAAAlV,MAAA,IAA3BoS,EAA2B+C,EAChCiM,SACAogB,SACAL,SAEoB,iBAAb95B,GACT+Z,KACAogB,GAAkB,EAClBL,EAAoB95B,GAGlB+Z,EADEhP,aAAsBy/B,EAAA,EACbpuC,KAAKw2D,qBAAqB7nD,EAAY/K,EAASlK,KAAMm7D,MAKpE,IAAMyB,EAAe3nD,EAAWkX,GAChC7lB,KAAKy2D,cAAc94C,EAAUhP,EAAWkX,IACxCq9B,EAAKoT,IACH34C,WACA4e,QACAwB,kBACAL,qBAIJ,OAAOwlB,GAnYLznD,EAAAnB,UAgZJk8D,qBAhZI,SAgZiB7nD,EAAYjV,EAAMm7D,GAAK,IAAAxyD,EAAArC,KACpC2d,KACFg0B,SAEE+kB,EAAe12D,KAAK22D,qBAAqBhoD,EAAYkmD,GAAK53D,QAmBhE,OAlBAy5D,EAAa1zD,QAAQ,SAAC3F,GAEpBgF,EAAKs0D,qBAAqBhoD,EAAYkmD,GAAMx3D,KAE1Cs0C,EADEkjB,EACalmD,EAAWrB,UAAUqkC,aAAaj4C,GAElCiV,EAAWV,UAAU0jC,aAAaj4C,IAElCQ,OAAS,GACxBy3C,EAAa3uC,QAAQ,SAACuV,GACpBA,EAAQ7V,IAAI,qBAAsBrF,GAClCsgB,EAASvjB,KAAKme,OAMpBvY,KAAK22D,qBAAqBhoD,EAAYkmD,EAAK6B,GACpC/4C,GAvaLliB,EAAAnB,UAobJq8D,qBApbI,SAobiBhoD,EAAYkmD,EAAK+B,GACpC,IAAIC,SAYJ,OAXIhC,GACE+B,GACFjoD,EAAWrB,UAAUwpD,eAAeF,GAEtCC,EAAQloD,EAAWrB,UAAUypD,mBAEzBH,GACFjoD,EAAWV,UAAU6Y,UAAU8vC,GAEjCC,EAAQloD,EAAWV,UAAUiZ,aAE1B2vC,EAGGhqD,MAAMC,QAAQ+pD,GAAUA,GAASA,OApcvCp7D,EAAAnB,UAidJw6D,kBAjdI,SAidckC,EAAqBhvD,GAAS,IAAAjC,EAAA/F,KAExC0E,KAGAuyD,EAAcnuB,EAAA,EAAY/tB,aAAa/S,EAAQu0B,OAG/C/c,EADMxX,EAAQpD,IACH6a,UACXwN,EAAa6b,EAAA,EAAY/tB,aAAayE,EAAK2J,iBAE3C2gB,EADatqB,EAAKiyB,gBACGylB,UACrB/5B,GAAgC,IAArBn1B,EAAQm1B,SAGrB6jB,SACE/sB,EAAajsB,EAAQisB,WAC3B,GAAIA,EAAY,CACd,IAAMiJ,EAAcl1B,EAAQk1B,YAC5B4L,EAAA,EAAYxlC,OAAO45B,GACnB,IAAMP,EAAYO,EAAcjQ,EAChC+zB,EAAOthC,EAAA,EACLA,EAAA,EAAsCuU,GACtC0I,QAGFqkB,EAAOh5C,EAAQ0X,OAIjB,IAAMpS,EAAY,IAAIo9B,EAAA,EAChBysB,EAAgB,IAAIxsB,cA/BoBhN,EAAA,SAgCnCX,GAET,IAAIo6B,SACAvpD,SACA6oD,KACAnzD,SACEuD,KAGNuwD,EAAyBr6B,EAAzBs6B,EAAAzqD,MAAAC,QAAAuqD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAArqD,OAAAC,cAAsC,KAAAuqD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAn9D,OAAA,MAAAs9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAlqD,QAAAC,KAAA,MAAAoqD,EAAAD,EAAAh7D,MAAA,IAA3BoS,EAA2B6oD,EAGpC,IAAKJ,EAAyB,CAC5BvpD,EAAYc,EAAWzD,aACvB,IAAMusD,EAAgB9oD,EAAWtD,iBAC3BjC,EAAeuF,EAAWvF,aAC1BsuD,EAAe/oD,EAAWlD,gBAEhC2rD,GACEpW,OACAnzC,YACA4pD,gBACAruD,eACAsuD,eACA5tB,WAGFvmC,EAAMoL,EAAW9C,OAGjB49B,EAAA,EAAa3iC,EAAQ6H,EAAW+B,kBAIlCgmD,EAAeA,EAAa15C,OAC1BrO,EAAWS,wBAAwB6d,GAAY,IAIjD,IAAI/nB,SACA8C,EAAQ9C,OACVA,EAASa,EAAKuuD,gBAAgB5qB,cAC5B/6B,WAAYA,EACZzJ,OAAQ8C,EAAQ9C,OAChBklC,eAAe,EACfH,SAAS,KAEDt7B,EAAW9F,aAAe8F,EAAW9F,YAAY3O,QACzDyU,EAAW2C,gBACV3C,EAAWpG,yBAA2BlO,OAAO0iD,KAAKpuC,EAAWpG,yBAAyBrO,OAAS,KAElG4uC,EAAA,EAAYxlC,OACa,IAAvB05B,EAAY9iC,OADd,uGAMAgL,EAASa,EAAKuuD,gBAAgB5qB,cAC5B/6B,WAAYA,EACZy7B,eAAe,EACfH,SAAS,EACTH,QAASA,KAIT5kC,IACFkyD,EAAA,OAAoClyD,GAIxC4jC,EAAA,EAAYxlC,OAAO8zD,GACnBA,EAAwBV,aAAeA,EACvC5tB,EAAA,EAAYxlC,OAAOC,GAYnB,IAAMo0D,EAAkB5xD,EAAK6oC,GAAGhuC,QAChC8D,EAAStK,KACPu9D,EAAgB72D,QAAQ6C,KACtBoC,EAAKwwD,mBAAmBv5D,KAAxB+I,EAAmCi3B,EAAai6B,GAAa,KAKjE,IAAIW,SACJ,GAAIz6B,EAAU,CACZ,IAAM06B,EACJpuB,EAAA,GAEIquB,WAAY,QAEdV,GAGEW,EAAkBzqD,EAAU0qD,gBAAgBH,GAC5CI,EAAsBd,EAAcvsB,kBACxCmtB,GACIG,EAAWnyD,EAAKoyD,oBACtBP,EAAe7xD,EAAK86C,MAAMQ,KACxB99C,EACA00D,GAEEnxD,OAAQA,EACRw6C,SAAUC,eAAgB,2BAC1BM,QAASqW,EAASp3D,UAEpB6C,KAAM,SAACC,GAIP,OAHao5B,EAAY,GAAG1vB,UAAU8qD,8BACpCx0D,EAASlK,MAEJ,kBACNsD,KALI+I,SAOP6xD,EAAe7xD,EAAK6oC,GAAG5qC,UAIzB4zD,EAAaj0D,KAAK,SAAC00D,GAGjB,QAAyBn4D,IAArBm4D,GAAkCA,EAAmBpB,EAAa,CAEpE,IAAMqB,EACJ7uB,EAAA,GAEIwtB,eAEFG,GAGEmB,EAAoBjrD,EAAU0qD,gBAClCM,GACIE,EAAiBrB,EAAcvsB,kBACnC2tB,GACFzvB,EAAA,EAAYtrB,aAAaja,GACzB,IAAM20D,EAAWnyD,EAAKoyD,oBACtBpyD,EAAK86C,MAAMQ,KACT99C,EACAi1D,GAEE1xD,OAAQA,EACRw6C,SAAUC,eAAgB,2BAC1BM,QAASqW,EAASp3D,UAEpB6C,KAAK,SAACC,GACN+zD,EAAgB3zD,QAAQJ,UAI1B+zD,EAAgB3zD,QAAQq0D,MA7J9BI,EAA0BzB,EAA1B0B,EAAA7rD,MAAAC,QAAA2rD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAzrD,OAAAC,cAA+C,KAAA2rD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAv+D,OAAA,MAAA0+D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAtrD,QAAAC,KAAA,MAAAwrD,EAAAD,EAAAp8D,MAAAohC,EAAAi7B,GAkK/C,OAAO54D,KAAK4uC,GAAG5pC,IAAIN,GAAUf,KAC3B3D,KAAKm1D,2BAA2Bn4D,KAAKgD,QAppBrCvE,EAAAnB,UAkqBJ46D,kBAlqBI,SAkqBc8B,EAAqBhvD,GAErC,IAAMtD,KAGAm0D,EAAgB/vB,EAAA,EAAY/tB,aAAa/S,EAAQu0B,OAGjD/c,EADMxX,EAAQpD,IACH6a,UACXwN,EAAa6b,EAAA,EAAY/tB,aAAayE,EAAK2J,iBAE3C2vC,EADat5C,EAAKiyB,gBACIylB,UAGtBjjC,EAAajsB,EAAQisB,WAC3B6U,EAAA,EAAYxlC,OAAO2wB,GAGnB,IAAA8kC,EAA0B/B,EAA1BgC,EAAAnsD,MAAAC,QAAAisD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA/rD,OAAAC,cAA+C,KAAAisD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA7+D,OAAA,MAAAg/D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA5rD,QAAAC,KAAA,MAAA8rD,EAAAD,EAAA18D,MAAA,IAApCygC,EAAoCk8B,EAEzC31D,SACA2hB,KACAi0C,SACAC,GAAsB,EACpBtyD,KACF0jC,EAAe,KACf6uB,EAAqB,KAGzBC,EAAyBt8B,EAAzBu8B,EAAA1sD,MAAAC,QAAAwsD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtsD,OAAAC,cAAsC,KAAAwsD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAp/D,OAAA,MAAAu/D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnsD,QAAAC,KAAA,MAAAqsD,EAAAD,EAAAj9D,MAAA,IAA3BoS,EAA2B8qD,EAG/BN,IACHA,EAAcxqD,EAAW5C,cACzBxI,EAAMoL,EAAWtC,QAInB6Y,EAASA,EAAOlI,OACdrO,EAAWS,wBAAwB6d,GAAY,IAO5CmsC,IACH3vB,EAAA,EAAa3iC,EAAQ6H,EAAW+B,kBAChC0oD,GAAsB,GAMpBzqD,EAAW9F,aAAe8F,EAAW9F,YAAY3O,SACnD4uC,EAAA,EAAYxlC,OAA8B,IAAvB05B,EAAY9iC,QAC/Bm/D,EAAqB1qD,EAAWsB,2BAChCu6B,EAAexqC,KAAKs0D,gBAAgB/pB,oBAClC57B,WAAYA,EACZm7B,QAASgvB,KAOqB,OAA9BnqD,EAAW2C,gBAA2B3C,EAAW7D,eACnDg+B,EAAA,EAAYxlC,OAA8B,IAAvB05B,EAAY9iC,QAC/B4M,EAAA,KAAiB9G,KAAK+jC,aAAa3E,mBACjCzwB,EAAW7D,aACX6D,EAAW2C,iBASjB,GAJAxK,EAAA,OAAmBoe,EACnBpe,EAAA,aAAyBoe,EAGrBslB,GAAgB6uB,EAAoB,CACtC,IAAIK,EAAmB,KACvB,GAAsB,IAAlBx0C,EAAOhrB,OAGTw/D,EAAmBlvB,MACd,CAKL,IADA,IAAMmvB,KACG3/D,EAAI,EAAGmH,EAAK+jB,EAAOhrB,OAAQF,EAAImH,EAAInH,IACtCkrB,EAAOlrB,KAAOq/D,EAChBM,EAAkBv/D,KAAlB,IAA2BowC,EAA3B,KAEAmvB,EAAkBv/D,KAAK,MAG3Bs/D,EAAmBC,EAAkBvyD,KAAK,IAE5CN,EAAA,OAAmB4yD,EAGrB5wB,EAAA,EAAYxlC,OAAOC,GACnB,IAAMq2D,EAAY,IAAIC,EAAA,GACpB/yD,SACAvD,QAIIu2D,EAAuBhxB,EAAA,EAAYtrB,aACvCo8C,EAAUG,qBACR9lC,EAAYhH,EAAY6rC,GAEtBD,cAAiBA,EACjBM,YAAeA,KAKfjB,EAAWl4D,KAAKm4D,oBACtBzzD,EAAStK,KACP4F,KAAK6gD,MAAMxkD,IACTy9D,GAEEjY,QAASqW,EAASp3D,UAEpB6C,KACA3D,KAAKu2D,mBAAmBv5D,KAAKgD,KAAMg9B,EAAa67B,GAAe,KAKrE,OAAO74D,KAAK4uC,GAAG5pC,IAAIN,GAAUf,KAC3B3D,KAAKm1D,2BAA2Bn4D,KAAKgD,QAvyBrCvE,EAAAnB,UAizBJs6D,6BAjzBI,SAizByB53B,GAC3B,IAAMg9B,KACAC,KAENC,EAAyBl9B,EAAzBm9B,EAAAttD,MAAAC,QAAAotD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAltD,OAAAC,cAAsC,KAAAotD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhgE,OAAA,MAAAmgE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/sD,QAAAC,KAAA,MAAAitD,EAAAD,EAAA79D,MAAA,IAA3BoS,EAA2B0rD,EACpC,GAAI1rD,EAAWC,iBAAkB,CAC/B,IAAI0rD,GAAW,EACfC,EAAmCP,EAAnCQ,EAAA3tD,MAAAC,QAAAytD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvtD,OAAAC,cAA0D,KAAAytD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArgE,OAAA,MAAAwgE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAptD,QAAAC,KAAA,MAAAstD,EAAAD,EAAAl+D,MAAA,IAA/Co+D,EAA+CD,EACpD/rD,EAAWD,+BAA+BisD,EAAqB,MACjEA,EAAqBvgE,KAAKuU,GAC1B2rD,GAAW,GAGVA,GACHN,EAAsB5/D,MAAMuU,SAG9BsrD,EAAyB7/D,MAAMuU,IAInC,OAAOqrD,EAAsBh9C,OAAOi9C,IAt0BlCx+D,EAAAnB,UA+0BJ06D,6BA/0BI,SA+0ByBh4B,GAC3B,IAAMg9B,KACAC,KAENW,EAAyB59B,EAAzB69B,EAAAhuD,MAAAC,QAAA8tD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5tD,OAAAC,cAAsC,KAAA8tD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1gE,OAAA,MAAA6gE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAztD,QAAAC,KAAA,MAAA2tD,EAAAD,EAAAv+D,MAAA,IAA3BoS,EAA2BosD,EACpC,GAAIpsD,EAAWI,iBAAkB,CAC/B,IAAIurD,GAAW,EACfU,EAAmChB,EAAnCiB,EAAApuD,MAAAC,QAAAkuD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAhuD,OAAAC,cAA0D,KAAAkuD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA9gE,OAAA,MAAAihE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA7tD,QAAAC,KAAA,MAAA+tD,EAAAD,EAAA3+D,MAAA,IAA/Co+D,EAA+CQ,EACpDxsD,EAAWG,+BAA+B6rD,EAAqB,MACjEA,EAAqBvgE,KAAKuU,GAC1B2rD,GAAW,GAGVA,GACHN,EAAsB5/D,MAAMuU,SAG9BsrD,EAAyB7/D,MAAMuU,IAInC,OAAOqrD,EAAsBh9C,OAAOi9C,IAp2BlCx+D,EAAAnB,UAm3BJ86D,uBAn3BI,SAm3BmBgG,EAAInsD,GACzB,IAAIvC,EAAY0uD,EAAGx1C,SAAWw1C,EAAGzmB,SAAWymB,EAAG1uD,UAC3CA,GAAa0uD,aAAchtB,EAAA,IAE7B1hC,EADmD0uD,EACjCpsD,qBAAqBC,GAAK,IAE9C,OAAOvC,GAz3BLjR,EAAAnB,UAm4BJm8D,cAn4BI,SAm4BU94C,EAAU24C,GACtB34C,EAAS3a,QAAQ,SAACuV,GAChB,QAAwBrY,IAApBqY,EAAQm4B,QAAuB,CACjC,IAAM7qB,EAAQywC,EAAR,IAAwB/9C,EAAQm4B,QACtCn4B,EAAQ8iC,MAAMx1B,OAv4BhBpqB,EAAAnB,UAi5BJ69D,kBAj5BI,WAk5BF,IAAMD,EAAWl4D,KAAK4uC,GAAGhuC,QAEzB,OADAZ,KAAKu0D,kBAAkBn6D,KAAK89D,GACrBA,GAp5BLz8D,EAAAnB,UA05BJo6D,4BA15BI,WA25BF,IAAA2G,EAAuBr7D,KAAKu0D,kBAA5B+G,EAAAzuD,MAAAC,QAAAuuD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAruD,OAAAC,cAA+C,KAAAuuD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnhE,OAAA,MAAAshE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAluD,QAAAC,KAAA,MAAAouD,EAAAD,EAAAh/D,MAAAi/D,EACpCx3D,UAEXhE,KAAKu0D,kBAAkBr6D,OAAS,GA95B9BuB,EAAOA,GAs6Bb24D,EAAQqH,oBAMRrH,EAAQ14D,OAASoM,QAAQpM,OAAO,eAC9BggE,EAAA,EAAqBhgE,OAAOK,KAC5BiwC,EAAA,EAAgBtwC,OAAOK,OAEzBq4D,EAAQ14D,OAAOqM,QAAQ,cAAeqsD,GAGvB92D,EAAA,yFC37Bf,IAiEeq+D,EAjEFlgE,WAAP,SAAAA,iGAAAwM,CAAAjI,KAAAvE,GAAA,OAAAA,EAAAnB,UAcJ8rB,KAdI,SAcCw1C,GACH,OAAOA,EAAoBh3D,IAAI5E,KAAK67D,8BAflCpgE,EAAAnB,UAwBJuhE,4BAxBI,SAwBwBn/D,GAE1B,IAKM4T,GACJvU,KANW+sC,EAAA,EAAYtrB,aAAa9gB,EAAA,MAOpCwhC,MANY,UAAWxhC,EACvBosC,EAAA,EAAYtrB,aAAa9gB,EAAA,OAAmB,KAM5C40D,SALsC,KAAvB50D,EAAA,WAQXW,EAAOyrC,EAAA,EAAYtrB,aAAa9gB,EAAA,MAsBtC,OApBKo/D,EAAA,EAAoBvK,gBAAgBjhD,EAAWjT,KACrC,wBAATA,GAA2C,aAATA,EACpCiT,EAAUjT,KAAOuqC,EAAA,EAAwB9oC,SACvB,SAATzB,EACTiT,EAAUjT,KAAOuqC,EAAA,EAAwB/oC,KACvB,SAATxB,EACTiT,EAAUjT,KAAOuqC,EAAA,EAAwB7oC,KACvB,YAAT1B,GAA+B,WAATA,GAC/BiT,EAAUjT,KAAOuqC,EAAA,EAAwB3oC,OACzCqR,EAAUwhD,QAAUiK,EAAA,EAAuBhK,WAAWC,OACpC,YAAT30D,GAA+B,SAATA,GAC/BiT,EAAUjT,KAAOuqC,EAAA,EAAwB3oC,OACzCqR,EAAUwhD,QAAUiK,EAAA,EAAuBhK,WAAWE,SAEtD3hD,EAAUjT,KADQ,YAATA,EACQuqC,EAAA,EAAwBhpC,QAExBgpC,EAAA,EAAwB7pC,MAItCuS,GA3DL7U,EAAOA,wQCEb,IAAMugE,EAAOvgE,WAaX,SAAAA,EAAYmE,EAAIk8B,EAAiBE,gGAAaigC,CAAAj8D,KAAAvE,GAQ5CuE,KAAK4uC,GAAKhvC,EAMVI,KAAKi0C,YAAcnY,EAAgB72B,WAMnCjF,KAAKo8B,aAAeJ,EASpBh8B,KAAKk8D,UAIL5sB,EAAA,EAAgBtvC,KAAKi0C,YAAa,MAAOj0C,KAAKm0C,sBAAuBn0C,MACrEsvC,EAAA,EAAgBtvC,KAAKi0C,YAAa,SAAUj0C,KAAKuvC,yBAA0BvvC,MA/CzE,OAAAvE,EAAAohC,SAAA,sCAAAphC,EAAAnB,UAgEJy1B,cAhEI,SAgEUlK,GACZ,OAAO7lB,KAAKk8D,OAAOr2C,IAAO,MAjExBpqB,EAAAnB,UAgFJ6hE,wBAhFI,SAgFoBxtD,GAEtB,IAAMytD,EAA8Bp8D,KAAK4uC,GAAGhuC,QA+B5C,OA7BI+N,EAAWJ,WACb6tD,EAA4Bp4D,QAAQ2K,EAAWJ,YAE/CvO,KAAKo8B,aAAai5B,uBAChB1mD,GACAhL,KAAK,SAACmK,GAGN,IAAMuuD,EAAe1tD,EAAWiB,mBAAmB,GACnDk5B,EAAA,EAAYtrB,aAAa6+C,EAAc,kDACvC,IAAA1vD,EAAsBmB,EAAY8b,QAAlChd,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAhCqtB,EAAgC1c,EACzC,GAAI0c,EAAQ7tB,OAASsgE,EACnB,KAAA/sD,EAAmBxB,EAAYimD,YAA/BxkD,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA4C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAjCc,EAAiCoS,EAC1C,GAAIpS,EAAKtB,MAAQ6tB,EAAQvsB,KAAM,CAC7B,IAAM22D,EAAiB32D,EAAK22D,eACtBzlD,GAAa,IAAIotD,GAAyBv1C,KAAK4tC,GAGrDrlD,EAAWH,cAAcD,GAEzB6tD,EAA4Bp4D,QAAQuK,GACpC,YAQL6tD,EAA4Bt7D,SAjHjCrF,EAAAnB,UA0HJ65C,sBA1HI,SA0HkBhpB,GACpB,IAAMxc,EAAam6B,EAAA,EAAY1d,iBAC7BD,EAAIvB,QAAS2iB,EAAA,GACfvsC,KAAKk8D,OAAOvtD,EAAWkX,IAAMlX,GA7H3BlT,EAAAnB,UAsIJi1C,yBAtII,SAsIqBpkB,GACvB,IAAMxc,EAAam6B,EAAA,EAAY1d,iBAC7BD,EAAIvB,QAAS2iB,EAAA,UACRvsC,KAAKk8D,OAAOvtD,EAAWkX,KAzI5BhV,EAAApV,IAAAmV,IAAA,aAAAvU,IAAA,WAuDF,OAAO2D,KAAKi0C,gBAvDVx4C,EAAOA,GAkJbugE,EAAQtgE,OAASoM,QAAQpM,OAAO,yBAC9B22C,EAAA,EAA0B32C,OAAOK,KACjCugE,EAAA,EAAiB5gE,OAAOK,OAE1BigE,EAAQtgE,OAAOqM,QAAQ,wBAAyBi0D,GAGjC1+D,EAAA,mCCnKf,IAAA2hD,EAAA5jD,EAAA,IAAAu6B,EAAAv6B,EAAA,IAAAw6B,EAAAx6B,EAAA,GAAAy6B,EAAAz6B,EAAA,IAAAuoC,EAAAvoC,EAAA,GAAAkhE,EAAAlhE,EAAA,GAAAmhE,EAAAnhE,EAAA,IAAAohE,EAAAphE,EAAA,KAAAqhE,EAAArhE,EAAA,KAmCMI,EAAU,SAASiE,EAAOE,EAAI0tB,EAAY8I,EAAUE,EACxD8oB,GAQAp/C,KAAK6gD,MAAQnhD,EAMbM,KAAK4uC,GAAKhvC,EAMVI,KAAK0tB,WAAaJ,EAMlBttB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK42B,WAAaN,EAMlBt2B,KAAKu/C,gBAAkBH,EAWvBp/C,KAAKk8D,UAMLl8D,KAAKqnC,iBAMLrnC,KAAKgvC,KAAO,KASZhvC,KAAK28D,sBAAwB,KAO7B38D,KAAKm3B,YAAc,kKAcrB17B,EAAQnB,UAAUigD,4BAA8B,WAC9C,IAAM31C,EAAM5E,KAAKgvC,KACjBnZ,EAAA,EAAYvyB,OAAOsB,GAEnB,IAAIpC,SACJ,IAAK,IAAM2rB,KAAOnuB,KAAKk8D,QACrB15D,EAAOxC,KAAKk8D,QAAQ/tC,IACX/c,SACPykB,EAAA,EAAYvyB,OAAOd,EAAK04B,aACxBt2B,EAAIyvB,kBAAkB7xB,EAAK04B,aAC3Bt2B,EAAI0vB,eAAe9xB,EAAK04B,eAW9Bz/B,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAAK,IAAAvC,EAAArC,KAEjC+8C,EAAO/8C,KAAKqnC,cAEdrnC,KAAKgvC,OACPhvC,KAAK48D,uBACL58D,KAAK68D,yBACL9f,EAAK/5C,QAAQu5D,EAAA,GACbxf,EAAK7iD,OAAS,GAGhB8F,KAAKgvC,KAAOpqC,EAERA,IACF5E,KAAK48D,qBAAuB58D,KAAK0tB,WAAWovC,iBAAiB,WAC3D,GAAIz6D,EAAKk9C,gBAAgBzoB,SACvB,OAAOz0B,EAAKk9C,gBAAgBzoB,SAASx1B,UAEtC,SAAC/E,GAGF8F,EAAK21C,SAAS,WACRz7C,IACF8F,EAAKw6D,yBACLx6D,EAAKk9C,gBAAgBzoB,SAASxG,mBAAmBjuB,EAAK06D,kBAAkB//D,KAAvBqF,MAElD,KAGL06C,EAAK3iD,KACHmiE,EAAA,EAAgBv8D,KAAK42B,WAAY,SAAU52B,KAAKo3B,oBAAqBp3B,MACrEu8D,EAAA,EAAgB33D,EAAK,UAAW5E,KAAKg9D,kBAAmBh9D,SAW9DvE,EAAQnB,UAAU88B,oBAAsB,WAAW,IAAArxB,EAAA/F,KACjDA,KAAKm3B,YAAc,KACnBn3B,KAAK42B,WAAWhxB,sBAAsBjC,KAAK,SAACR,GAC1C4C,EAAKoxB,YAAch0B,KAavB1H,EAAQnB,UAAUyiE,kBAAoB,SAASvuC,GAG7C,IAAItsB,EAA6DssB,EAAStsB,KAC1E,IAAIA,EAAKZ,SAAT,CAMAY,EAA0CssB,EAAStsB,KACnD,IAAMkE,EAAiBwvB,EAAA,EAAezvB,kBAAkBjE,GACxD,GAAIkE,EAAgB,CAClB,IAAM62D,EAAYj9D,KAAKk9D,cAAc1uC,GACrC,GAAIyuC,EAAW,CACb,IAAM9uC,EAAMyV,EAAA,EAAcpV,GAEpB2uC,EAAyBn9D,KAAK0tB,WAAWE,OAC7C,kBAAMY,EAASO,YACf/uB,KAAKo9D,2BAA2BpgE,KAAKgD,KAAMwuB,IAK7CxuB,KAAKk8D,OAAO/tC,IACV/c,QAAQ,EACRvD,UAAW,yCACX4pD,cAAe,UACf95C,SAAU,IAAI6+C,EAAA,EACdpzD,aAAc,OACd8xB,YAAa,KACb+7B,YAAa,GACboG,gBAAiB,KACjBj3D,eAAgBA,EAChBooB,SAAUA,EACVyuC,UAAWA,EACXE,uBAAwBA,GAI1Bn9D,KAAKo9D,2BAA2B5uC,EAAUA,EAASO,gBAYzDtzB,EAAQnB,UAAUuiE,uBAAyB,WACzC,IAAK,IAAM1uC,KAAOnuB,KAAKk8D,OAAQ,CAC7B,IAAM15D,EAAOxC,KAAKk8D,QAAQ/tC,GACtB3rB,IACFA,EAAK26D,yBACLn9D,KAAKs9D,gBAAgB96D,UACdxC,KAAKk8D,QAAQ/tC,MA0B1B1yB,EAAQnB,UAAU4iE,cAAgB,SAAS1uC,GAGzC,GAAyB,OAArBxuB,KAAKm3B,YACP,OAAO,KAGT,IAAM/zB,EAA8CorB,EAAStsB,KAG7D,GAAIkB,EAAS/F,OAASu4B,EAAA,EAAenuB,SAASI,IAC5C,OAAO,KAOT,IAJA,IAAM5D,EAAoDb,EAGpDszD,KACG18D,EAAI,EAAGmH,EAAK8C,EAAYs5D,YAAYrjE,OAAQF,EAAImH,EAAInH,IACvDiK,EAAYs5D,YAAYvjE,GAAG0S,WAC7BgqD,EAAat8D,KAAK6J,EAAYs5D,YAAYvjE,GAAG+B,MAGjD,IAAK26D,EAAax8D,OAChB,OAAO,KAIT,IAAIsjE,SACgDhvC,EAASR,OAAO9rB,KACvDy3B,MACX6jC,EAAgBv5D,EAAYC,UAI5Bs5D,EAFsB1nC,EAAA,EAAwBxG,mBAAmBd,GACEtsB,KACzCgC,UAE5B,IAAKs5D,EACH,OAAO,KAIT,IAAMt5D,EAAYlE,KAAKm3B,YAAYqmC,GACnC,IAAKt5D,EAAUu5D,WACb,OAAO,KAKT,IAAMC,EAASx5D,EAAUw5D,OAGzB,OAFA7nC,EAAA,EAAYvyB,OAAOo6D,EAAQ,8BAGzBhH,aAAcA,EAAatvD,KAAK,KAChC7D,IAAKm6D,IAUTjiE,EAAQnB,UAAU8iE,2BAA6B,SAAS5uC,EAAU5Y,GAEhE,IAAMuY,EAAMyV,EAAA,EAAcpV,GACpBhsB,EAAOxC,KAAKk8D,OAAO/tC,GAIV,OAAXvY,EACF5V,KAAK29D,cAAcn7D,GAEnBxC,KAAKs9D,gBAAgB96D,IAYzB/G,EAAQnB,UAAUqjE,cAAgB,SAASn7D,GAGzC,IAAIA,EAAK4O,OAAT,CAIA,IAAMxM,EAAM5E,KAAKgvC,KACjBnZ,EAAA,EAAYvyB,OAAOsB,GAEnB,IAAMs2B,EAAc,IAAIwhC,EAAA,GACtBkB,KAAMp7D,EAAK4D,eAAew3D,KAC1BjgD,SAAUnb,EAAKmb,SACfkgD,eAAgBr7D,EAAK4D,eAAeu2B,UACpCmhC,OAAQt7D,EAAK4D,eAAe03D,SAG9Bl5D,EAAI0vB,eAAe4G,GAEnB14B,EAAK04B,YAAcA,EACnB14B,EAAK4O,QAAS,EAGdpR,KAAK+9D,kBAAkBv7D,KAWzB/G,EAAQnB,UAAUgjE,gBAAkB,SAAS96D,GAG3C,GAAKA,EAAK4O,OAAV,CAIA,IAAMxM,EAAM5E,KAAKgvC,KACjBnZ,EAAA,EAAYvyB,OAAOsB,GAEnB,IAAMs2B,EAAc14B,EAAK04B,YACzBt2B,EAAIyvB,kBAAkB6G,GAEtB14B,EAAK04B,YAAc,KACnB14B,EAAKmb,SAAS+O,QAGVlqB,EAAK66D,kBACP76D,EAAK66D,gBAAgBr5D,UACrBxB,EAAK66D,gBAAkB,MAGzB76D,EAAK4O,QAAS,IAOhB3V,EAAQnB,UAAU0jE,cAAgB,WAChCh+D,KAAK28D,sBAAwB,KAC7B,IAAIn6D,SACJ,IAAK,IAAM2rB,KAAOnuB,KAAKk8D,QACrB15D,EAAOxC,KAAKk8D,QAAQ/tC,IACX/c,QACPpR,KAAK+9D,kBAAkBv7D,IAS7B/G,EAAQnB,UAAU0hD,QAAU,WAC1Bh8C,KAAKg+D,iBAYPviE,EAAQnB,UAAUyjE,kBAAoB,SAASv7D,GAGzCA,EAAK66D,iBACP76D,EAAK66D,gBAAgBr5D,UAGvB,IAAMY,EAAM5E,KAAKgvC,KACjBnZ,EAAA,EAAYvyB,OAAOsB,GAEnB,IAAM4a,EAAO5a,EAAI6a,UACXnF,EAAO1V,EAAI0a,UACjBuW,EAAA,EAAYvyB,OAAOgX,GAEnB,IAAMoF,EAASF,EAAKG,gBAAgBrF,GAC9Bw+C,EAAWt5C,EAAKiyB,gBAAgBylB,UAChCR,EAAel0D,EAAKy6D,UAAUvG,aAAa3+C,MAAM,KAEjDugD,GACJxuB,QAASgvB,EACTjrD,UAAWrL,EAAKqL,UAChB4pD,cAAej1D,EAAKi1D,cACpBf,aAAcA,EACdgB,aAAc,OACd1W,KAAMthC,EACNtW,aAAc5G,EAAK4G,aACnB6tD,YAAaz0D,EAAKy0D,aAGd3pD,EAAY,IAAImvD,EAAA,EAChBtF,EAAgB,IAAIxsB,cACpB4tB,EAAoBjrD,EAAU0qD,gBAAgBM,GAC9CE,EAAiBrB,EAAcvsB,kBAAkB2tB,GACjDh1D,EAAMf,EAAKy6D,UAAU15D,IAE3Bf,EAAK66D,gBAAkBr9D,KAAK4uC,GAAGhuC,QAE/BZ,KAAK6gD,MAAMQ,KAAK99C,EAAKi1D,GAAiB3W,QAASr/C,EAAK66D,gBAAgBv8D,UACjE6C,KAAK,SAACC,GAELpB,EAAK66D,gBAAkB,KAGvB76D,EAAKmb,SAAS+O,QAGd,IAAMilB,GAAe,IAAI8qB,EAAA,GAAc9qB,aAAa/tC,EAASlK,MACzDi4C,GACFnvC,EAAKmb,SAASsgD,OAAOtsB,MAY7Bl2C,EAAQnB,UAAU0iE,kBAAoB,WAChCh9D,KAAK28D,uBACP38D,KAAKg4C,SAASvf,OAAOz4B,KAAK28D,uBAE5B38D,KAAK28D,sBAAwB38D,KAAKg4C,SAChCh4C,KAAKg+D,cAAchhE,KAAKgD,MACxB,OA0CJvE,EAAQC,OAASoM,QAAQpM,OAAO,eAC9BujD,EAAA,EAAwBvjD,OAAOK,KAC/B65B,EAAA,EAAel6B,OAAOK,KACtB+5B,EAAA,EAAwBp6B,OAAOK,QAElBgM,QAAQ,cAAetM,GAGvB6B,EAAA,kCCvkBf,IAAA6B,EAAA9D,EAAA,GAAA6iE,EAAA7iE,EAAA,GAAA8iE,EAAA9iE,EAAA,GAAA+iE,EAAA/iE,EAAA,IAAAgjE,EAAAhjE,EAAA,GAAAijE,EAAAjjE,EAAA,IAAAkjE,EAAAljE,EAAA,IAAAmjE,EAAAnjE,EAAA,IAAAojE,EAAApjE,EAAA,IAAAqjE,EAAArjE,EAAA,KAAAsjE,EAAAtjE,EAAA,IAAAujE,EAAAvjE,EAAA,IA6BMI,EAAU,SAASuM,GAMvBhI,KAAKqnC,iBAMLrnC,KAAK6+D,wBAML7+D,KAAK8+D,qBAAuB,KAM5B9+D,KAAK++D,iBAAmC7+D,IAArB8H,EAAQ2V,SAAyB3V,EAAQ2V,SAAW,KAMvE3d,KAAKg/D,cAAgB,IAAIJ,EAAA,GACvB3yC,iBAAiB,IAOnBjsB,KAAKwyB,aAAe,IAAImsC,EAAA,GACtBn5C,OAAQxlB,KAAKg/D,cACbjmD,MAAO/Q,EAAQ+Q,MACfqT,sBAAsB,EACtBC,wBAAwB,IAO1BrsB,KAAKi/D,mBAELP,EAAA,EAAuBlkE,KACrBwF,KAAuDgI,IAG3Dk2D,EAAA,EAAgBziE,EAASijE,EAAA,GAQzBjjE,EAAQnB,UAAUqb,UAAY,SAASvE,GAEjCpR,KAAK8+D,uBACPT,EAAA,EAAuBr+D,KAAK8+D,sBAC5B9+D,KAAK8+D,qBAAuB,MAG9BJ,EAAA,EAAuBpkE,UAAUqb,UAAUnb,KAAKwF,KAAMoR,GAElDA,IACFpR,KAAK8+D,qBAAuBT,EAAA,EAC1BlsC,SACA,QACAnyB,KAAKk/D,aACLl/D,OAIJA,KAAKm/D,aAWP1jE,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAEf5E,KAAKo0B,UAEtBp0B,KAAKwyB,aAAazF,OAAO,MAG3B2xC,EAAA,EAAuBpkE,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAE/CA,GACF5E,KAAKwyB,aAAazF,OAAOnoB,GAG3B5E,KAAKm/D,aAOP1jE,EAAQnB,UAAU6kE,UAAY,WAAW,IAAA98D,EAAArC,KACjC4E,EAAM5E,KAAKo0B,SACXhjB,EAASpR,KAAK0V,YACdiI,EAAW3d,KAAK++D,YAChBhiB,EAAO/8C,KAAKqnC,cAElB,GAAIziC,GAAOwM,GAAUuM,EACnBA,EAAS3a,QAAQ,SAAAuV,GAAA,OAAWlW,EAAK+8D,YAAY7mD,KAC7CwkC,EAAK3iD,KACHikE,EAAA,EAAgB1gD,EAAU,MAAO3d,KAAKq/D,mBAAoBr/D,MAC1Dq+D,EAAA,EAAgB1gD,EAAU,SAAU3d,KAAKs/D,sBAAuBt/D,WAE7D,CAEL,GAAI4E,EACWA,EAAI26D,mBACZxmD,MAAMymD,OAAS,UAGtBziB,EAAK/5C,QAAQq7D,EAAA,GACbthB,EAAK7iD,OAAS,EACdyjB,EAAS3a,QAAQ,SAAAuV,GAAA,OAAWlW,EAAKo9D,eAAelnD,OASpD9c,EAAQnB,UAAU+kE,mBAAqB,SAASl0C,GAC9C,IAAM5S,EAAU4S,EAAIvB,QACpBzqB,EAAA,EAAYisB,iBAAiB7S,EAAS6lD,EAAA,EACpC,mCACFp+D,KAAKo/D,YAAY7mD,IAQnB9c,EAAQnB,UAAUglE,sBAAwB,SAASn0C,GACjD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKy/D,eAAelnD,IAQtB9c,EAAQnB,UAAU8kE,YAAc,SAAS7mD,GACvC,IAAM4V,EAAM+vC,EAAA,EAAc3lD,GACpBiD,EAAWjD,EAAQ+D,cACzBnd,EAAA,EAAYisB,iBAAiB5P,EAAU8iD,EAAA,GAEvCt+D,KAAK6+D,qBAAqB1wC,GAAOkwC,EAAA,EAC/B7iD,EACA,SACAxb,KAAKkrB,sBAAsBluB,KAAKgD,KAAMuY,GACtCvY,MAGF,IAAM2zB,EAAQ3zB,KAAK0/D,wBAAwBlkD,GACrCmkD,EAAgB,IAAIvB,EAAA,EAAUzqC,GACpC3zB,KAAKi/D,gBAAgB9wC,GAAOwxC,EAC5B3/D,KAAKg/D,cAAc1yC,WAAWqzC,IAQhClkE,EAAQnB,UAAUmlE,eAAiB,SAASlnD,GAC1C,IAAM4V,EAAM+vC,EAAA,EAAc3lD,GACtBvY,KAAK6+D,qBAAqB1wC,KAC5BkwC,EAAA,EAAuBr+D,KAAK6+D,qBAAqB1wC,WAC1CnuB,KAAK6+D,qBAAqB1wC,GAEjCnuB,KAAKg/D,cAAcvyC,cAAczsB,KAAKi/D,gBAAgB9wC,WAC/CnuB,KAAKi/D,gBAAgB9wC,KAUhC1yB,EAAQnB,UAAU4wB,sBAAwB,SAAS3S,EACjD4S,GACA,IAAM3P,EAAW2P,EAAIE,OACrBlsB,EAAA,EAAYisB,iBAAiB5P,EAAU8iD,EAAA,GAEvC,IAAM3qC,EAAQ3zB,KAAK0/D,wBAAwBlkD,GACrC2S,EAAM+vC,EAAA,EAAc3lD,GAC1BvY,KAAKi/D,gBAAgB9wC,GAAK3C,YAAYmI,IASxCl4B,EAAQnB,UAAUolE,wBAA0B,SAC1ClkD,GAEA,IAAI4E,SACAuT,SAEJ,GAAInY,aAAoBijD,EAAA,EACtB9qC,EAAQnY,EAASyE,wBACZ,GAAIzE,aAAoB+iD,EAAA,EAC7Bn+C,EAAS5E,EAASwE,gBAAgB,QAC7B,CACL,IAAMN,EAASlE,EAAS0E,YACxBE,EAAS+9C,EAAA,EAAmBz+C,GAS9B,OANKiU,GAASvT,IACZuT,EAAQ,IAAI6qC,EAAA,EAAYp+C,IAG1BjhB,EAAA,EAAYmE,OAAOqwB,EAAO,2BAEnBA,GASTl4B,EAAQnB,UAAU4kE,aAAe,SAAS/zC,GAEpB,KAAhBA,EAAIy0C,SACN5/D,KAAK2V,WAAU,IAKJrY,EAAA,kCC/Rf,IAAA6B,EAAA9D,EAAA,GAAAwkE,EAAAxkE,EAAA,KAAAykE,EAAAzkE,EAAA,IAAAg1D,EAAAh1D,EAAA,GAAA0kE,EAAA1kE,EAAA,GAAA2kE,EAAA3kE,EAAA,IAAA4kE,EAAA5kE,EAAA,GAAA6kE,EAAA7kE,EAAA,IAAA8kE,EAAA9kE,EAAA,IAAA+kE,EAAA/kE,EAAA,IAAAglE,EAAAhlE,EAAA,IAAAilE,EAAAjlE,EAAA,IAAAklE,EAAAllE,EAAA,IAAAmlE,EAAAnlE,EAAA,IA6BMI,EAAU,SAASuM,GAEvB7I,EAAA,EAAYmE,OAAO0E,EAAQ2V,UAM3B3d,KAAKqnC,iBAMLrnC,KAAKygE,WAAY,EAMjBzgE,KAAK8+D,qBAAuB,KAQ5B9+D,KAAK0gE,kBAAmB,EAMxB1gE,KAAK2gE,qBAA6CzgE,IAA3B8H,EAAQ61D,eAC7B71D,EAAQ61D,eAAiB,GAM3B79D,KAAK+vD,UAAY/nD,EAAQ2V,SAOzB3d,KAAKsqB,SAAW,KAMhBtqB,KAAK4gE,YAAc,KAMnB5gE,KAAK6gE,kBAAoB,KAOzB7gE,KAAK8gE,SAAW,IAAIP,EAAA,GAClB/6C,OAAQ,IAAIg7C,EAAA,GACVv0C,iBAAiB,EACjBogB,QAASrkC,EAAQqkC,QAEnBtzB,MAAO/Q,EAAQ+Q,OAAS8mD,EAAA,EAAsBkB,gCAC9C30C,sBAAsB,EACtBC,wBAAwB,IAO1BrsB,KAAKi/D,mBAELiB,EAAA,EAAqB1lE,KAAKwF,MACxBwqD,gBAAiBxqD,KAAKghE,YACtBC,gBAAiBjhE,KAAKkhE,YACtBxW,cAAe1qD,KAAKmhE,aAKxB9Q,EAAA,EAAgB50D,EAASykE,EAAA,GAQzBzkE,EAAQnB,UAAUqb,UAAY,SAASvE,GAAQ,IAAA/O,EAAArC,KAEzCA,KAAK8+D,uBACPmB,EAAA,EAAuBjgE,KAAK8+D,sBAC5B9+D,KAAK8+D,qBAAuB,MAG9BoB,EAAA,EAAqB5lE,UAAUqb,UAAUnb,KAAKwF,KAAMoR,GAEhDA,GACFpR,KAAK8+D,qBAAuBmB,EAAA,EAC1B9tC,SACA,QACAnyB,KAAKk/D,aACLl/D,MAEFA,KAAK+vD,UAAU/sD,QAAQ,SAAAuV,GAAA,OAAWlW,EAAK+8D,YAAY7mD,KACnDvY,KAAKqnC,cAAcjtC,KACjB6lE,EAAA,EAAgBjgE,KAAK+vD,UAAW,MAAO/vD,KAAKy6C,kBAAmBz6C,MAC/DigE,EAAA,EAAgBjgE,KAAK+vD,UAAW,SAAU/vD,KAAKkwD,qBAAsBlwD,SAIvEA,KAAKqnC,cAAcrkC,QAAQi9D,EAAA,GAC3BjgE,KAAKqnC,cAAcntC,OAAS,EAC5B8F,KAAK+vD,UAAU/sD,QAAQ,SAAAuV,GAAA,OAAWlW,EAAKo9D,eAAelnD,OAS1D9c,EAAQnB,UAAU8kE,YAAc,SAAS7mD,GACvC,IAAMiD,EAAWjD,EAAQ+D,cACzBnd,EAAA,EAAYisB,iBAAiB5P,EAAU2kD,EAAA,GAEvC5nD,EAAQ7V,IAAI,QAAS,GAGrB,IAAMyrB,EAAMkiC,EAAA,EAAc93C,GACpBob,EAAQ,IAAIysC,EAAA,EAAYpgE,KAAKohE,qBAAqB5lD,IAClDmkD,EAAgB,IAAIK,EAAA,EAAUrsC,GACpC3zB,KAAKi/D,gBAAgB9wC,GAAOwxC,EAC5B3/D,KAAK8gE,SAASt3C,YAAY8C,WAAWqzC,IASvClkE,EAAQnB,UAAU+mE,oBAAsB,SAASl2C,GAC/C,IAAKnrB,KAAKygE,UAAW,CACnBzgE,KAAKygE,WAAY,EAEjB,IAAMj+C,EAAQ,IAAIs9C,EAAA,EAAgB,eAAgBniD,SAAU3d,KAAK+vD,YACjE/vD,KAAKuH,cAAcib,KASvB/mB,EAAQnB,UAAUmlE,eAAiB,SAASlnD,GAI1C,GAHAvY,KAAKsqB,SAAW,KAGZ/R,EAAS,CACX,IAAM4V,EAAMkiC,EAAA,EAAc93C,GAEtBvY,KAAKi/D,gBAAgB9wC,KACvBnuB,KAAK8gE,SAASt3C,YAAYiD,cAAczsB,KAAKi/D,gBAAgB9wC,WACtDnuB,KAAKi/D,gBAAgB9wC,MASlC1yB,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAClC5E,KAAK8gE,SAAS/zC,OAAOnoB,GACrBs7D,EAAA,EAAqB5lE,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,IAQnDnJ,EAAQnB,UAAUmgD,kBAAoB,SAAStvB,GAC7C,IAAM5S,EAAU4S,EAAIvB,QACpBzqB,EAAA,EAAYisB,iBAAiB7S,EAASynD,EAAA,EACpC,mCACFhgE,KAAKo/D,YAAY7mD,IAQnB9c,EAAQnB,UAAU41D,qBAAuB,SAAS/kC,GAChD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKy/D,eAAelnD,IAStB9c,EAAQnB,UAAU0mE,YAAc,SAAS71C,GACvC,IAEI5S,EAFQ4S,EAAIvmB,IAEEg5C,sBAAsBzyB,EAAIwyB,MAC1C,SAACplC,EAAS9V,GAAV,OAAoB8V,QAASrY,GAE/B,GAAIqY,EAAS,CACX,IAAIsP,GAAQ,EACZ7nB,KAAK+vD,UAAU/sD,QAAQ,SAACs+D,GAClBjR,EAAA,EAAciR,IAAMjR,EAAA,EAAc93C,KACpCsP,GAAQ,KAGPA,IACHtP,EAAU,MAId,GAAIA,EAAS,CACXvY,KAAK4gE,YAAcz1C,EAAI8I,WACvBj0B,KAAKsqB,SAAW/R,EAChB,IAAMiD,EAAYxb,KAAKsqB,SAAShO,cAKhC,YAJiBpc,IAAbsb,IACFxb,KAAK6gE,kBAAoB7gE,KAAKohE,qBAAqB5lD,KAG9C,EAGT,OAAO,GAST/f,EAAQnB,UAAU8mE,qBAAuB,SACvC5lD,GAEA,IAAI4E,SAEJ,GAAI5E,aAAoB6kD,EAAA,EACtBjgD,EAAS5E,EAAS+lD,uBACb,GAAI/lD,aAAoB8kD,EAAA,EAC7BlgD,EAAS5E,EAASgmD,2BACb,CACL,IAAM9hD,EAASlE,EAAS0E,YACxBE,EAAS2/C,EAAA,EAAmBrgD,GAG9B,OAAOU,GAQT3kB,EAAQnB,UAAU4mE,YAAc,SAAS/1C,GACvCnrB,KAAKqhE,oBAAoBl2C,GAEzB,IAAM3P,EACDxb,KAAKsqB,SAAShO,cAEbmlD,EAAOzhE,KAAK4gE,YAAY,GACxBc,EAAO1hE,KAAK4gE,YAAY,GAExBe,EAAU3hE,KAAK6gE,kBAAkB,GACjCe,EAAU5hE,KAAK6gE,kBAAkB,GAEjCgB,EAAMJ,EAAOE,EACbG,EAAMJ,EAAOE,EACbG,EAAM52C,EAAI8I,WAAW,GAAK0tC,EAC1BK,EAAM72C,EAAI8I,WAAW,GAAK2tC,EAEhC5hE,KAAK4gE,YAAY,GAAKz1C,EAAI8I,WAAW,GACrCj0B,KAAK4gE,YAAY,GAAKz1C,EAAI8I,WAAW,GAErC,IAAMguC,EAAKrmD,KAAKsmD,MAAMF,EAAKD,GAErBtmD,EADKG,KAAKsmD,MAAMJ,EAAKD,GACRI,EAEnBzmD,EAAS2mD,QAAQ1mD,GAAQkmD,EAASC,KASpCnmE,EAAQnB,UAAU6mE,UAAY,SAASh2C,GACrC,GAAInrB,KAAKygE,UAAW,CAElB,IAAMj+C,EAAQ,IAAIs9C,EAAA,EAAgB,aAAcvnD,QAASvY,KAAKsqB,WAC9DtqB,KAAKuH,cAAcib,GACnBxiB,KAAKygE,WAAY,EACjBzgE,KAAK2V,WAAU,GAEjB,OAAO,GASTla,EAAQnB,UAAU4kE,aAAe,SAAS/zC,GAEpB,KAAhBA,EAAIy0C,SACN5/D,KAAK2V,WAAU,IAKJrY,EAAA,kCC7Wf,IAAA8kE,EAAA/mE,EAAA,IAQMI,EAAUqM,QAAQpM,OAAO,mBAE/BD,EAAQc,MAAM,eAAgB,IAAI6lE,EAAA,GAGnB9kE,EAAA,mCCbf,SAAAo4B,GAAA,IAAAv2B,EAAA9D,EAAA,GAAAo1B,EAAAp1B,EAAA,IAAAgE,EAAAhE,EAAA,GAAAwvB,EAAAxvB,EAAA,GAAAgnE,EAAAhnE,EAAA,KAAAinE,EAAAjnE,EAAA,KAqBMI,EAAU,SAAS8mE,EAAaC,GAAoB,IAAAngE,EAAArC,KAElDgI,OAAiC9H,IAAvBsiE,EAAmCA,KAEnDx6D,EAAQktB,YAAcotC,EAAA,EAAqBG,SAM3CziE,KAAKqnC,iBAMLrnC,KAAK0iE,qBAAuB,KAE5B,IAAMC,EAAYjtC,EAAE,UAClBktC,MAAS,wBAWX,GAJA5iE,KAAK6iE,gBAAuC3iE,IAA1BqiE,EAAYO,WAC5BP,EAAYO,UAGVP,EAAYrzB,MAAO,CACrB,IAAM6zB,EAAWrtC,EAAE,SACjBktC,MAAS,kBACRI,SAASL,GAEZjtC,EAAE,UACAtb,KAAMmoD,EAAYrzB,QACjB8zB,SAASD,GAId,IAAME,EAAYvtC,EAAE,SAClBktC,MAAS,eACRI,SAASL,GAMZ3iE,KAAKkjE,YAELX,EAAYnpB,QAAQp2C,QAAQ,SAACg8C,GAC3B38C,EAAK6gE,SAAS9oE,KACZs7B,EAAE,YACAktC,MAAS,kBACTO,YAAankB,EAAOjjD,KACpBqe,MACE,SACmBla,IAAlB8+C,EAAOz5C,MAAuBy5C,EAAOz5C,MAAQy5C,EAAOjjD,MACrDqL,KAAK,MAEN47D,SAASC,GACTG,QAAQ1tC,EAAE,UACTktC,WAAwB1iE,IAAf8+C,EAAO3F,IAAoB2F,EAAO3F,IAAM,SAKzDrxC,EAAQ4hB,QAAU+4C,EAAU,GAE5BN,EAAA,EAAU7nE,KAAKwF,KAAMgI,IAIvB3I,EAAA,EAAgB5D,EAAS4mE,EAAA,GAQzB5mE,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAAK,IAAAmB,EAAA/F,KAEpBA,KAAKo0B,WAEtBp0B,KAAKqnC,cAAcrkC,QAAQ6nB,EAAA,GAC3B7qB,KAAKqnC,cAAcntC,OAAS,GAG9BmoE,EAAA,EAAU/nE,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAElCA,IACF5E,KAAKkjE,SAASlgE,QAAQ,SAACg8C,GACrB,IAAMtlD,EAAOslD,EAAOtlD,OACpBqM,EAAKshC,cAAcjtC,KACjBywB,EAAA,EACEm0B,EAAO,GACP,QACAj5C,EAAKs9D,mBAAmBrmE,KAAxB+I,EAAmCrM,EAAKqC,UAM9CiE,KAAKqnC,cAAcjtC,KACjBywB,EAAA,EACEjmB,EACA,cACA5E,KAAKsjE,sBACLtjE,SAcRvE,EAAQnB,UAAU8jD,KAAO,SAASnqB,GAChCj0B,KAAKg0B,YAAYC,GACbj0B,KAAK6iE,aACP7iE,KAAK0iE,qBAAuB73C,EAAA,EAC1BsH,SAASoxC,gBACT,YACAvjE,KAAKwjE,gBACLxjE,QAUNvE,EAAQnB,UAAU2hD,MAAQ,WACxBj8C,KAAKg0B,iBAAY9zB,GAEiB,OAA9BF,KAAK0iE,sBACP73C,EAAA,EAAuB7qB,KAAK0iE,uBAUhCjnE,EAAQnB,UAAU+oE,mBAAqB,SAASrkB,EAAQ7zB,GAEtDnrB,KAAKuH,cAAc,IAAIkpB,EAAA,EAAgB,eACrCuuB,OAAQA,KAGNh/C,KAAK6iE,YACP7iE,KAAKi8C,QAGP9wB,EAAImzB,mBASN7iD,EAAQnB,UAAUkpE,gBAAkB,SAASr4C,GAC3C,IAAMvB,EAAU5pB,KAAKyjE,aACjB75C,GAAqD,IAA1C8L,EAAEvK,EAAIE,QAAQq4C,QAAQ95C,GAAS1vB,QAC5C8F,KAAKi8C,SAcTxgD,EAAQnB,UAAUgpE,sBAAwB,SAASn4C,GACjD,IAAME,EAASF,EAAIw4C,cAAct4C,OACjClsB,EAAA,EAAYisB,iBAAiBC,EAAQu4C,SAErC,IAAMh6C,EAAU5pB,KAAKyjE,aACrBtkE,EAAA,EAAYisB,iBAAiBxB,EAASg6C,SAElCh6C,EAAQi6C,SAASx4C,KACnBF,EAAI8I,YAAczX,IAAUA,KAC5B2O,EAAIwyB,OAASnhC,IAAUA,OAKZlf,EAAA,qDClOf,IAAAwmE,EAAAzoE,EAAA,IAAA0oE,EAAA1oE,EAAA,KAUMI,EAAUqM,QAAQpM,OAAO,mBAS/BD,EAAQgmD,SAAW,WAoBjB,OAbA,SAAkBlQ,EAASpzB,EAAU6lD,GAMnC,IAAMC,OAA4B/jE,IAAjB8jE,GAA+BF,EAAA,EAAUI,WACzC,2BAAfF,EAEIG,EAAO,IAAIC,MAAM7yB,IAAWl0C,KAAM4mE,IACxC5pE,OAAA0pE,EAAA,OAAA1pE,CAAO8pE,EAAMhmD,KAMjB1iB,EAAQwmD,QAAQ,eAAgBxmD,EAAQgmD,UAGzBnkD,EAAA,mCC1Cf,IAAM7B,KAMNA,EAAQC,OAASoM,QAAQpM,OAAO,iCAEhCD,EAAQC,OAAOa,MAAM,8BACnBoS,WAAY,OAICrR,EAAA,2DCNf,IAAM7B,EAAUqM,QAAQpM,OAAO,gBAqC/BD,EAAQy7C,YACNvV,gNAOA0R,SACEgxB,QAAW,WAEbC,YAAY,EACZ9zC,WAAY,sBACZ+zC,UACEC,UAAa,sBACbC,SAAY,uBAIhBhpE,EAAQipE,UAAU,YAAajpE,EAAQy7C,YAEvCz7C,EAAQ+7C,YAAR,WAME,SAAAmtB,EAAYt3C,EAAQoqB,gGAAUxvC,CAAAjI,KAAA2kE,GAK5B3kE,KAAK4kE,UAAYntB,EAMjBz3C,KAAK6kE,QAAUx3C,EAMfrtB,KAAK8kE,OAML9kE,KAAKykE,SAMLzkE,KAAKwkE,UAMLxkE,KAAKqkE,QAzCT,OAAAM,EAAA9nC,SAAA,qBAAA8nC,EAAArqE,UA4CEw/C,QA5CF,WA4CY,IAAAz3C,EAAArC,KACRA,KAAKykE,UAA6B,IAAlBzkE,KAAKykE,SAErBzkE,KAAK8kE,OAAS9kE,KAAK4kE,UAAUtjE,WAExBtB,KAAKykE,WACRzkE,KAAK8kE,OAAOC,KAAK,iBAAiB,GAClC/kE,KAAK8kE,OAAOC,KAAK,gBAAiB,WAGpC/kE,KAAKwkE,YAAcxkE,KAAKwkE,UAExB,IAAMQ,EAAShlE,KAAK8kE,OAAOroB,KAAK,iBAChCuoB,EAAOC,YACHjlE,KAAKwkE,WACPQ,EAAOR,YAGTxkE,KAAKqkE,QAAQtwB,QAAU,WACrB1xC,EAAKyiE,OAAOI,MAAM7iE,EAAKgiE,QAAQvwB,WAAa,OAAS,SAGvD9zC,KAAK8kE,OAAOnpC,GAAG,iCAAkC,SAACwpC,GAChD,IAAM9nE,EAAO8nE,EAAE9nE,KACfw4B,EAAA,EAAYvyB,OAAe,SAARjG,GAA2B,UAARA,GACtCgF,EAAKgiE,QAAQxwB,cAAsB,SAARx2C,MArEjCsnE,EAAArqE,UAyEE8qE,WAzEF,WA2EIplE,KAAK8kE,OAAOI,MAAM,QAClBllE,KAAK8kE,OAAOI,MAAM,kBAElB,IAAMF,EAAShlE,KAAK8kE,OAAOroB,KAAK,iBAChCuoB,EAAOC,UAAU,WACbjlE,KAAKwkE,WACPQ,EAAOR,UAAU,YAjFvBG,EAAA,GAsFAlpE,EAAQ+0B,WAAW,sBAAuB/0B,EAAQ+7C,aAGnCl6C,EAAA,kCC7JfjC,EAAA,SAAAooC,EAAApoC,EAAA,GAAAgqE,EAAAhqE,EAAA,IAAAg1D,EAAAh1D,EAAA,GAuBMI,EAAU,SAAS26B,GAEvBivC,EAAA,EAAmB7qE,KAAKwF,MAMxBA,KAAKg4C,SAAW5hB,EAEhB,IAAMkvC,EAAYx9D,QAAQ8hB,QAAQ,yCAClC9hB,QAAQ8hB,QAAQuI,SAASy8B,MAAMC,OAAOyW,GAMtCtlE,KAAKulE,WAAaD,EAMlBtlE,KAAKk8D,yDAIP7L,EAAA,EAAgB50D,EAAS4pE,EAAA,GAQzB5pE,EAAQ+pE,eAAiB,IAazB/pE,EAAQnB,UAAUk/B,OAAS,SAAS98B,GAClCsD,KAAK6iB,KAAKnmB,IAQZjB,EAAQnB,UAAUoyB,MAAQ,WACxB,IAAK,IAAMyB,KAAOnuB,KAAKk8D,OACrBl8D,KAAKylE,yBAAyBzlE,KAAKk8D,OAAOr6B,SAAS1T,EAAK,OAQ5D1yB,EAAQnB,UAAUsoB,YAAc,SAAS/e,GAAS,IAAAxB,EAAArC,KAC1C3C,EAAOwG,EAAQxG,KACrBomC,EAAA,EAAYjmB,aAAangB,EAAM,uBAE/B,IAAMqoE,GAAc,QAAS,QAC7B,OAAQroE,GACN,KAAKgoE,EAAA,EAAmBr7D,KAAK+Y,MAC3B2iD,EAAWtrE,KAAK,gBAChB,MACF,KAAKirE,EAAA,EAAmBr7D,KAAKiZ,YAC3ByiD,EAAWtrE,KAAK,cAChB,MACF,KAAKirE,EAAA,EAAmBr7D,KAAKmZ,QAC3BuiD,EAAWtrE,KAAK,iBAChB,MACF,KAAKirE,EAAA,EAAmBr7D,KAAKqZ,QAC3BqiD,EAAWtrE,KAAK,iBAMpB,IAAMurE,EAAK79D,QAAQ8hB,QAAR,eAA+B87C,EAAWt+D,KAAK,KAA/C,aAGPvD,EAAQwnB,OACEvjB,QAAQ8hB,QAAQ/lB,EAAQwnB,QAExBrrB,KAAKulE,YAGT1W,OAAO8W,GACjBA,EAAGC,KAAK/hE,EAAQ6f,KAAK0qC,SAAS,MAE9B,IAAMyX,OAA0B3lE,IAAlB2D,EAAQgiE,MAAsBhiE,EAAQgiE,MAClDpqE,EAAQ+pE,eAEJhjE,GACJmjE,MAKIx3C,EAAMkiC,EAAA,EAAcsV,GAC1BnjE,EAAK1B,QAAUd,KAAKg4C,SAAS,WAC3B2tB,EAAGr+D,MAAM,gBACFjF,EAAK65D,OAAO/tC,IAClB03C,GAEH7lE,KAAKk8D,OAAO/tC,GAAO3rB,GASrB/G,EAAQnB,UAAUmrE,yBAA2B,SAASjjE,GACpD,IAAMmjE,EAAKnjE,EAAKmjE,GACV7kE,EAAU0B,EAAK1B,QACfqtB,EAAMkiC,EAAA,EAAcsV,GAG1BA,EAAGr+D,MAAM,SAITtH,KAAKg4C,SAASvf,OAAO33B,UAGdd,KAAKk8D,OAAO/tC,KAgBrB1yB,EAAQC,OAASoM,QAAQpM,OAAO,wBAGjBqM,QAAQ,mBAAoBtM,GAG5B6B,EAAA,kPCxKTwoE,EAAW,SAASC,EAAMC,GAC9B,MAAyB,iBAAVD,GAAwC,iBAAVC,GAAsBD,EAAKE,gBAAkBD,EAAKC,eAE3FC,EAAQ,SAARA,EAAiB3pE,EAAOrC,EAAQisE,GACpC,IAAMC,EAAMD,GAAQ,IACdt2C,EAAMtzB,EAAMwlB,WAClB,OAAO8N,EAAI31B,OAASA,EAASgsE,EAAME,EAAMv2C,EAAK31B,GAAU21B,GAsBpDw2C,EAAW,SAASx2C,EAAKy2C,GAC7B,IAAK,IAAItsE,EAAI,EAAGA,EAAIssE,EAAIpsE,OAAQF,IAC9B,GAAIssE,EAAItsE,GAAGisE,gBAAkBp2C,EAAIo2C,cAC/B,OAAOjsE,EAGX,OAAQ,GAEJusE,GACJC,cACEC,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEC,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,QACE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OACxD,SAAU,YAAa,UAAW,WAAY,YAEhDC,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,UAAW,KAAM,MACjBC,QAAS,SAAS7mC,GAChB,IAAMzjC,EAAIyjC,EAAS,GAAI8mC,GAAYvrE,EAAG,KAAMwrE,EAAG,KAAMC,EAAG,MACxD,OAAyC,IAAlCrrD,KAAK6kB,MAAMR,EAAS,IAAM,KAAc8mC,EAASvqE,GAAYuqE,EAASvqE,GAAhB,OAGjE0qE,WAAY,iBACZC,WAAY,2CACZC,SAAU,qBACVC,QAAS,uIACTC,OAAQ,eAGJC,EAAgB,SAASv/D,GAC7B,IACMqJ,EApDQ,SAAVm2D,EAAmBlkB,GACvB,IAAItpD,SAAGyvC,SAEP,IADA6Z,EAAMA,MACDtpD,EAAI,EAAGA,EAAImV,UAAUjV,OAAQF,IAEhC,GADAyvC,EAAMt6B,UAAUnV,GAIhB,IAAK,IAAM4W,KAAO64B,EACZA,EAAIlvC,eAAeqW,KACG,WAApB62D,EAAOh+B,EAAI74B,IACb42D,EAAQlkB,EAAI1yC,GAAM64B,EAAI74B,IAEtB0yC,EAAI1yC,GAAO64B,EAAI74B,IAKvB,OAAO0yC,EAkCQkkB,CAAQjB,EAAiBv+D,GAD3BhI,KAERwmE,aAAen1D,EAAOm1D,aAFdxmE,KAGRknE,WAAa71D,EAAO61D,WAHZlnE,KAIRmnE,WAAa91D,EAAO81D,WAJZnnE,KAKRonE,SAAW/1D,EAAO+1D,SALVpnE,KAMRqnE,QAAUh2D,EAAOg2D,QANTrnE,KAORsnE,OAASj2D,EAAOi2D;;;;;;;;;;GAGvBC,EAAcjtE,WACZ+e,YAAakuD,EACbG,SAAU,SAAS73C,GACjB,IACI71B,SAKJ,OAHU,KADVA,EAAIqsE,EAASx2C,EAFA7vB,KAEUwmE,aAAaI,aAAe,KAEjD5sE,EAAIqsE,EAASx2C,EAJF7vB,KAIYwmE,aAAaG,QAAU,GAEzC3sE,GAETuhD,UAAW,SAASosB,EAAOC,GACzB,IAAmBtkB,GAAOzkB,KAAM,KAAMgpC,KAAM,KAAMC,MAAO,KAAMC,IAAK,KAAMC,KAAM,EAAGC,IAAK,EAAGC,IAAK,GAAIC,EAAvFnoE,KAAwGwmE,aACjHxsE,SAAGouE,GAAY,EAAOC,GAAY,EAAOC,SAAWC,SACpDC,SAAQC,SAAYC,SAAatV,SAAKuV,SAC1C,IAAKhB,EACH,OAAO,KAET,GAAIA,aAAiB7oC,KACnB,OAAO6oC,EAET,GAAgB,MAAZC,EAEF,OADA5tE,EAAI6nC,SAAS8lC,IACF,IAAI7oC,KAAS,IAAJ9kC,GAAY2tE,EAElC,gBAAeA,EAAf,YAAAF,EAAeE,IACb,IAAK,SACH,OAAO,IAAI7oC,KAAK6oC,GAClB,IAAK,SACH,MACF,QACE,OAAO,KAEX,IAAMiB,EAAehB,EAAQ1hB,MArBhBlmD,KAqB2BmnE,YACxC,IAAKyB,GAAwC,IAAxBA,EAAa1uE,OAChC,MAAM,IAAI2nB,MAAM,mCAElB,IAAMgnD,EAAalB,EAAMviD,QAzBZplB,KAyByBknE,WAAY,MAAMnvD,MAAM,MAC9D,IAAK/d,EAAI,EAAGA,EAAI6uE,EAAW3uE,OAAQF,IAGjC,OAFAsuE,EAAYO,EAAW7uE,GACvBuuE,EAAY1mC,SAASymC,GACbM,EAAa5uE,IACnB,IAAK,IACL,IAAK,IACH,IAAIuuE,EAIF,OAAO,KAHPnV,EAAMkV,EAAUpuE,OAChBopD,EAAIukB,KAAe,IAARzU,EAAYvxB,UAAU0mC,EAAY,GAAK,KAAO,MAAQD,GAAaC,EAIhFH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,GAAIrkB,MAAMwkB,GAAY,CAEpB,MADAC,EA7CKxoE,KA6CS0nE,SAASY,IACV,GAGX,OAAO,KAFPhlB,EAAIwkB,MAAQU,MAIT,CACL,KAAID,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAIwkB,MAAQS,EAKhBH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACH,KAAIG,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAIykB,IAAMQ,EAIZH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IAIH,GADAO,EAAME,EAFNJ,EAAcG,EAAapnD,QAAQ,MAAQ,EAAKonD,EAAapnD,QAAQ,KAClEonD,EAAapnD,QAAQ,MAAQ,EAAKonD,EAAapnD,QAAQ,MAAQ,GAE9DinD,GAAc,EAChBC,EAAc5C,EAAS6C,EAAKR,EAAUtB,SAAS,IAAM,EAClDf,EAAS6C,EAAKR,EAAUtB,SAAS,IAAM,IAAM,EAC5C0B,GAAa,GAAKA,GAAa,IAAMG,GAAe,EACtDplB,EAAI0kB,KAAOO,EAAYG,EAAc,EAC5BH,GAAa,GAAKA,GAAa,KACxCjlB,EAAI0kB,KAAOO,OAER,CACL,KAAIA,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAI0kB,KAAOO,EAKfF,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAI0kB,KAAOO,EAIbF,GAAY,EACZ,MACF,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAI2kB,IAAMM,EAIZF,GAAY,EACZ,MACF,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFPjlB,EAAI4kB,IAAMK,EAIZF,GAAY,EAIlB,IAAkB,IAAdD,GAAsB9kB,EAAIukB,MAAQvkB,EAAIwkB,OAASxkB,EAAIykB,IACrDzkB,EAAIzkB,KAAO,IAAIC,KAAKwkB,EAAIukB,KAAMvkB,EAAIwkB,MAAQ,EAAGxkB,EAAIykB,IAAKzkB,EAAI0kB,KAAM1kB,EAAI2kB,IAAK3kB,EAAI4kB,IAAK,OAC7E,CACL,IAAkB,IAAdG,EACF,OAAO,KAET/kB,EAAIzkB,KAAO,IAAIC,KAAK,EAAG,EAAG,EAAGwkB,EAAI0kB,KAAM1kB,EAAI2kB,IAAK3kB,EAAI4kB,IAAK,GAE3D,OAAO5kB,EAAIzkB,MAEbiqC,UAAW,SAASC,EAAUnB,GAC5B,GAAwB,iBAAbmB,EACT,OAAOA,EAET,IAAmBC,EAASD,EAAS3jD,QAAxBplB,KAAqCknE,WAAY,MAAMnvD,MAAM,MAA8B6wD,EAAehB,EAAQ1hB,MAAlHlmD,KAA6HmnE,YAAaQ,EAAQ,IAAI7oC,KAC/Js0B,SAAKp5D,SAAGwC,SAAGysE,SAAOC,SAAMC,SAE5B,IAH4F,WAG9Et3D,KAAK+2D,EAAa,IAC9B,OAAOG,EAGT,IAAK/uE,EAAI,EAAGA,EAAIgvE,EAAO9uE,OAAQF,IAAK,CAClC,IAAIovE,EAAS,EAGb,GAFAH,EAAQD,EAAOhvE,GACfkvE,EAAOrnC,SAASonC,EAAMI,OAAO,EAAG,IAC5BtlB,MAAMmlB,GACR,OAAO,KAET,OAAQlvE,GACN,KAAK,EACqB,MAApB4uE,EAAa,IAAkC,MAApBA,EAAa,GAC1CjB,EAAM2B,SAASJ,EAAO,GAEtBvB,EAAM4B,QAAQL,GAEhB,MACF,KAAK,EACqB,MAApBN,EAAa,IAAkC,MAApBA,EAAa,GAC1CjB,EAAM4B,QAAQL,GAEdvB,EAAM2B,SAASJ,EAAO,GAExB,MACF,KAAK,EAKH,GAJAC,EAAQxB,EAAM6B,cAEdJ,GADAhW,EAAM6V,EAAM/uE,QACG,EAAIk5D,EAAM,IACzB+V,EAAQtnC,SAASuxB,EAAM,EAAI+V,EAAMpnD,WAAWsnD,OAAO,EAAG,EAAIjW,GAAO6V,EAAQA,EAAMI,OAAO,EAAG,KAEvF,OAAO,KAET1B,EAAM8B,YAAYN,GAClB,MACF,KAAK,EACHxB,EAAM+B,SAASR,GACf,MACF,KAAK,EACHvB,EAAMlsB,WAAWytB,GACjB,MACF,KAAK,EACHvB,EAAMgC,WAAWT,IAGrB1sE,EAAIysE,EAAMI,OAAOD,IACXlvE,OAAS,GACb8uE,EAAO5tE,OAAOpB,EAAI,EAAG,EAAGwC,GAG5B,OAAOmrE,GAETiC,YAAa,SAASC,EAAOlC,GAC3B,IAAImC,SACEC,EAAO/pE,KAAMmoE,EAAY4B,EAAKvD,aAAcwD,EAAY,YAAaC,EAAW,SAASC,EAAG5uE,GAChG,OAAOwuE,EAAII,GAAKJ,EAAII,KAAO5uE,GAuS7B,OArSAwuE,GAQEhuE,EAAG,WACD,OAAOoqE,EAAM4D,EAAI5uE,IAAK,IAMxBivE,EAAG,WACD,OAAOhC,EAAUzB,UAAUoD,EAAIM,MAMjClvE,EAAG,WACD,OAAOysE,EAAM0C,WAMf1uE,EAAG,WACD,OAAOwsE,EAAU1B,KAAKqD,EAAIM,MAM5BE,EAAG,WACD,OAAOR,EAAIM,KAAO,GAMpBA,EAAG,WACD,OAAOzC,EAAM4C,UAMfC,EAAG,WACD,IAAMC,EAAI,IAAI3rC,KAAKgrC,EAAIY,IAAKZ,EAAIttE,IAAM,EAAGstE,EAAI5uE,KAAM0mB,EAAI,IAAIkd,KAAKgrC,EAAIY,IAAK,EAAG,GAC5E,OAAO9uD,KAAKmN,OAAO0hD,EAAI7oD,GAzUnB,QAmVN+oD,EAAG,WACD,IAAMF,EAAI,IAAI3rC,KAAKgrC,EAAIY,IAAKZ,EAAIttE,IAAM,EAAGstE,EAAI5uE,IAAM4uE,EAAIQ,IAAM,GAAI1oD,EAAI,IAAIkd,KAAK2rC,EAAEjB,cAAe,EAAG,GAClG,OAAOtD,EAAM,EAAItqD,KAAKmN,OAAO0hD,EAAI7oD,GArV7B,MAqVwC,GAAI,IAUlDgpD,EAAG,WACD,OAAOzC,EAAUxB,OAAOgB,EAAMD,aAMhC9rE,EAAG,WACD,OAAOsqE,EAAM4D,EAAIttE,IAAK,IAMxBquE,EAAG,WACD,OAAO1C,EAAUvB,YAAYe,EAAMD,aAMrClrE,EAAG,WACD,OAAOmrE,EAAMD,WAAa,GAM5BwC,EAAG,WACD,OAAQ,IAAIprC,KAAKgrC,EAAIY,IAAKZ,EAAIttE,IAAK,GAAI6tE,WAUzCS,EAAG,WACD,IAAMJ,EAAIZ,EAAIY,IACd,OAAQA,EAAI,GAAM,GAAKA,EAAI,KAAQ,GAAKA,EAAI,KAAQ,EAAK,EAAI,GAM/DzuE,EAAG,WACD,IAAMO,EAAIstE,EAAIttE,IAAKmuE,EAAIb,EAAIa,IAC3B,OADoCb,EAAIY,KACtB,KAANluE,GAAYmuE,EAAI,EAAI,EAAU,IAANnuE,GAAWmuE,EAAI,GAAK,EAAI,IAM9DD,EAAG,WACD,OAAO/C,EAAM6B,eAMflpD,EAAG,WACD,OAAOwpD,EAAIY,IAAI3oD,WAAW9kB,OAAO,IAUnCwtE,EAAG,WACD,OAAOX,EAAIiB,IAAI9E,eAMjB8E,EAAG,WACD,IAAMvuE,EAAIstE,EAAIkB,IAAM,GAAK,EAAI,EAC7B,OAAO7C,EAAUtB,SAASrqE,IAM5ByuE,EAAG,WACD,IAAMC,EAvbD,KAubKvD,EAAMwD,cAAsBnxE,EAA4B,GAAxB2tE,EAAMyD,gBAAsB9vE,EAAIqsE,EAAM0D,gBAChF,OAAOnF,EAAMtqD,KAAK6kB,OAAOyqC,EAAIlxE,EAAIsB,EAxb5B,MAwbwC,MAAQ,IAAM,IAM7DqmB,EAAG,WACD,OAAOmoD,EAAIkB,IAAM,IAAM,IAMzBA,EAAG,WACD,OAAOrD,EAAM2D,YAMfC,EAAG,WACD,OAAOrF,EAAM4D,EAAInoD,IAAK,IAMxBupD,EAAG,WACD,OAAOhF,EAAM4D,EAAIkB,IAAK,IAMxBhxE,EAAG,WACD,OAAOksE,EAAMyB,EAAMjsB,aAAc,IAMnCpgD,EAAG,WACD,OAAO4qE,EAAMyB,EAAM6D,aAAc,IAMnCC,EAAG,WACD,OAAOvF,EAAgC,IAA1ByB,EAAM+D,kBAA0B,IAU/CvG,EAAG,WAED,MADY,WAAWwG,KAAKhgC,OAAOg8B,IAAQ,IAC7B,8BAMhBiE,EAAG,WAGD,OAFU,IAAI9sC,KAAKgrC,EAAIY,IAAK,GAAQ5rC,KAAK+sC,IAAI/B,EAAIY,IAAK,IAC9C,IAAI5rC,KAAKgrC,EAAIY,IAAK,GAAQ5rC,KAAK+sC,IAAI/B,EAAIY,IAAK,GACrB,EAAI,GAMrCoB,EAAG,WACD,IAAMC,EAAMpE,EAAMhsB,oBAAqB8uB,EAAI7uD,KAAKuX,IAAI44C,GACpD,OAAQA,EAAM,EAAI,IAAM,KAAO7F,EAA2B,IAArBtqD,KAAK6kB,MAAMgqC,EAAI,IAAYA,EAAI,GAAI,IAM1EuB,EAAG,WACD,IAAMF,EAAIhC,EAAIgC,IACd,OAAWA,EAAEzC,OAAO,EAAG,GAAvB,IAA6ByC,EAAEzC,OAAO,EAAG,IAM3C4C,EAAG,WAED,OADatgC,OAAOg8B,GAAOzhB,MAAM6jB,EAAK1C,WAAa,KAAKhU,MAAMjuC,QAAQ2kD,EAAKzC,OAAQ,KACrE,OAMhB4E,EAAG,WACD,OAAoC,IAA5BvE,EAAMhsB,qBAUhB9/C,EAAG,WACD,MAAO,iBAAiBupB,QAAQ4kD,EAAWC,IAM7C3tE,EAAG,WACD,MAAO,mBAAmB8oB,QAAQ4kD,EAAWC,IAM/CkC,EAAG,WACD,OAAOxE,EAAMne,UAAY,KAAQ,IAG9BygB,EAASJ,EAAOA,IAEzBjuB,WAAY,SAAS+rB,EAAOC,GAC1B,IACI5tE,SAAGwC,SAAG42D,SAAKgZ,SAAKvC,SAAOd,EAAW,GAEtC,GAAqB,iBAAVpB,KACTA,EAJW3nE,KAIEu7C,UAAUosB,EAAOC,IAE5B,OAAO,KAGX,GAAID,aAAiB7oC,KAAM,CAEzB,IADAs0B,EAAMwU,EAAQ1tE,OACTF,EAAI,EAAGA,EAAIo5D,EAAKp5D,IAEL,OADd6vE,EAAQjC,EAAQxlC,OAAOpoC,KAVT,OAWO6vE,IAGjB7vE,EAAI,GAdM,OAcD4tE,EAAQxlC,OAAOpoC,EAAI,GAC9B+uE,GAAYc,GAGduC,EApBSpsE,KAoBE4pE,YAAYC,EAAOlC,GAC1B3tE,IAAOo5D,EAAM,GArBRpzD,KAqBmBonE,SAASv1D,KAAKg4D,IAAoC,MAA1BjC,EAAQxlC,OAAOpoC,EAAI,KACrEwC,EAAIqlC,SAASuqC,IAAQ,EACrBA,GAvBOpsE,KAuBKwmE,aAAaM,QAAQtqE,IAEnCusE,GAAYqD,IAEd,OAAOrD,EAET,MAAO,KAKIzrE,EAAA,mCC3mBf,SAAAo4B,GAaA,IAAMj6B,EAAU,SAASiE,EAAO2sE,GAM9BrsE,KAAKK,OAASX,EAOdM,KAAKssE,uBAAyBD,2FAYhC5wE,EAAQnB,UAAUiyE,YAAc,SAAShpE,GACvC,IAAMuD,GACJvD,OAGF,OAAKvD,KAAKssE,uBASHtsE,KAAKwsE,cAAc1lE,IAPtBpN,MACE+yE,UAAWlpE,GAEbmpE,OAAQ,MAgBdjxE,EAAQnB,UAAUqyE,aAAe,SAASC,EAAUC,EAAO1vE,GACzD,IAAM2J,GACJvD,IAAKqpE,EACLC,MAAOA,GAOT,OAJI1vE,IACF2J,EAAA,QAAoB3J,GAGf6C,KAAKwsE,cAAc1lE,IAS5BrL,EAAQnB,UAAUkyE,cAAgB,SAAS1lE,GAEzC,OAAO9G,KAAKK,OAAOghD,KAAKrhD,KAAKssE,uBAAwB52C,EAAE+xB,MAAM3gD,IAC3Dw6C,SAAUC,eAAgB,wCAW9B9lD,EAAQqxE,YAAc,KAQtBrxE,EAAQsxE,iBAAmB,MAE3BtxE,EAAQC,OAASoM,QAAQpM,OAAO,uBAEjBqM,QAAQ,kBAAmBtM,GAG3B6B,EAAA,qDChHf,IAAA0vE,EAAA3xE,EAAA,IAAA4xE,EAAA5xE,EAAA,IAcMI,EAAU,WAMduE,KAAKktE,8BAMLltE,KAAKmtE,6BASP1xE,EAAQ2xE,kBAAoB,MAO5B3xE,EAAQ4xE,eAAiB,GAiBzB5xE,EAAQnB,UAAUgzE,2BAA6B,SAAShuD,EAASiuD,EAAUC,GACzE,IAAMzD,EAAO/pE,KAEb,gBAIWmrB,GACP,IAAM62B,EAAU72B,EAAI62B,QACdyrB,EAAatiD,EAAIsiD,WAEjBxgD,EAAawgD,EAAWC,UAAUzgD,WAElC0gD,EAAgBF,EAAWnzD,KAAK,GAAKmzD,EAAWG,WAChDC,EAAiBJ,EAAWnzD,KAAK,GAAKmzD,EAAWG,WAEjDxtD,GAAUutD,EAAgB,EAAGE,EAAiB,GAE9CvzD,EAAOgF,IACPkwC,EAASl1C,EAAK,GAAK0yD,EAAA,EACnBjzD,EAAQO,EAAK,GAAK0yD,EAAA,EAClBntC,EAAQ0tC,EAASE,GAEjBK,EAAMryE,EAAQ4xE,eACdU,EAAMtyE,EAAQ2xE,kBAEdY,EACEj0D,EAAQ+zD,EAAOC,EAAOluC,EAAQ5S,EAAc,EACpD88C,EAAKmD,8BACG5yD,EAAK,GAAKwzD,EAAOC,EAAOluC,EAAS,EAEzC,IAAMouC,EACEze,EAASse,EAAOC,EAAOluC,EAAQ5S,EAAc,EAcrD,GAbA88C,EAAKoD,4BACG7yD,EAAK,GAAKwzD,EAAOC,EAAOluC,EAAS,EAGzCmiB,EAAQksB,YACRlsB,EAAQmsB,OAAO,EAAG,GAClBnsB,EAAQosB,OAAOT,EAAe,GAC9B3rB,EAAQosB,OAAOT,EAAeE,GAC9B7rB,EAAQosB,OAAO,EAAGP,GAClB7rB,EAAQosB,OAAO,EAAG,GAClBpsB,EAAQqsB,YAGHb,EAGE,CACL,IAAM5uD,EAAWquD,EAAA,EAAiBO,KAClCzD,EAAKuE,2BAA2BtsB,EAAS5hC,EAAQ4tD,EAC/CC,EAAkBrvD,QALpBmrD,EAAKwE,eAAevsB,EAAS5hC,EAAQ4tD,EACnCC,GAQJjsB,EAAQwsB,UAAY,sBACpBxsB,EAAQtnC,SAadjf,EAAQnB,UAAUi0E,eAAiB,SAASvsB,EAAS5hC,EACnD4tD,EAAiBC,GACjB,IAAMQ,EAAOruD,EAAO,GAAK4tD,EACnBU,EAAOtuD,EAAO,GAAK6tD,EACnBU,EAAOvuD,EAAO,GAAK4tD,EACnBY,EAAOxuD,EAAO,GAAK6tD,EAEzBjsB,EAAQmsB,OAAOM,EAAMC,GACrB1sB,EAAQosB,OAAOK,EAAMG,GACrB5sB,EAAQosB,OAAOO,EAAMC,GACrB5sB,EAAQosB,OAAOO,EAAMD,GACrB1sB,EAAQosB,OAAOK,EAAMC,GACrB1sB,EAAQqsB,aAYV5yE,EAAQnB,UAAUg0E,2BAA6B,SAAStsB,EAAS5hC,EAC/D4tD,EAAiBC,EAAkBrvD,GAEnC,IAAMiwD,EAAWjzD,KAAKoyC,KAAKpyC,KAAK0X,IAAI06C,EAAiB,GACjDpyD,KAAK0X,IAAI26C,EAAkB,IAEzBa,EAAQlzD,KAAKmzD,KAAKd,EAAmBD,GAAmBpvD,EAExDowD,EAAQpzD,KAAKmzD,KAAKf,EAAkBC,GAAoBrvD,EAExDqwD,EAAK7uD,EAAO,GAAKxE,KAAKC,IAAIizD,GAASD,EACnCK,EAAK9uD,EAAO,GAAKxE,KAAKG,IAAI+yD,GAASD,EACnCM,EAAK/uD,EAAO,GAAKxE,KAAKG,IAAIizD,GAASH,EACnCO,EAAKhvD,EAAO,GAAKxE,KAAKC,IAAImzD,GAASH,EACnCQ,EAAKjvD,EAAO,GAAKxE,KAAKC,IAAIizD,GAASD,EACnCS,EAAKlvD,EAAO,GAAKxE,KAAKG,IAAI+yD,GAASD,EACnCU,EAAKnvD,EAAO,GAAKxE,KAAKG,IAAIizD,GAASH,EACnCW,EAAKpvD,EAAO,GAAKxE,KAAKC,IAAImzD,GAASH,EAEzC7sB,EAAQmsB,OAAOc,EAAIC,GACnBltB,EAAQosB,OAAOe,EAAIC,GACnBptB,EAAQosB,OAAOiB,EAAIC,GACnBttB,EAAQosB,OAAOmB,EAAIC,GACnBxtB,EAAQosB,OAAOa,EAAIC,GACnBltB,EAAQqsB,aAkBV5yE,EAAQnB,UAAUm1E,gBAAkB,SAClCC,EAASC,EAAeC,EAAcC,GAatC,IAXA,IAAMC,EAAWJ,EAAQ,GAAKC,EACxBI,EAAYL,EAAQ,GAAKC,EAEzBK,EAAaF,EAAWr0E,EAAQ2xE,kBAClC3xE,EAAQ4xE,eAAiBuC,EAAa,GACpCK,EAAcF,EAAYt0E,EAAQ2xE,kBACpC3xE,EAAQ4xE,eAAiBuC,EAAa,GAEpC/vC,EAAQjkB,KAAKqsD,IAAI+H,EAAYC,GAE/BC,GAAW,EACNl2E,EAAI,EAAGmH,EAAK0uE,EAAe31E,OAAQF,EAAImH,IAAMnH,EAChD6lC,EAAQgwC,EAAe71E,KACzBk2E,EAAUL,EAAe71E,IAI7B,OAAOk2E,GAYTz0E,EAAQnB,UAAU61E,qBAAuB,SACvCT,EAASE,EAAcQ,GAEvB,IAAMC,EACF50E,EAAQ4xE,eAAiB5xE,EAAQ2xE,kBAE/BkD,EAAeV,EAAa,GAAKQ,GAClCC,EAAeX,EAAQ,IACtBa,EAAeX,EAAa,GAAKQ,GAClCC,EAAeX,EAAQ,IAI5B,OAF0B9zD,KAAK40D,IAAIF,EAAaC,IAWlD90E,EAAQnB,UAAUm2E,oBAAsB,SAAS5wD,GAC/C,OAAQA,EAAU,GAAK7f,KAAKktE,8BAC1BrtD,EAAU,GAAK7f,KAAKmtE,8BASxB1xE,EAAQnB,UAAUo2E,qBAAuB,SAAS7wD,GAChD,OAAQA,EAAU,GAAK7f,KAAKktE,8BAC1BrtD,EAAU,GAAK7f,KAAKmtE,8BASxB1xE,EAAQnB,UAAUq2E,gBAAkB,SAAS9wD,GAC3C,OAAQA,EAAU,GAAK7f,KAAKktE,8BAC1BrtD,EAAU,GAAK7f,KAAKmtE,8BASxB1xE,EAAQnB,UAAUs2E,iBAAmB,SAAS/wD,GAC5C,OAAQA,EAAU,GAAK7f,KAAKktE,8BAC1BrtD,EAAU,GAAK7f,KAAKmtE,+BAMxB1xE,EAAQC,OAASoM,QAAQpM,OAAO,sBACjBqM,QAAQ,iBAAkBtM,GAG1B6B,EAAA,iDCtSf,IAAAuzE,EAAAx1E,EAAA,IAAAy1E,EAAAz1E,EAAA,KAAA01E,EAAA11E,EAAA,KAAA21E,EAAA31E,EAAA,KAWM41E,GAAe,SACVF,EAAA,EACT,2BACA,2BACA,SACA,cACA,cACA,gBACA,0CACA,WACA,YACA3pE,KAAK,KAGP4pE,EAAA,EAAME,KAAK,aAAcD,GACzBH,EAAA,EAAqBE,EAAA,GACrBH,EAAA,EAAW,cAAcM,WAJA,KAAQ,IAAO,IAAQ,OASjC7zE,EAAA,EAHC,2CC7BhB,IAAA6B,EAAA9D,EAAA,GAAA+1E,EAAA/1E,EAAA,IAAAgE,EAAAhE,EAAA,GAAAg2E,EAAAh2E,EAAA,IAAAi2E,EAAAj2E,EAAA,KAsBMI,EAAU,SAAS+R,EAAQ1N,GAA+E,IAA/DkI,EAA+DmH,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,MAK9G,GAHAiiE,EAAA,EAAuB52E,KAAKwF,KAA0DgI,QAG1D9H,IAAxB8H,EAAQ6pB,YACV7xB,KAAK6xB,YAAc7pB,EAAQ6pB,gBACtB,CACL7xB,KAAK6xB,YAAcM,SAASC,cAAc,QAC1CpyB,KAAK6xB,YAAYQ,YAAcvyB,EAAewF,UAAU,uCACxD,IAAMisE,EAAKp/C,SAASC,cAAc,MAClCm/C,EAAGl/C,YAAcvyB,EAAewF,UAAU,+CAC1CtF,KAAK6xB,YAAYkC,YAAYw9C,GAO/BvxE,KAAKwN,OAASA,GAIhBnO,EAAA,EAAgB5D,EAAS21E,EAAA,GAMzB31E,EAAQnB,UAAUo4B,sBAAwB,SAAS3Z,EAAOyM,GACxD,OAAO,IAAI8rD,EAAA,GACTj0E,KAA2C,aAC3CmoB,OAAQA,EACRzM,MAAOA,KAQXtd,EAAQnB,UAAUk6B,cAAgB,SAASjyB,GACzC,IAAM8Z,EAAOld,EAAA,EAAYisB,iBAAiBprB,KAAK4xB,cAActV,cAAe+0D,EAAA,GACtEG,EAAOxxE,KAAKo0B,SAAS3U,UAAUgyB,gBACrCtyC,EAAA,EAAYmE,OAAOkuE,GAGnBjvE,EAFe6uE,EAAA,EAAuB71D,mBAAmBc,EAAMm1D,EAAMxxE,KAAK+xB,UAAW/xB,KAAKwN,QAC5E6O,EAAKX,sBAKNpe,EAAA,kCCzEf,IAAA6B,EAAA9D,EAAA,GAAA+1E,EAAA/1E,EAAA,IAAAgE,EAAAhE,EAAA,GAAAo2E,EAAAp2E,EAAA,IAAAi2E,EAAAj2E,EAAA,KAsBMI,EAAU,SAAS+R,EAAQ1N,GAA8B,IAAdkI,EAAcmH,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,GAAAA,UAAA,MAU7D,GARAiiE,EAAA,EAAuB52E,KAAKwF,KAA0DgI,GAOtFhI,KAAK6xB,iBACuB3xB,IAAxB8H,EAAQ6pB,YACV7xB,KAAK6xB,YAAc7pB,EAAQ6pB,gBACtB,CACL7xB,KAAK6xB,YAAcM,SAASC,cAAc,QAC1CpyB,KAAK6xB,YAAYQ,YAAcvyB,EAAewF,UAAU,0CACxD,IAAMisE,EAAKp/C,SAASC,cAAc,MAClCm/C,EAAGl/C,YAAcvyB,EAAewF,UAAU,mDAC1CtF,KAAK6xB,YAAYkC,YAAYw9C,GAO/BvxE,KAAKwN,OAASA,GAIhBnO,EAAA,EAAgB5D,EAAS21E,EAAA,GAMzB31E,EAAQnB,UAAUo4B,sBAAwB,SAAS3Z,EAAOyM,GACxD,OAAO,IAAI8rD,EAAA,GACTj0E,KAA2C,UAC3CmoB,OAAQA,EACRzM,MAAOA,KAQXtd,EAAQnB,UAAUk6B,cAAgB,SAASjyB,GACzC,IAAM8Z,EAAOld,EAAA,EAAYisB,iBAAiBprB,KAAK4xB,cAActV,cAAem1D,EAAA,GACtED,EAAOxxE,KAAKo0B,SAAS3U,UAAUgyB,gBACrCtyC,EAAA,EAAYmE,OAAOkuE,GACnB,IAAMluC,EAAS8tC,EAAA,EAAuBpyD,iBAAiB3C,EAAMm1D,EAAMxxE,KAAK+xB,UAAW/xB,KAAKwN,QAEpFinB,EAAQ,KADUpY,EAAKU,iBAAiB,GAAG7iB,OAE3B,IAClBu6B,EAAQpY,EAAK4D,mBAAmBlD,kBAElCxa,EAAS+gC,EAAQ7O,IAIJn3B,EAAA,wGCrEf,IAAMo0E,EAAU5pE,QAAQpM,OAAO,qBAC7Bi2E,EAAA,EAAyBj2E,OAAOK,KAChC61E,EAAA,EAAwBl2E,OAAOK,KAC/B81E,EAAA,EAA0B91E,OA4B5B,SAAS+1E,EAA6Br6B,EAAUlqB,EAAQukD,GACtD,OAAOA,EAA6Br6B,EAAUlqB,GApBhDmkD,EAAQK,8BAAgC,SAACnoD,EAAS+oB,GAChD,IAAM4E,EAAc5E,EAAA,6BACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,sBAIJm6B,EAAQ36B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,qBAAsB57C,EAAQ,wEAuEnDq2E,EAAQx6B,YACNqtB,UACEyN,mBAAsB,wCACtBC,oBAAuB,yCACvBC,kBAAqB,uCACrBC,oBAAuB,0CAEzB3hD,WAAY,8BACZ+mB,YAAau6B,GAGfJ,EAAQn1E,MAAM,+BACZm1E,EAAQK,+BAEVL,EAAQhN,UAAU,oBAAqBgN,EAAQx6B,YAM/Cw6B,EAAQU,0BAAR,WAYE,SAAAzN,EAAYltB,EAAU33C,EAAgBuyE,EAA0BzrB,EAASvwB,gGAAkBpuB,CAAAjI,KAAA2kE,GAMzF3kE,KAAK4kE,UAAYntB,EAMjBz3C,KAAK4mD,QAAUA,EAMf5mD,KAAKF,eAAiBA,EAMtBE,KAAKsyE,0BAA4BD,EAMjCryE,KAAKuyE,cAAgBl8C,EAMrBr2B,KAAKgyE,mBAMLhyE,KAAKiyE,oBAMLjyE,KAAKkyE,kBAAoB,KAMzBlyE,KAAKmyE,oBAMLnyE,KAAKwyE,kBAAmB,EAMxBxyE,KAAKyyE,0BAA2B,EAMhCzyE,KAAK0yE,yBAA0B,EAM/B1yE,KAAK+D,OAAQ,EAQb/D,KAAK2yE,SAAW,GAMhB3yE,KAAK4yE,OAAS,GAQd5yE,KAAK6yE,UAAY,GAMjB7yE,KAAK8yE,UAAY,GAMjB9yE,KAAK+yE,cAAgB,GA5HzB,OAAApO,EAAA9nC,SAAA,qFAAA8nC,EAAArqE,UAkIEw/C,QAlIF,WAmII95C,KAAKgyE,oBAAiD,IAA5BhyE,KAAKgyE,mBAC/BhyE,KAAKiyE,qBAAmD,IAA7BjyE,KAAKiyE,oBAChCjyE,KAAKmyE,qBAAmD,IAA7BnyE,KAAKmyE,oBAC5BnyE,KAAKmyE,sBACPnyE,KAAKwyE,kBAAmB,IAvI9B7N,EAAArqE,UAkJE8sD,eAlJF,WAkJmB,IAAA/kD,EAAArC,KACTF,EAAiBE,KAAKF,eAEtBunD,EAASrnD,KAAK6yE,UACdvrB,EAAStnD,KAAK8yE,UACdvrB,EAAUvnD,KAAK+yE,cAEf5rE,KAYN,GAVe,KAAXkgD,GACFlgD,EAAO/M,KAAK0F,EAAewF,UAAU,kCAExB,KAAXgiD,GACFngD,EAAO/M,KAAK0F,EAAewF,UAAU,kCAEvB,KAAZiiD,GACFpgD,EAAO/M,KAAK0F,EAAewF,UAAU,2CAGnC6B,EAAOjN,OACT8F,KAAKgzE,UAAU7rE,QAgBf,GAbIkgD,IAAWC,GACbngD,EAAO/M,KAAK0F,EAAewF,UAAU,4CAEnCgiD,IAAWC,GACbpgD,EAAO/M,KAAK0F,EAAewF,UAAU,+BAGnCtF,KAAKkyE,oBACFlyE,KAAKkyE,kBAAkBe,gBAAgB5rB,IAC1ClgD,EAAO/M,KAAK0F,EAAewF,UAAUtF,KAAKkyE,kBAAkBgB,mBAI5D/rE,EAAOjN,OACT8F,KAAKgzE,UAAU7rE,OACV,CAEL,IAAMpD,EAAQjE,EAAewF,UAAU,2BACvCtF,KAAKsyE,0BAA0BlrB,eAAeC,EAAQC,EAAQC,GAAS5jD,KACrE,WACEtB,EAAKowE,0BAA2B,EAChCpwE,EAAK8wE,uBAEPnzE,KAAKgzE,UAAUh2E,KAAKgD,KAAM+D,MAhMpC4gE,EAAArqE,UAyMEytD,MAzMF,WA0MI,IAAMjoD,EAAiBE,KAAKF,eAEtBqH,KAON,GANsB,KAAlBnH,KAAK2yE,UACPxrE,EAAO/M,KAAK0F,EAAewF,UAAU,8BAEnB,KAAhBtF,KAAK4yE,QACPzrE,EAAO/M,KAAK0F,EAAewF,UAAU,8BAEnC6B,EAAOjN,OACT8F,KAAKgzE,UAAU7rE,OACV,CACL,IAAMpD,EAAQjE,EAAewF,UAAU,8CACvCtF,KAAKsyE,0BAA0BvqB,MAAM/nD,KAAK2yE,SAAU3yE,KAAK4yE,QAAQjvE,KAC/D3D,KAAKozE,YAAYp2E,KAAKgD,MACtBA,KAAKgzE,UAAUh2E,KAAKgD,KAAM+D,MAzNlC4gE,EAAArqE,UAiOE6tD,OAjOF,WAkOI,IACMpkD,EADiB/D,KAAKF,eACCwF,UAAU,sBACvCtF,KAAKsyE,0BAA0BnqB,SAASxkD,KACtC3D,KAAKozE,YAAYp2E,KAAKgD,MACtBA,KAAKgzE,UAAUh2E,KAAKgD,KAAM+D,KAtOhC4gE,EAAArqE,UA6OEiuD,cA7OF,WA8OI,IAAMzoD,EAAiBE,KAAKF,eAE5B,GAAKE,KAAK2yE,SAAV,CAKA,IAAM5uE,EAAQjE,EAAewF,UAAU,mDAKjC+tE,EAAyB,SAAStqB,GACtC/oD,KAAK0yE,yBAA0B,EAC/B1yE,KAAKozE,eACLp2E,KAAKgD,MAEPA,KAAKsyE,0BAA0B/pB,cAAcvoD,KAAK2yE,UAAUhvE,KAC1D0vE,EACArzE,KAAKgzE,UAAUh2E,KAAKgD,KAAM+D,SAhB1B/D,KAAKgzE,UAAUlzE,EAAewF,UAAU,8BAjP9Cq/D,EAAArqE,UA4QE64E,oBA5QF,WA6QInzE,KAAKozE,cACLpzE,KAAKwyE,kBAAmB,EACxBxyE,KAAK6yE,UAAY,GACjB7yE,KAAK8yE,UAAY,GACjB9yE,KAAK+yE,cAAgB,IAjRzBpO,EAAArqE,UAyREg5E,0BAzRF,WA0RI,OAA6C,IAArCtzE,KAAK4mD,QAAQiB,qBAAiC7nD,KAAKmyE,qBA1R/DxN,EAAArqE,UAiSE04E,UAjSF,SAiSY7rE,GACJnH,KAAK+D,OACP/D,KAAKozE,cAGPpzE,KAAK+D,OAAQ,EAEb,IAAMuhE,EAAYtlE,KAAK4kE,UAAUnoB,KAAK,6BAEjC5vC,MAAMC,QAAQ3F,KACjBA,GAAUA,IAGZA,EAAOnE,QAAQ,SAASe,GACtB/D,KAAKuyE,cAAc/4C,QACjB9V,IAAK3f,EACLsnB,OAAQi6C,EACRjoE,KAAMk2E,EAAA,EAAmBvpE,KAAK+Y,SAE/B/iB,OApTP2kE,EAAArqE,UA0TE84E,YA1TF,WA2TIpzE,KAAKuyE,cAAc7lD,QACnB1sB,KAAK+D,OAAQ,GA5TjB4gE,EAAA,GAgUA+M,EAAQlhD,WAAW,8BACjBkhD,EAAQU,2BAGK,IAAA1N,EAAA,EC/aA8O,EANC1rE,QAAQpM,OAAO,2BAC7BgpE,EAA2B3oE,KAC3B41E,EAAA,EAAyBj2E,OAAOK,mGC+C5B03E,EAAU,SAAS5zE,GAEvB6zE,EAAA,EAAal5E,KAAKwF,MAOlBA,KAAK2zE,YAML3zE,KAAKguC,iBAAmBnuC,+DAI1BqyC,EAAA,EAAgBuhC,EAASC,EAAA,GAUzBD,EAAQn5E,UAAU+B,IAAM,SAASuI,GAE/B,OADestC,EAAA,EAActtC,GAAKmd,aACjB/hB,KAAK2zE,SAAW3zE,KAAKguC,iBAAiBjnB,gBAAgBniB,EACrE6uE,EAAQG,2BAA2B1sD,YAAY1kB,KAAK,GAAK,MAY7DixE,EAAQn5E,UAAUoI,IAAM,SAASkC,EAAKnC,GACpC,IACMoxE,EAAS3hC,EAAA,EAActtC,GAAKmd,WAC5B+xD,EAAW9zE,KAAK3D,IAAIuI,GACZ,OAAVnC,IACFA,EAAMsnB,WAJO,KAKb/pB,KAAKguC,iBAAiBrkB,8BAA8BlnB,GALvC,MAQf,IAAMsxE,EAAU/zE,KAAKguC,iBAAiBjnB,gBAAgBniB,EAAK6uE,EAAQG,2BAElD,OAAbE,GACFhrC,EAAA,EAAYxlC,OAAOuwE,KAAU7zE,KAAK2zE,UACpB,OAAVlxE,EACFsxE,EAAQ7sD,YAAY8sD,MAAM,EAAGvxE,IAE7BsxE,EAAQ7sD,YAAY+sD,SAAS,UACtBj0E,KAAK2zE,SAASE,KAEJ,OAAVpxE,IACTsxE,EAAQ7sD,YAAY6d,SAAS,EAAGtiC,GAChCzC,KAAK2zE,SAASE,IAAU,GAG1B,IAAMrxD,EAAQ,IAAIiqC,EAAA,EAAgB,UAChCynB,QAASzxE,EACTqxE,SAAUA,IAIZ,OAFA9zE,KAAKuH,cAAcib,GAEZsxD,GAUTL,EAAQn5E,UAAU65E,kBAAoB,SAASvvE,GAE7C,OADestC,EAAA,EAActtC,GAAKmd,aACjB/hB,KAAK2zE,SAAW3zE,KAAKguC,iBAAiBjnB,gBAAgBniB,EACrE6uE,EAAQG,2BAA2B1sD,YAAY1kB,KAAK,GAAK,MAS7DixE,EAAQn5E,UAAU85E,kBAAoB,SAASxvE,EAAKnC,GAElDA,EAAM04B,WAAW,GACjB14B,EAAMkjB,YAAW,GACjBljB,EAAMsnB,WAHS,KAIf/pB,KAAKguC,iBAAiBrkB,8BAA8BlnB,GAJrC,KAKf,IAAMsxE,EAAU/zE,KAAKguC,iBAAiBjnB,gBAAgBniB,EAAK6uE,EAAQG,4BAGpD,IADDG,EAAQ7sD,YAAYC,WAAW3F,QAAQ/e,IAEnDsxE,EAAQ7sD,YAAY9sB,KAAKqI,IAS7BgxE,EAAQn5E,UAAU+rB,iBAAmB,SAASzhB,EAAKhC,GACjD,IAAMyxE,EAAcr0E,KAAK3D,IAAIuI,GAC7B,GAAIyvE,EAAa,CACf,IAAI/vE,GAAU+vE,GACVA,aAAuBhnC,EAAA,IAEzB/oC,EAAS+vE,EAAYntD,YAAYC,YAGnC7iB,EAAOtB,QAAQ,SAACP,GAEd,GADAqmC,EAAA,EAAY1d,iBAAiB3oB,EAAO6xE,EAAA,GAChC7xE,EAAO,CACT,IAAI8xE,GAAa,EACXC,KACN,IAAK,IAAM5jE,KAAOnO,EAAMpG,IAAI,cAAe,CACzC,IAAME,EAAQqG,EAAWgO,QACX1Q,IAAV3D,IACFi4E,EAAkB5jE,GAAOrU,EACzBg4E,GAAa,GAGjB,GAAIA,EAAY,CACd,IAAM/uD,EAAS/iB,EAAM+mB,YACjBhE,aAAkB5d,EAAA,GACpB4d,EAAOa,iBAAiBmuD,GACxBhvD,EAAOw2B,YACEx2B,aAAkBivD,EAAA,GAAmBjvD,aAAkBq0C,EAAA,KAChEr0C,EAAOC,aAAa+uD,GACpBhvD,EAAOw2B,kBAWnBy3B,EAAQ/3E,OAASoM,QAAQpM,OAAO,0BAC9By2C,EAAA,EAAgBz2C,OAAOK,QAEVgM,QAAQ,yBAA0B0rE,GAKjDA,EAAQG,0BAA4B,aAGrB,IAAAc,EAAA,SCvNTC,EAAU7sE,QAAQpM,OAAO,8BAC7Bk5E,EAAA,EAAel5E,OAAOK,KACtB24E,EAA0Bh5E,OAAOK,OA8BnC,SAAS84E,EAAsCp9B,EAAUlqB,EAAQsnD,GAC/D,OAAOA,EAAsCp9B,EAAUlqB,GA3BzDonD,EAAQp4E,MAAM,wCAMZ,SAACk7C,EAAUlqB,GACT,IAAMgqB,EAAchqB,EAAA,sCACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,gCAKNo9B,EAAQ59B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+B57C,EAAQ,iFAuC5Ds5E,EAAQz9B,YACN1mB,WAAY,+CACZ+zC,UACE3/D,IAAO,iCACPkwE,eAAkB,oCAClBC,OAAU,sCAEZx9B,YAAas9B,GAIfF,EAAQjQ,UAAU,6BAChBiQ,EAAQz9B,YAcVy9B,EAAQn9B,YAAc,SAASnqB,EAAQ2nD,EAAwB1+C,GAAW,IAAAj0B,EAAArC,KAMxEA,KAAK4E,IAML5E,KAAK80E,eAOL90E,KAAK+0E,OAML/0E,KAAKi1E,QAMLj1E,KAAKk1E,SAMLl1E,KAAKm1E,aAMLn1E,KAAK42B,WAAaN,EAMlBt2B,KAAKqnC,iBAELrnC,KAAKqnC,cAAcjtC,KAAKk1C,EAAA,EAAgBhZ,EAAW,SAAUt2B,KAAKo3B,oBAAqBp3B,OAMvFA,KAAKo1E,oBAAsBJ,EAE3Bh1E,KAAKqnC,cAAcjtC,KAAKk1C,EAAA,EAAgBtvC,KAAKo1E,oBAAqB,SAIhE,SAAC5yD,GACCngB,EAAK4yE,QAAUzyD,EAAMG,OAAOuxD,WAGhC7mD,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QAnElD20E,EAAQn9B,oEA0ERm9B,EAAQn9B,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKo3B,uBAQPu9C,EAAQn9B,YAAYl9C,UAAU88B,oBAAsB,WAAW,IAAArxB,EAAA/F,KAC7DA,KAAK42B,WAAWx0B,cAAcuB,KAAK,SAACW,GAGlC,GAFAyB,EAAKmvE,SAAW5wE,OAEYpE,IAAxB6F,EAAK+uE,eAA8B,CACrC,IAAMK,EAAe7wE,EAAOm4C,KAAK,SAAAh6C,GAAA,OAASA,EAAMpG,IAAI,WAAa0J,EAAK+uE,iBACtE,QAAqB50E,IAAjBi1E,EAA4B,CAC9BpvE,EAAKquE,kBAAkBe,GACvBpvE,EAAKovE,aAAeA,EAGpBpvE,EAAKmvE,SAAWnvE,EAAKmvE,SAASj4E,QAC9B,IAAMo4E,EAAWtvE,EAAKmvE,SAASI,UAAU,SAAA7yE,GAAA,OAASA,IAAUsD,EAAKovE,eACjEpvE,EAAKmvE,SAAS95E,OAAOi6E,EAAU,GAC/BtvE,EAAKmvE,SAAS96E,KAAK+6E,QAY3BR,EAAQn9B,YAAYl9C,UAAUi7E,qBAAuB,SAAS1lD,GAI5D,OAHIA,GACF7vB,KAAKm1E,aAAah6C,WAAWtL,GAExB7vB,KAAKm1E,aAAaxtD,cAQ3BgtD,EAAQn9B,YAAYl9C,UAAUk7E,SAAW,SAAS/yE,EAAOm1B,GACvD53B,KAAKi1E,QAAUxyE,EACfzC,KAAKo1E,oBAAoB1yE,IAAI1C,KAAK4E,IAAKnC,IAClCm1B,GAAc53B,KAAK+0E,QACtB/0E,KAAK+0E,UASTJ,EAAQn9B,YAAYl9C,UAAU85E,kBAAoB,SAAS3xE,GACzDzC,KAAKo1E,oBAAoBhB,kBAAkBp0E,KAAK4E,IAAKnC,IAMvDkyE,EAAQn9B,YAAYl9C,UAAUkgD,eAAiB,WAC7Cx6C,KAAKqnC,cAAcrkC,QAAQssC,EAAA,GAC3BtvC,KAAKqnC,cAAcntC,OAAS,GAI9By6E,EAAQnkD,WAAW,uCACjBmkD,EAAQn9B,aAGK,IAAAi+B,EAAA,0SC/Of,IAAMzZ,EAAOvgE,WAgBX,SAAAA,EAAYmE,EAAI81E,EAAuB35C,gGAAuBkgC,CAAAj8D,KAAAvE,GAQ5DuE,KAAK4uC,GAAKhvC,EAMVI,KAAK21E,uBAAyBD,EAM9B11E,KAAKm8B,uBAAyBJ,EAS9B/7B,KAAKi0C,YAMLj0C,KAAKk8D,OAnDH,OAAAzgE,EAAAohC,SAAA,sDAAAphC,EAAAnB,UAsEJy1B,cAtEI,SAsEUlK,GACZ,OACE7lB,KAAKm8B,uBAAuBpM,cAAclK,IAxE1CpqB,EAAAnB,UAiFJs7E,2BAjFI,SAiFuBjnE,GAAY,IAAAtM,EAAArC,KAE/B61E,EAAkC71E,KAAK4uC,GAAGhuC,QAqChD,OAjCAZ,KAAKm8B,uBAAuBggC,wBAC1BxtD,GACAhL,KAAK,SAAC4K,GAIN,IACMunE,GADOnnE,EAAWvL,SAAST,cACLozE,qBAC5B,GAAID,GAAkBA,EAAe57E,OAAQ,CAC3C,IAAMwK,KADqCi5B,EAAA,SAEhCrtB,IACLvN,EAAA,EAAiB+yE,EAAgBxlE,EAAUvU,OAC5CuU,EAAUjT,OAASuqC,EAAA,EAAwB1oC,QACzCoR,EAAUu4B,SAAYv4B,EAAUu4B,QAAQ3uC,QAC3CwK,EAAStK,KACPiI,EAAKszE,uBAAuBK,mBAC1BrnE,EAAY2B,EAAUvU,MACtB4H,KAAK,SAAC0B,GACN,IAAMwjC,EAAUxjC,EAAOT,IAAI,SAAAqxE,GAAA,OAAUA,EAAO15E,QAC5C+T,EAAUjT,KAAOuqC,EAAA,EAAwB1oC,OACzCoR,EAAUu4B,QAAUA,MAV5Bl8B,EAAwB4B,EAAxB3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAAohC,EAAAzwB,GAepC,OAAO7K,EAAKusC,GAAG5pC,IAAIN,GAAUf,KAC3BkyE,EAAgC7xE,QAAQ2K,IAG1CknE,EAAgC7xE,QAAQ2K,KAIrCknE,EAAgC/0E,SAxHrC+P,EAAApV,IAAAmV,IAAA,aAAAvU,IAAA,WA2DF,OACE2D,KAAKm8B,uBADP,eA3DE1gC,EAAOA,GAiIbugE,EAAQtgE,OAASoM,QAAQpM,OAAO,wBAC9Bw6E,EAAA,EAAqBx6E,OAAOK,KAC5Bo6E,EAAA,EAA6Bz6E,OAAOK,OAEtCigE,EAAQtgE,OAAOqM,QAAQ,uBAAwBi0D,GAGhC,IAAAoa,EAAA,+PC3If,IAoCeC,EApCF56E,YASX,SAAAA,EAAYuM,gGAASsuE,CAAAt2E,KAAAvE,GAAA,IAAA4G,mKAAA6F,CAAAlI,KAEnBu2E,EAAA/7E,KAAAwF,KAAMgI,IAFa,OAUnB3F,EAAKm0E,UAAYxuE,EAAQ5E,SAVNf,EATjB,gUAAAgM,CAAA5S,EAAA86E,GAAAE,EAAAh7E,IAAAmV,IAAA,WAAAvU,IAAA,WA8BF,OAAO2D,KAAKw2E,cA9BV/6E,EAAOA,CAAiB2yC,EAAA,GCA9B,IAAMsoC,EAAOj7E,WAaX,SAAAA,EAAYsgC,gGAAuB46C,CAAA32E,KAAAvE,GAQjCuE,KAAKm8B,uBAAyBJ,EArB5B,OAAAtgC,EAAAohC,SAAA,yBAAAphC,EAAAnB,UA6BJs8E,SA7BI,SA6BKjoE,GAE0B,eAA7BA,EAAWhF,eACbgF,EAAW/C,SAC6B,GAAxC+C,EAAWiB,mBAAmB1V,SAC7ByU,EAAWJ,YAGZvO,KAAKm8B,uBAAuBggC,wBAAwBxtD,IArCpDlT,EAAOA,GA2Cbi7E,EAAQh7E,OAASoM,QAAQpM,OAAO,2BAC9Bw6E,EAAA,EAAqBx6E,OAAOK,OAE9B26E,EAAQh7E,OAAOqM,QAAQ,gBAAiB2uE,GAGzB,IAAAG,EAAA,wECzBf,IAAMC,EAAOr7E,WA6BX,SAAAA,EAAYmE,EAAI0tB,EAAY8I,EAAUE,EAAW8oB,EAC/C41B,EAAwBl5C,EAAiBj8B,EAAiBw0D,EAC1DvwB,EAAaizC,gGACbC,CAAAh3E,KAAAvE,GAQAuE,KAAK4uC,GAAKhvC,EAMVI,KAAK0tB,WAAaJ,EAMlBttB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK42B,WAAaN,EAMlBt2B,KAAKu/C,gBAAkBH,EAMvBp/C,KAAKi3E,wBAA0BjC,EAM/Bh1E,KAAKk3E,iBAAmBp7C,EASxB97B,KAAKk8B,aAAeJ,EAAgB72B,WAMpCjF,KAAKguC,iBAAmBnuC,EAMxBG,KAAKs0D,gBAAkBD,EAMvBr0D,KAAK+jC,aAAeD,EAMpB9jC,KAAKm3E,eAAiBJ,EAWtB/2E,KAAKo3E,qBAOLp3E,KAAKkJ,YAQLlJ,KAAKq3E,4BAA8B,KASnCr3E,KAAKs3E,kBAQLt3E,KAAK48D,qBAAuB,KAI5BttB,EAAA,EACEtvC,KAAKi3E,wBACL,SACAj3E,KAAKu3E,iCACLv3E,MAEFsvC,EAAA,EAAgBtvC,KAAK42B,WAAY,SAAU52B,KAAKo3B,oBAAqBp3B,MAlKnE,OAAAvE,EAAAohC,SAAA,uKAAAphC,EAAAnB,UA2KJk9E,iBA3KI,SA2Ka5yE,GACf5E,KAAKk3E,iBAAiBtyE,IAAMA,GA5K1BnJ,EAAAnB,UAmLJm9E,cAnLI,SAmLU70E,GAAY,IAAAP,EAAArC,KACpBA,KAAKq3E,6BACPr3E,KAAKq3E,8BAGPr3E,KAAKkJ,YAActG,EAEnB5C,KAAKq3E,4BAA8Br3E,KAAK0tB,WAAWE,OACjD,kBAAMvrB,EAAK6G,aACXlJ,KAAK03E,wBAAwB16E,KAAKgD,OAClC,GAEFA,KAAK03E,2BA/LHj8E,EAAAnB,UAsMJo9E,wBAtMI,WAyMF,IAAMpzE,KACAy8C,KAGNp0C,EADoB3M,KAAKk8B,aAAa/U,WACtCva,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAsC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA3BoS,EAA2BzB,EACpC,GAAIyB,EAAWpG,wBACb,IAAK,IAAMqI,KAAOjC,EAAWpG,wBAC3B,GAAsD,OAAlDoG,EAAWpG,wBAAwBqI,GAAKrU,MAAgB,CAC1D,IAAMkG,EAAQzC,KAAK23E,oBAAoBhpE,GACvC,QAAazO,GAATuC,EACF,OAEF,IAAMojB,EAAKqsB,EAAA,EAAczvC,IACI,GAAzBs+C,EAASv/B,QAAQqE,KACnBvhB,EAAOlK,KAAKqI,GACZs+C,EAAS3mD,KAAKyrB,KAOxBvhB,EAAOtB,QAAQhD,KAAK43E,mBAAmB56E,KAAKgD,QA/N1CvE,EAAAnB,UAuOJ88B,oBAvOI,WAuOkB,IAAArxB,EAAA/F,KAEpBA,KAAK63E,oBACD73E,KAAK48D,sBACP58D,KAAK48D,uBAEP58D,KAAK83E,sBAGL93E,KAAK42B,WAAWhxB,sBAAsBjC,KAAK,SAACR,GAC1C,IAAM40E,EAAgBhyE,EAAK6wB,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GAE5D,IAAAoO,EAAoBpO,EAApBqO,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA4B,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAC1BsT,EAD0BJ,EACAnO,SAA1BwO,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAoC,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAzB0G,EAAyB+M,EAClC84B,EAAA,EAAYxlC,OAAOL,GACnB8C,EAAKiyE,kBAAkB/0E,EAAOA,EAAOE,OAKrC80E,EAAkBlyE,EAAK6wB,WAAWjxB,4BAA4BhC,KAClE,SAACu0E,GAEC,IAAAhoE,EAA8BgoE,EAA9B/nE,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAAgD,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MAAA,IAArC47E,EAAqC9nE,EAC9CtK,EAAKiyE,kBAAkB,KAAMG,EAAiBh1E,MAMpD4C,EAAK6oC,GAAG5pC,KAAK+yE,EAAeE,IAAkBt0E,KAAK,WACjDoC,EAAK62D,qBAAuB72D,EAAK2nB,WAAWovC,iBAC1C,WACE,GAAI/2D,EAAKw5C,gBAAgBzoB,SACvB,OAAO/wB,EAAKw5C,gBAAgBzoB,SAASx1B,UAGzCyE,EAAKqyE,qCAAqCp7E,KAA1C+I,SA5QJtK,EAAAnB,UAmSJ89E,qCAnSI,SAmSiC77E,GAAO,IAAAsK,EAAA7G,KAE1CA,KAAKg4C,SAAS,WAGZ,GAAKz7C,EAAL,CAcA,IATA,IAAM87E,KACA9nD,EAAU,SAAC+nD,EAAW9pD,GAExBA,EAAStsB,KACWZ,UAEpBg3E,EAAUl+E,KAAKo0B,IAGVx0B,EAAI,EAAGmH,EAAK5E,EAAMrC,OAAQF,EAAImH,EAAInH,IACzCuC,EAAMvC,GAAGs2B,mBAAmBC,EAAQvzB,KAAR6J,EAAmBwxE,IAIjD,IAAK,IAAIr+E,EAAI,EAAGmH,EAAKk3E,EAAan+E,OAAQF,EAAImH,EAAInH,IAAK,CACrD,IAAMu+E,EAAcF,EAAar+E,GACf6M,EAAK2xE,sBAAsBD,IAE3C1xE,EAAK4xE,oBAAoBF,GAK7B,IAAMtxE,EAAQJ,EAAKywE,eACnB,IAAK,IAAMzxD,KAAMhf,EAAKywE,eAAgB,CACpC,IAAM90E,EAAOyE,EAAM4e,GACdwyD,EAAaznC,SAASpuC,EAAKgsB,WAC9B3nB,EAAK6xE,yBAAyBl2E,QAxUlC/G,EAAAnB,UAmVJu9E,kBAnVI,WAuVF,IADA,IAAM76C,EAAch9B,KAAKk8B,aAAa/U,WAC7BntB,EAAIgjC,EAAY9iC,OAAS,EAAWF,GAAH,EAAYA,IAChDgG,KAAKo3E,kBAAkBp6C,EAAYhjC,GAAG6rB,KAIxC7lB,KAAKk8B,aAAa0T,OAAO5S,EAAYhjC,IAKzC2+E,EAAA,EAAY34E,KAAKo3E,oBAjWf37E,EAAAnB,UAkXJ09E,kBAlXI,SAkXcvyC,EAAiBvjC,EAAMiB,GAEvC,IAAM7B,EAAWY,EAAKZ,SAKtB,GAAIA,EACF,KAAAiQ,EAAoBjQ,EAApBkQ,EAAA3E,MAAAC,QAAAyE,GAAAonD,EAAA,MAAApnD,EAAAC,EAAAD,IAAAvE,OAAAC,cAA8B,KAAAyE,EAAA,GAAAF,EAAA,IAAAmnD,GAAApnD,EAAArX,OAAA,MAAAwX,EAAAH,EAAAonD,SAAA,KAAAA,EAAApnD,EAAApE,QAAAC,KAAA,MAAAsE,EAAAinD,EAAAp8D,MAAA,IAAnB0G,EAAmByO,EAC5Bo3B,EAAA,EAAYxlC,OAAOL,GACnBjD,KAAKg4E,kBAAkBvyC,EAAiBxiC,EAAOE,QAHnD,CASA,IAAMC,EAA4ClB,EAG5C2jB,EAAKqsB,EAAA,EAAc9uC,GACzB,IAAIpD,KAAKo3E,kBAAkBvxD,GAA3B,CAKA,IAAM+yD,EAAOx1E,EAAST,SAChBoH,EAAU3G,EAAS/F,KACrBiJ,SACAG,SACAgD,SACAvF,SACAqI,SACAE,SACAlD,SACAuB,SAEJ,GAAIf,IAAY6qE,EAAA,EAAentE,SAASG,KAAM,CAE5C,IAAMvE,EAAsDD,EAG5DmJ,EAAYlJ,EAAaZ,MACzBgK,EAAUpJ,EAAaE,IACvB+C,EAAgBsyE,EAAKtyE,cACrBG,EAAgBmyE,EAAKnyE,cAGrB,IAAMnC,EAASs0E,EAAKC,aAAeD,EAAKE,UACpCx0E,IACFmF,EAAYnF,EAAOyT,MAAM,KAAKnT,IAAI,SAACnC,GACjC,OACE6D,cAAeA,EACfG,cAAeA,EACf1K,KAAM0G,EACNiK,WAAW,MAMbksE,EAAK10E,WAAaf,EAAWy1E,EAAK10E,aACpCA,EAAYf,EAAWy1E,EAAK10E,YAE9BqF,EAAelG,EAAae,eACvB,GAAI2F,IAAY6qE,EAAA,EAAentE,SAASI,IAAK,CAElD,IAAM5D,EAAoDb,EAG1DkD,EAAgBrC,EAAYsC,kBAC5BE,EAAgBxC,EAAYyC,kBAG5B+C,EAAYxF,EAAYs5D,YAAY34D,IAAI,SAACm0E,GACvC,OACEzyE,cAAeyyE,EAAWxyE,kBAC1BE,cAAesyE,EAAWryE,kBAC1B3K,KAAMg9E,EAAWh9E,KACjB2Q,UAAWqsE,EAAWrsE,aAK1B,IAAM8wD,GAAkB/3B,GAAmBA,EAAgB9L,MACzD11B,EAAYC,UAAYuhC,EAAgBvhC,UAC1C4kC,EAAA,EAAYxlC,OAAOk6D,GAEnBj0D,GADArF,EAAYf,EAAWq6D,IACEp5D,UAGrBH,EAAY6M,KACdhG,EAAe7G,EAAY6M,KAClB20B,GAAmBA,EAAgB30B,OAC5ChG,EAAe26B,EAAgB30B,MAKnC,IAAMnH,EAAgBzF,EAAYA,EAAU7G,UAAO6C,EAC7CiM,EAAkBjI,EAAYA,EAAU80E,kBAAe94E,EACvD2L,EAAS3H,GAAaA,EAAUu5D,WACpCv5D,EAAUw5D,YAASx9D,EACfmM,EAASnI,EAAYA,EAAUX,SAAMrD,EAEvCuL,EAAkB2iC,EAAA,EAAkB1iC,gBAAgBC,KAEpDhC,IAAkBykC,EAAA,EAAkBxkC,WAAWmI,aACjDtG,EAAkB2iC,EAAA,EAAkB1iC,gBAAgBgC,MAItD,IAAMxD,IAAc0uE,EAAKxyE,eACnBoE,EAAoBouE,EAAKxyE,eAC7BwyE,EAAKxyE,eAAeu2B,eAAYz8B,EAC5BkK,EAAkBwuE,EAAKxyE,eAC3BwyE,EAAKxyE,eAAew3D,UAAO19D,EACvBoK,EAAoBsuE,EAAKxyE,eAC7BwyE,EAAKxyE,eAAe03D,YAAS59D,EAGzB0C,EAAa5C,KAAKkJ,YAClBb,EAAmBnG,EAAKU,YAAc6iC,EAAgB7iC,WACtD2F,EAA0BrG,EAAK+2E,mBAGjCruE,SACAI,SACJ,GAAIF,EAAc,CAChB,IAAMk7B,EAAahmC,KAAK+jC,aAAakC,WAAWn7B,GAA7B,OACf+B,MAAMC,QAAQk5B,IAChBp7B,EAAiBo7B,EAAW,GAC5Bh7B,EAAiBg7B,EAAW,IAE5Bp7B,EAAiBo7B,EAKrB,IAAM/8B,EAAW2vE,EAAK3vE,SAChBm3C,EAAsBw4B,EAAKM,yBAC3Bn9E,EAAOqH,EAASrH,KAChB2O,EAAoBkuE,EAAKO,cACzBvzD,GAA6B,IAAnBgzD,EAAKr/C,UAGrBv5B,KAAKo3E,kBAAkBvxD,GAAM,IAAIwwD,GAC/BptE,WACArG,aACAyF,mBACAE,0BACAnF,WACAyiB,KACAu6B,sBACA95C,gBACAG,gBACA1K,OACAwN,eACAE,YACAE,gBACAI,UACAG,YACAM,oBACAJ,kBACAE,oBACAI,oBACAE,iBACAE,eACAE,iBACA4a,UACAna,kBACAI,SACAM,kBACAE,SACAE,YACAE,eAhiBAhR,EAAAnB,UA4iBJm+E,oBA5iBI,SA4iBgBjqD,GAElB,IAAM3I,EAAKqsB,EAAA,EAAc1jB,EAAStsB,MAC5ByM,EAAa3O,KAAKo3E,kBAAkBvxD,GAC1CijB,EAAA,EAAYxlC,OAAOqL,EAAY,4BAC/B6f,EAASwB,cAAcrhB,GAEvB,IAAMwuD,EAAyBn9D,KAAK0tB,WAAWE,OAC7C,kBAAMY,EAASO,YACf/uB,KAAKo9D,2BAA2BpgE,KAAKgD,KAAMwuB,IAGvC4qD,EAA+Bp5E,KAAK0tB,WAAWE,OACnD,WACE,IAAMyrD,EAAwC,OAA3B1qE,EAAW9F,YACxBywE,EAAY3qE,EAAWiX,QAC7B,OAAOyzD,GAAcC,GAEvBt5E,KAAKu5E,mCAAmCv8E,KAAKgD,KAAM2O,IAIjD6qE,SACAC,SACAC,SACA/qE,EAAW7D,cACX6D,EAAW5E,UAAYqkC,EAAA,EAAkBpkC,KAAKnC,MAEhD2xE,EAAkCx5E,KAAK0tB,WAAWE,OAChD,kBAAMjf,EAAW/D,gBACjB5K,KAAK25E,iCAAiC38E,KAAKgD,KAAM2O,IAGd,UAAjCA,EAAW7D,aAAay0B,OAC1Bk6C,EAAkCz5E,KAAK0tB,WAAWE,OAChD,kBAAMjf,EAAW3D,gBACjBhL,KAAK25E,iCAAiC38E,KAAKgD,KAAM2O,KAIrD+qE,EAAW5wC,EAAA,EAAY1d,iBACrBwuD,EAAA,EAA6BjtD,SAAS6B,GACtCqrD,EAAA,IAIJ75E,KAAKs3E,eAAezxD,IAClBuzD,+BACAjc,yBACAqc,kCACAC,kCACAjrD,WACAkrD,YAGF15E,KAAKk8B,aAAa9hC,KAAKuU,GAEvB3O,KAAKm3E,eAAeP,SAASjoE,IArmB3BlT,EAAAnB,UAgnBJo+E,yBAhnBI,SAgnBqBl2E,GAGvB,IAAMmM,EAAanM,EAAKgsB,SAASuB,gBACjC+Y,EAAA,EAAYxlC,OAAOqL,EAAY,4BAC/B3O,KAAKk8B,aAAa0T,OAAOjhC,GAGzBnM,EAAKgsB,SAASwB,cAAc,MAC5BxtB,EAAK42E,+BACL52E,EAAK26D,yBACD36D,EAAKg3E,iCACPh3E,EAAKg3E,kCAEHh3E,EAAKi3E,iCACPj3E,EAAKi3E,yCAEAz5E,KAAKs3E,eAAeplC,EAAA,EAAc1vC,EAAKgsB,SAAStsB,QAjoBrDzG,EAAAnB,UA2oBJw9E,oBA3oBI,WA4oBF,IAAK,IAAMjyD,KAAM7lB,KAAKs3E,eACpBt3E,KAAK04E,yBAAyB14E,KAAKs3E,eAAezxD,KA7oBlDpqB,EAAAnB,UA6pBJ8iE,2BA7pBI,SA6pBuB5uC,EAAU5Y,GACnC,IAAMkkE,EAAiBtrD,EAASuB,gBAChC+Y,EAAA,EAAYxlC,OAAOw2E,EAAgB,4BACnC,IAAMl0D,EAAqB,OAAXhQ,EAChBkkE,EAAel0D,QAAUA,EAKzB,IAAMnjB,EAAQzC,KAAK23E,oBAAoBmC,QAC1B55E,GAATuC,GAGJzC,KAAK43E,mBAAmBn1E,IA1qBtBhH,EAAAnB,UAorBJk+E,sBAprBI,SAorBkBhqD,GACpB,OAAOxuB,KAAKs3E,eAAeplC,EAAA,EAAc1jB,EAAStsB,QAAU,MArrB1DzG,EAAAnB,UA8rBJq9E,oBA9rBI,SA8rBgBhpE,GAClBA,EAA6CA,EAC7C,IAAMkX,EAAKqsB,EAAA,EAAcvjC,EAAWvL,UAC9BZ,EAAOxC,KAAKs3E,eAAezxD,GACjC,QAAY3lB,GAARsC,EAAJ,CAGA,IAAMgsB,EAAWhsB,EAAKgsB,SACtB,OAAOorD,EAAA,EAA6BjtD,SAAS6B,KAtsB3C/yB,EAAAnB,UA+sBJs9E,mBA/sBI,SA+sBen1E,GAAO,IAAAs3E,EACxBjxC,EAAA,EAAYxlC,OACVb,aAAiBo3E,EAAA,GACjBp3E,aAAiBu3E,EAAA,GAGnB,IAAMx0D,EAAS/iB,EAAM+mB,YACrB,GACEhE,aAAkBq0C,EAAA,GAClBr0C,aAAkBivD,EAAA,EAFpB,CAMA,IAEMwF,EAFSz0D,EAAOiE,YACF,OACW1R,MAAM,KACrC+wB,EAAA,EAAYxlC,OAAO22E,EAAW//E,QAAU,GAKxC,IAHA,IACMy/D,KACFugB,GAAY,EACPlgF,EAAI,EAAGmH,EAAK84E,EAAW//E,OAAQF,EAAImH,EAAInH,IAAK,CACnD,IAAI0/D,EAAmB,KAGvBjB,EADoBz4D,KAAKk8B,aAAa/U,WACtCuxC,EAAA7rD,MAAAC,QAAA2rD,GAAAlB,EAAA,MAAAkB,EAAAC,EAAAD,IAAAzrD,OAAAC,cAAsC,KAAA2rD,EAAA,GAAAF,EAAA,IAAAnB,GAAAkB,EAAAv+D,OAAA,MAAA0+D,EAAAH,EAAAlB,SAAA,KAAAA,EAAAkB,EAAAtrD,QAAAC,KAAA,MAAAwrD,EAAArB,EAAAh7D,MAAA,IAA3BoS,EAA2BiqD,EAC9BuhB,EAAUn6E,KAAK23E,oBAAoBhpE,GACzC,QAAezO,GAAXi6E,IAGAjoC,EAAA,EAAcioC,IAAYjoC,EAAA,EAAczvC,IACxCw3E,EAAWjgF,KAAO2U,EAAW5S,MAAO,CAEtC,IAAM8pB,EAAKqsB,EAAA,EAAcvjC,EAAWvL,UAC9BZ,EAAOxC,KAAKs3E,eAAezxD,GACjCijB,EAAA,EAAYxlC,OAAOd,GACnB,IACMs2D,EADWt2D,EAAKgsB,SACI5pB,IAAI6a,UAAUgyB,gBAAgBylB,UAElD1sB,EAAe77B,EAAWiX,QAC9B5lB,KAAKs0D,gBAAgB/pB,oBACnB57B,WAAYA,EACZmqD,SAAUA,EACV1uB,eAAe,IAEjB,KACEI,IACFkvB,MAAuBlvB,EAAvB,IACA0vC,GAAY,IAKlBvgB,EAAkBv/D,KAAKs/D,GAGzBl0C,EAAOC,eAAPs0D,MAAA,OACiBG,EAAYvgB,EAAkBvyD,KAAK,IAAM,KAD1D2yE,MAvwBEt+E,EAAAnB,UAwxBJi/E,mCAxxBI,SAwxB+B5qE,EAAYpS,GAK7C,IAA6B,IAAzBoS,EAAW5F,WACX4F,EAAW5E,UAAYqkC,EAAA,EAAkBpkC,KAAKnC,IADlD,CAMA,IAAMpF,EAAQzC,KAAK23E,oBAAoBhpE,QAC1BzO,GAATuC,GAGJzC,KAAK43E,mBAAmBn1E,KAvyBtBhH,EAAAnB,UAozBJq/E,iCApzBI,SAozB6BhrE,GAE/B,IAAMkX,EAAKqsB,EAAA,EAAcvjC,EAAWvL,UAC9BZ,EAAOxC,KAAKs3E,eAAezxD,GACjCijB,EAAA,EAAYxlC,OAAOd,GACnB,IAAMk3E,EAAW5wC,EAAA,EAAYxlC,OAAOd,EAAKk3E,UACnC9f,EAAY9wB,EAAA,EAAY1d,iBAC5BsuD,EAASlwD,YACTqwC,EAAA,GAGI/uD,EAAeg+B,EAAA,EAAYxlC,OAAOqL,EAAW7D,cAC/Cm6B,SACEl0B,EAAQpC,EAAW2C,eACrBP,IACFk0B,EAAYjlC,KAAK+jC,aAAa3E,mBAAmBt0B,EAAciG,IAIlD6oD,EAAUnwC,YACA,OACAwb,GAMzBjlC,KAAKguC,iBAAiBhkB,oBACpB0vD,EACA9f,EAAUnwC,YAAV,OACAwb,IAl1BAxpC,EAAAnB,UAi2BJi9E,iCAj2BI,SAi2B6BpsD,GAE/B,IAAMivD,EAA0BjvD,EAAIxI,OAAOmxD,SACrCuG,EAAyBlvD,EAAIxI,OAAOuxD,QACpCjtE,EAAQjH,KAAKo3E,kBAGnB,GAAIgD,EAAyB,CAC3B,IAAMv3E,EAAMu3E,EAAwB/9E,IAAI,kBACxC,GAAIwQ,MAAMC,QAAQjK,GAChB,KAAAw0D,EAAiBx0D,EAAjBy0D,EAAAzqD,MAAAC,QAAAuqD,GAAA4B,EAAA,MAAA5B,EAAAC,EAAAD,IAAArqD,OAAAC,cAAsB,KAAAuqD,EAAA,GAAAF,EAAA,IAAA2B,GAAA5B,EAAAn9D,OAAA,MAAAs9D,EAAAH,EAAA4B,SAAA,KAAAA,EAAA5B,EAAAlqD,QAAAC,KAAA,MAAAoqD,EAAAyB,EAAA18D,MAAA,IACdoS,EAAa1H,EADCuwD,GAEhB7oD,IACFA,EAAWiX,SAAU,EACrB5lB,KAAKk8B,aAAa0T,OAAOjhC,MAOjC,GAAI0rE,EAAwB,CAC1B,IAAMx3E,EAAMw3E,EAAuBh+E,IAAI,kBACvC,GAAIwQ,MAAMC,QAAQjK,GAChB,KAAAk2D,EAAiBl2D,EAAjBm2D,EAAAnsD,MAAAC,QAAAisD,GAAAS,EAAA,MAAAT,EAAAC,EAAAD,IAAA/rD,OAAAC,cAAsB,KAAAisD,EAAA,GAAAF,EAAA,IAAAQ,GAAAT,EAAA7+D,OAAA,MAAAg/D,EAAAH,EAAAS,SAAA,KAAAA,EAAAT,EAAA5rD,QAAAC,KAAA,MAAA8rD,EAAAM,EAAAj9D,MAAA,IACdoS,EAAa1H,EADCiyD,GAEhBvqD,IACFA,EAAWiX,SAAU,EACrB5lB,KAAKk8B,aAAa9hC,KAAKuU,QA73B7BlT,EAAOA,GAy4Bbq7E,EAAQp7E,OAASoM,QAAQpM,OAAO,yBAC9Bm7E,EAAwBn7E,OAAOK,KAC/B69E,EAAA,EAA6Bl+E,OAAOK,KACpCu+E,EAAA,EAAwB5+E,OAAOK,KAC/B64E,EAAA,EAAel5E,OAAOK,KACtB2/D,EAAA,EAAqBhgE,OAAOK,KAC5Bs2C,EAAA,EAA0B32C,OAAOK,KACjC24E,EAA0Bh5E,OAAOK,KACjCo2C,EAAA,EAAmBz2C,OAAOK,KAC1BiwC,EAAA,EAAgBtwC,OAAOK,OAEzB+6E,EAAQp7E,OAAOqM,QAAQ,wBAAyB+uE,GAGjC,IAAAyD,EAAA,EC/5BAC,EATC1yE,QAAQpM,OAAO,uBAC7B++E,EAAA,EAAqC/+E,OAAOK,KAC5C2+E,EAAA,EAAwCh/E,OAAOK,KAC/Cq6E,EAAoB16E,OAAOK,KAC3Bw+E,EAAqB7+E,OAAOK,KAC5B86E,EAAwBn7E,OAAOK,4CCS3B4+E,WAAU,SAASn4C,EAAM1iC,EAAgB86E,GAM7C56E,KAAK2uD,KAAOnsB,EAMZxiC,KAAK02B,gBAAkB52B,EAMvBE,KAAK66E,aAAeD,EAEpBrH,EAAA,EAAmB/4E,KAAKwF,MAExB,IAAMslE,EAAYx9D,QAAQ8hB,QAAQ,uCAClC9hB,QAAQ8hB,QAAQuI,SAASy8B,MAAMC,OAAOyW,GAMtCtlE,KAAKulE,WAAaD,EAOlBtlE,KAAK86E,6HAIP5oC,EAAA,EAAgByoC,GAASpH,EAAA,GAUzBoH,GAAQrgF,UAAUgN,MAAQ,SAAS5K,GACjCsD,KAAK6iB,KAAKnmB,IAWZi+E,GAAQrgF,UAAU2hD,MAAQ,SAASv/C,GACdsD,KAAK8iB,kBAAkBpmB,GAC/BsG,QAAQhD,KAAK+6E,cAAe/6E,OAUzC26E,GAAQrgF,UAAUsoB,YAAc,SAAS/e,GAAS,IAAAxB,EAAArC,KAC1CF,EAAiBE,KAAK02B,gBACtBr5B,EAAOwG,EAAQxG,KACrByrC,EAAA,EAAYtrB,aAAangB,EAAM,uBAG/B,IAAM8wB,EAAMnuB,KAAKg7E,eAAen3E,GAChC,QAA4B3D,IAAxBF,KAAK86E,UAAU3sD,GAMnB,IAFsC,IAAlBtqB,EAAQo3E,MAEX,CAEf,IAAMA,EAAQj7E,KAAK66E,eACbtpC,EAAUvxC,KAAK2uD,KAAKjsB,YAAY7+B,EAAQ6f,KAC9Cu3D,EAAM78B,MACJuR,aAAa,EACbpe,QAASA,EACTrC,MAAO,WAIT+rC,EAAMvoC,MAAM9kB,OAAO,OAAQ,SAAChY,EAAQiY,GAC7BjY,GACHvT,EAAK04E,cAAcl3E,KAIvB7D,KAAK86E,UAAU3sD,GAAQ8sD,MAElB,CAEL,IAAMvV,GAAc,QAAS,OAAQ,qBACrC,OAAQroE,GACN,KAAKk2E,EAAA,EAAmBvpE,KAAK+Y,MAC3B2iD,EAAWtrE,KAAK,gBAChB,MACF,KAAKm5E,EAAA,EAAmBvpE,KAAKiZ,YAC3ByiD,EAAWtrE,KAAK,cAChB,MACF,KAAKm5E,EAAA,EAAmBvpE,KAAKmZ,QAC3BuiD,EAAWtrE,KAAK,iBAChB,MACF,KAAKm5E,EAAA,EAAmBvpE,KAAKqZ,QAC3BqiD,EAAWtrE,KAAK,iBAMpB,IAAMurE,EAAK79D,QAAQ8hB,QAAR,4BACmB87C,EAAWt+D,KAAK,KADnC,YAEL8zE,EAASpzE,QAAQ8hB,QAAR,wEAEX9pB,EAAewF,UAAU,SAFd,mEAIToe,EAAM5b,QAAQ8hB,QAAQ,YAAYg8C,KAAK/hE,EAAQ6f,KACrDiiD,EAAG9W,OAAOqsB,GAAQrsB,OAAOnrC,IAIrB7f,EAAQwnB,OACEvjB,QAAQ8hB,QAAQ/lB,EAAQwnB,QAExBrrB,KAAKulE,YAGT1W,OAAO8W,GACjBA,EAAGvX,SAAS,MAGZuX,EAAGhqC,GAAG,kBAAmB,WACvBt5B,EAAK04E,cAAcl3E,KAGrB7D,KAAK86E,UAAU3sD,GAAQw3C,IAU3BgV,GAAQrgF,UAAU0gF,eAAiB,SAASn3E,GAC1C,OAAUA,EAAQ6f,IAAlB,IAAyB7f,EAAQxG,MASnCs9E,GAAQrgF,UAAUygF,cAAgB,SAASl3E,GACzC,IAAMsqB,EAAMnuB,KAAKg7E,eAAen3E,GAC1B4lC,EAAMzpC,KAAK86E,UAAU3sD,QAGfjuB,IAARupC,IAKAA,aAAe0xC,GAAA,EAEb1xC,EAAIqlB,WACNrlB,EAAIslB,SAAQ,GAKVtlB,EAAIhP,SAAS,OACfgP,EAAIniC,MAAM,gBAKPtH,KAAK86E,UAAU3sD,MAOxBwsD,GAAQj/E,OAASoM,QAAQpM,OAAO,kBAC9By/E,GAAA,EAAiBz/E,OAAOK,QAGXgM,QAAQ,iBAAkB4yE,IAG1B,IAAAS,GAAA,aCxNTC,WAAUvzE,QAAQpM,OAAO,iBAC7B,aACAy2C,EAAA,EAAmBz2C,OAAOK,KAC1Bq/E,GAAsB1/E,OAAOK,KAC7Bu/E,GAAA,EAAoB5/E,OAAOK,QAqB7Bs/E,GAAQ7jC,YAAc,SAASC,EAAUpqB,EAAQmV,EAAMpM,EACrDt2B,EAAgB86E,EAAiBW,EAAgB1jC,EAAiBh4C,GAMlEG,KAAK4E,IAML5E,KAAKw7E,SAMLx7E,KAAKi7E,MAOLj7E,KAAKy7E,YAAa,EAOlBz7E,KAAK0jB,IAML1jB,KAAK07E,SAML17E,KAAK2uD,KAAOnsB,EAMZxiC,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK02B,gBAAkB52B,EAMvBE,KAAK+3C,SAAWN,EAMhBz3C,KAAK66E,aAAeD,EAMpB56E,KAAK27E,YAAcJ,EAMnBv7E,KAAK47E,aAAe/jC,EAMpB73C,KAAKguC,iBAAmBnuC,EAMxBG,KAAK67E,gBAAkB,MA7FzBR,GAAQ7jC,oJAoGR6jC,GAAQ7jC,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAK67E,gBAAkB77E,KAAKguC,iBAAiBjnB,gBAAgB/mB,KAAK4E,IAChEotC,GAAA,EAAQ8pC,qBACV97E,KAAK+7E,eAAe/7E,KAAK67E,kBAO3BR,GAAQ7jC,YAAYl9C,UAAU0hF,iBAAmB,SAAS7wD,GAAK,IAAA9oB,EAAArC,KAC7DA,KAAKg4C,SAAS,WACZ,IAAMv1C,EAAQ0oB,EAAIvB,QAClBkf,EAAA,EAAY1d,iBAAiB3oB,EAAOw5E,EAAA,GACpC55E,EAAK05E,eAAet5E,MASxB44E,GAAQ7jC,YAAYl9C,UAAU4hF,oBAAsB,SAAS/wD,GAC3D,IAAM1oB,EAAQ0oB,EAAIvB,QAClBkf,EAAA,EAAY1d,iBAAiB3oB,EAAOw5E,EAAA,GACpCj8E,KAAKm8E,iBAAiB15E,IAQxB44E,GAAQ7jC,YAAYl9C,UAAUyhF,eAAiB,SAASt5E,GAAO,IAAAsD,EAAA/F,KAEvDo8E,EAAWlqC,EAAA,EAAczvC,GAE/B,GAAIA,aAAiB4qC,EAAA,EAGnBrtC,KAAK47E,aAAat0C,eAChB80C,EACA9sC,EAAA,EACE7sC,EAAMykB,YACN,MACAlnB,KAAKg8E,iBACLh8E,OAGJA,KAAK47E,aAAat0C,eAChB80C,EACA9sC,EAAA,EACE7sC,EAAMykB,YACN,SACAlnB,KAAKk8E,oBACLl8E,OAKJyC,EAAMykB,YAAYlkB,QAAQ,SAACP,GACzBsD,EAAKg2E,eAAet5E,SAGjB,CAGL,IAAMqjC,EAAcrjC,EAAMpG,IAAI,eAC1BypC,GAAej5B,MAAMC,QAAQg5B,IAC/BA,EAAY9iC,QAAQ,SAAC6iC,GACnB9/B,EAAKs2E,uBAAuBx2C,OAWpCw1C,GAAQ7jC,YAAYl9C,UAAU6hF,iBAAmB,SAAS15E,GAAO,IAAAoE,EAAA7G,KAEzDo8E,EAAWlqC,EAAA,EAAczvC,GAE/B,GAAIA,aAAiB4qC,EAAA,EAGnBrtC,KAAK47E,aAAap0C,iBAAiB40C,GAGnC35E,EAAMykB,YAAYlkB,QAAQ,SAAAP,GAAA,OAASoE,EAAKs1E,iBAAiB15E,SAEpD,CAGL,IAAMqjC,EAAcrjC,EAAMpG,IAAI,eAC1BypC,GAAej5B,MAAMC,QAAQg5B,IAC/BA,EAAY9iC,QAAQ,SAAC6iC,GACnBh/B,EAAKy1E,wBAAwBz2C,OAQrCw1C,GAAQ7jC,YAAYl9C,UAAU8qE,WAAa,WACzCplE,KAAKm8E,iBAAiBn8E,KAAK67E,kBAQ7BR,GAAQ7jC,YAAYl9C,UAAU+hF,uBAAyB,SAAS34D,GAC9DA,EAAM1jB,KAAK02B,gBAAgBpxB,UAAUoe,GACjC1jB,KAAKw7E,UACHx7E,KAAK07E,MAAMl6D,QAAQkC,GAAO,GAC5B1jB,KAAK07E,MAAMthF,KAAKspB,GAElB1jB,KAAK0jB,IAAL,GAAc1jB,KAAK2uD,KAAKjsB,YAAY1iC,KAAK07E,MAAMt0E,KAAK,WACpDpH,KAAKy7E,YAAa,GAElBz7E,KAAK27E,YAAYr0E,OACf2zE,MAAOj7E,KAAKi7E,MACZv3D,IAAKA,EACL2H,OAAQrrB,KAAK+3C,SACb16C,KAAMk2E,EAAA,EAAmBvpE,KAAKqZ,WAUpCg4D,GAAQ7jC,YAAYl9C,UAAUgiF,wBAA0B,SAAS54D,GAC/DA,EAAM1jB,KAAK02B,gBAAgBpxB,UAAUoe,GACjC1jB,KAAKw7E,UACPx7E,KAAKy7E,YAAa,EAClBz7E,KAAK07E,MAAMxhF,OAAS,EACpB8F,KAAK0jB,IAAM,IAEX1jB,KAAK27E,YAAY1/B,OACfg/B,MAAOj7E,KAAKi7E,MACZv3D,IAAKA,EACL2H,OAAQrrB,KAAK+3C,SACb16C,KAAMk2E,EAAA,EAAmBvpE,KAAKqZ,WAuDpCg4D,GAAQnkC,YACN1mB,WAAY6qD,GAAQ7jC,YACpB+sB,UACE0W,MAAS,uBACTr2E,IAAO,oBACP42E,SAAY,0BACZC,WAAc,oCACd/3D,IAAO,+BAKX23D,GAAQ3W,UAAU,gBAAiB2W,GAAQnkC,YAG5B,IAAAqlC,GAAA,yPCvWf,IAAMC,GAAO/gF,WAqBX,SAAAA,EAAY6xB,GAAY,IAAAjrB,EAAArC,kGAAAy8E,CAAAz8E,KAAAvE,GAMtBuE,KAAK0tB,WAAaJ,EAQlBttB,KAAK08E,qBAAuB,KAM5B18E,KAAK28E,2BAOL38E,KAAK48E,iBAAmB,mBAMxB58E,KAAK8lD,kBAAmB,EAExB,IACM,iBAAkBhpD,QACpBA,OAAOqpD,aAAP,KAA8B,UACvBrpD,OAAOqpD,aAAP,MAEPnmD,KAAK8lD,kBAAmB,EAE1B,MAAOM,GACPtiD,QAAQC,MAAMqiD,GACdpmD,KAAK8lD,kBAAmB,EAO1B9lD,KAAK68E,UAEL78E,KAAK0tB,WAAWovC,iBACd,kBAAMz6D,EAAKy6E,OACX,WACEz6E,EAAK06E,sCAIL/8E,KAAK8lD,kBACP9lD,KAAKg9E,6BAlFL,OAAAvhF,EAAAohC,SAAA,cAAAphC,EAAAnB,UAqHJ0iF,2BArHI,WAsHF,GAAIlgF,OAAOqpD,aAAanmD,KAAK48E,kBAAmB,CAC9C,IAAME,EAAQG,KAAKC,MAAMpgF,OAAOqpD,aAAanmD,KAAK48E,mBAClD9zC,EAAA,EAAYvpB,YAAYu9D,GACxB98E,KAAK68E,OAASC,IAzHdrhF,EAAAnB,UAqIJ6iF,YArII,SAqIQphF,EAAM8pB,GAIhB,IAFA,IAAIrjB,SACA46E,GAAO,EACFpjF,EAAI,EAAGmH,EAAKnB,KAAK68E,OAAO3iF,OAAQF,EAAImH,EAAInH,IAE/C,IADAwI,EAAOxC,KAAK88E,MAAM9iF,IACTs8D,eAAiBzwC,GAAMrjB,EAAKzG,OAASA,EAAM,CAClDqhF,EAAMpjF,EACN,MAIJ,OAAOojF,GAjJL3hF,EAAAnB,UAwJJ8gD,KAxJI,SAwJC54C,GAGH,IAAM46E,EAAMp9E,KAAKm9E,YAAY36E,EAAKzG,KAAMyG,EAAK8zD,eAChC,IAAT8mB,EACFp9E,KAAK88E,MAAMM,GAAO56E,EAElBxC,KAAK88E,MAAM1iF,KAAKoI,GAIdxC,KAAK8lD,kBACP9lD,KAAKq9E,4BApKL5hF,EAAAnB,UA4KJs1C,OA5KI,SA4KGptC,GAGSO,EAAA,EAAe/C,KAAK88E,MAAOt6E,IAG5BxC,KAAK8lD,kBAChB9lD,KAAKq9E,4BAnLL5hF,EAAAnB,UA2LJ+iF,yBA3LI,WA4LFvgF,OAAOqpD,aAAanmD,KAAK48E,kBAAoBK,KAAKK,UAAUt9E,KAAK88E,QA5L/DrhF,EAAAnB,UAkMJyiF,kCAlMI,WAuMF,GAHA/8E,KAAK28E,wBAAwBziF,OAAS,EAGJ,OAA9B8F,KAAK08E,qBACP,KAAA/vE,EAAmB3M,KAAK88E,MAAxBlwE,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA+B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAApBiG,EAAoB0K,EACzB1K,EAAK8zD,eAAiBt2D,KAAK08E,sBAC7B18E,KAAK28E,wBAAwBviF,KAAKoI,MA1MtC+6E,GAAA9hF,IAAAmV,IAAA,yBAAAvU,IAAA,WA4FF,OAAO2D,KAAK28E,2BA5FV/rE,IAAA,sBAAAlO,IAAA,SAmGoBmjB,GACtB7lB,KAAK08E,qBAAuB72D,EAC5B7lB,KAAK+8E,uCArGHnsE,IAAA,QAAAvU,IAAA,WA6GF,OAAO2D,KAAK68E,WA7GVphF,EAAOA,GAmNb+gF,GAAQ9gF,OAASoM,QAAQpM,OAAO,sBAEhC8gF,GAAQ9gF,OAAOqM,QAAQ,kBAAmBy0E,IAS1CA,GAAQgB,KAAO,aAQfhB,GAAQgB,KAAKljF,UAAU4C,UAQvBs/E,GAAQgB,KAAKljF,UAAUmjF,YAQvBjB,GAAQgB,KAAKljF,UAAUg8D,aAQvBkmB,GAAQgB,KAAKljF,UAAUojF,cAQvBlB,GAAQgB,KAAKljF,UAAUyB,KAGR,IAAA4hF,GAAA,+NCtOf,IAAMC,GAAU91E,QAAQpM,OAAO,YAC7BmiF,GAAA,EAAkB9hF,KAClB2/D,EAAA,EAAqBhgE,OAAOK,KAC5B+hF,GAAA,EAAsBpiF,OAAOK,KAC7BgiF,GAAA,EAA4BhiF,KAC5BgwC,GAAA,EAAsBrwC,OAAOK,KAC7BiiF,GAAA,EAAwBtiF,OAAOK,OA0BjC,SAASkiF,GAAoB1wD,EAAQ0wD,GACnC,OAAOA,EAAoB1wD,GAvB7BqwD,GAAQ7mC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,4BAA6B57C,EAAQ,SAI1DuiF,GAAQrhF,MAAM,sBAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,oBACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,0EAiBNqmC,GAAQM,gBAAR,WAgBE,SAAAvZ,EAAY7kE,EAAgButB,EAAQ+I,EAAU+R,EAC5CksB,EAAgBvc,GAAqB,IAAAqmC,EAAAC,+FAAAC,CAAAr+E,KAAA2kE,GAQrC3kE,KAAKs+E,eAMLt+E,KAAK4E,IAOL5E,KAAK0oC,KAML1oC,KAAKu+E,UASLv+E,KAAK02B,gBAAkB52B,EAMvBE,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAKqoC,mBAAqBF,EAM1BnoC,KAAKs0D,gBAAkBD,EAMvBr0D,KAAKq4C,qBAAuBP,EAY5B93C,KAAKue,MAEL,IAAMigE,EAAe32C,GAAA,EAAap0B,aAC5BgrE,EAAsB52C,GAAA,EAAazzB,oBACnCsqE,EAAuB72C,GAAA,EAAal0B,qBAM1C3T,KAAK+S,YAALorE,MACGK,EAAa3qE,UAAW/T,EAAewF,UAAU,eADpD64E,EAEGK,EAAa1qE,cAAehU,EAAewF,UAAU,mBAFxD64E,EAGGK,EAAazqE,0BAA2BjU,EAAewF,UACtD,+BAJJ64E,EAKGK,EAAaxqE,aAAclU,EAAewF,UAAU,kBALvD64E,EAMGK,EAAavqE,yBAA0BnU,EAAewF,UACrD,8BAPJ64E,EAQGK,EAAarqE,cAAerU,EAAewF,UAAU,mBARxD64E,EASGK,EAAatqE,MAAOpU,EAAewF,UAAU,YAThD64E,EAUGM,EAAoBpqE,UAAWvU,EAAewF,UAAU,YAV3D64E,EAWGM,EAAoBnqE,YAAaxU,EAAewF,UAAU,cAX7D64E,EAYGM,EAAoBlqE,QAASzU,EAAewF,UAAU,gBAZzD64E,EAaGO,EAAqBlqE,QAAS1U,EAAewF,UAAU,aAb1D64E,EAcGO,EAAqB9qE,QAAS9T,EAAewF,UAAU,UAd1D64E,EAeGO,EAAqBjqE,MAAO3U,EAAewF,UAAU,WAfxD64E,EAgBGO,EAAqBhqE,QAAS5U,EAAewF,UAAU,eAhB1D64E,GAuBAn+E,KAAK2+E,uBAALP,MACGI,EAAa3qE,UAAW,IAD3BuqE,EAEGI,EAAa1qE,cAAe,IAF/BsqE,EAGGI,EAAazqE,0BAA2B,KAH3CqqE,EAIGI,EAAaxqE,aAAc,IAJ9BoqE,EAKGI,EAAavqE,yBAA0B,KAL1CmqE,EAMGI,EAAarqE,cAAe,KAN/BiqE,EAOGI,EAAatqE,MAAO,IAPvBkqE,EAQGM,EAAqBlqE,QAAS,KARjC4pE,EASGM,EAAqBjqE,MAAO,KAT/B2pE,EAUGM,EAAqBhqE,QAAS,IAVjC0pE,GAmBAp+E,KAAK4+E,eACHC,OAAQ,aACRj1B,SAAU,KACVF,SAAU,KACVM,YAAahqD,KAAK8+E,cAClBh1B,YAAa9pD,KAAK++E,qBAClBx/C,KAAM,QACNy/C,UAAW,EAAG,EAAG,EAAG,IAStBh/E,KAAKi/E,eACHJ,OAAQ,aACRj1B,SAAU,KACVF,SAAU,KACVM,YAAahqD,KAAK8+E,cAClBh1B,YAAa9pD,KAAK8+E,cAClBv/C,KAAM,QACNy/C,UAAW,EAAG,EAAG,EAAG,IAOtBh/E,KAAKk/E,cAMLl/E,KAAKm/E,gBASLn/E,KAAKo/E,YAAa,EAMlBp/E,KAAKq/E,iBAAmB,IAAIC,GAAA,EAAqBt/E,KAAM,cAMvDA,KAAKu/E,cAAgB,IAAIpzC,GAAA,EAMzBnsC,KAAKm5C,MAAQ,KAMbn5C,KAAKw/E,iBAAmB,IAAIrzC,GAAA,EAM5BnsC,KAAKg5C,cAAgB,IAAI7M,GAAA,EAMzBnsC,KAAKi5C,QAAU,IAAIwmC,GAAA,GACjB9hE,SAAU3d,KAAKw/E,iBACfzmE,MAAOovB,EAAkBvvB,gBAAe,KAE1C5Y,KAAKg5C,cAAc5+C,KAAK4F,KAAKi5C,SAM7Bj5C,KAAKu5C,QAAU,IAAImmC,GAAA,GACjB/hE,SAAU3d,KAAKw/E,iBACfzmE,MAAO,IAAI4mE,GAAA,GACTvlE,KAAM,IAAI0tB,GAAA,GACR1tB,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIklE,GAAA,GACRhmE,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKu5C,SAM7Bv5C,KAAKs5C,WAAa,IAAIumC,GAAA,GACpBliE,SAAU3d,KAAKw/E,iBACfzmE,MAAO,IAAI4mE,GAAA,GACTvlE,KAAM,IAAI0tB,GAAA,GACR1tB,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIklE,GAAA,GACRhmE,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKs5C,YAM7Bt5C,KAAKqnC,iBAELrnC,KAAKs6C,0BAMLt6C,KAAKk5C,mBAAqB,IAAIomC,GAAA,EAC5Bt/E,KAAKi5C,QACL,UAOFj5C,KAAKw5C,mBAAqB,IAAI8lC,GAAA,EAC5Bt/E,KAAKu5C,QACL,UAOFv5C,KAAKy5C,sBAAwB,IAAI6lC,GAAA,EAC/Bt/E,KAAKs5C,WACL,UAQFt5C,KAAK05C,SAAW,KAtTpB,OAAAirB,EAAA9nC,SAAA,iGAAA8nC,EAAArqE,UA8TEw/C,QA9TF,WA8TY,IAAAz3C,EAAArC,KACRA,KAAKue,MAAQve,KAAKs0D,gBAAgBnrB,UAAUnpC,KAAK0oC,MAEjD1oC,KAAKk/E,cAAgB,IAAII,GAAA,EAAqBt/E,KAAK0oC,KAAM,UAEzD1oC,KAAKq4C,qBAAqBjS,aACxBpmC,KAAKu+E,UAAWv+E,KAAKk/E,eAEvBl/E,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAKqmC,KAAKt3B,QAChBpR,KAAK8/E,oBAAoB9iF,KAAKgD,OAU5BA,KAAKue,MAAMlhB,OAASuqC,EAAA,EAAwB/oC,MAC5CmB,KAAKue,MAAMlhB,OAASuqC,EAAA,EAAwB9oC,UAG9CkB,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,kBAAMvrB,EAAKkc,MAAMnL,iBACjB,SAACwC,GACCvT,EAAK48E,cAAcv1B,SAAW9zC,KAIlC5V,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,kBAAMvrB,EAAKkc,MAAMjM,eACjB,SAACsD,GACCvT,EAAKu8E,cAAcl1B,SAAW9zC,KAIlC5V,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,kBAAMvrB,EAAKkc,MAAM7L,eACjB,SAACkD,GACCvT,EAAKu8E,cAAch1B,SAAWh0C,MAGzB5V,KAAKue,MAAMlhB,OAASuqC,EAAA,EAAwB5oC,WAKrDgB,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,kBAAMvrB,EAAKkc,MAAM/L,UACjB,SAACoD,GACC,GAAIA,GACAA,IAAWiyB,GAAA,EAAazzB,oBAAoBC,SAC9C,CACA,IAAMkK,EAAQuqB,EAAA,EAAY1d,iBACxB/oB,EAAKkc,MAAOoqB,GAAA,GAEd,GADiBpqB,EAAMhG,QAAQ+D,cACjB,CACZ,IAAMo9B,EAAWr3C,EAAKgmC,mBAAmBrvB,QAAQuF,EAAMhG,SACjDwnE,GACJC,GAAA,EAAiBziF,OACjByiF,GAAA,EAAiBniF,QACjBmiF,GAAA,EAAiBliF,WAEdiF,EAAA,EAAiBg9E,EAAgBrmC,IACpCr3C,EAAKkc,MAAMlL,cAAc,WAQnCrT,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,kBAAMvrB,EAAKkc,MAAMnM,YACjB,SAACwD,GACC,GAAIA,EAAQ,CACV,IAAM2I,EAAQuqB,EAAA,EAAY1d,iBACxB/oB,EAAKkc,MAAOoqB,GAAA,GACdtmC,EAAKq3C,SAAWr3C,EAAKgmC,mBAAmBrvB,QAAQuF,EAAMhG,cAEtDlW,EAAKq3C,SAAW,QAQtB15C,KAAKm/E,aAAa/kF,KAAK4F,KAAKmmC,OAAOvY,OACjC,WACE,IAAMqyD,EAA+C,OAA/B59E,EAAKkc,MAAMnL,gBAC3B8sE,GAAgC,IAArB79E,EAAKqmC,KAAKt3B,OACrB+uE,EAAmB99E,EAAK42C,QAAQvjC,aAChCrT,EAAKk3C,QAAQ7jC,aACbrT,EAAKi3C,WAAW5jC,YACtB,OAAOuqE,GAAiBC,GAAYC,GAEtC,SAACvqE,GACC,GAAIA,EAAQ,CACV,IAAM2I,EAAQuqB,EAAA,EAAY1d,iBACxB/oB,EAAKkc,MAAOoqB,GAAA,GACdtmC,EAAKm9E,iBAAiBplF,KAAKmkB,EAAMhG,cAEjClW,EAAKm9E,iBAAiB9yD,aAvalCi4C,EAAArqE,UAibE8qE,WAjbF,WAkbQplE,KAAK0oC,KAAKt3B,SACZpR,KAAK0oC,KAAKt3B,QAAS,EAGnBpR,KAAK8/E,qBAAoB,GAAO,IAElC9/E,KAAKq4C,qBAAqBtR,eACxB/mC,KAAKu+E,UAAWv+E,KAAKk/E,eACvB,IAAK,IAAIllF,EAAI,EAAGmH,EAAKnB,KAAKm/E,aAAajlF,OAAQF,EAAImH,EAAInH,IACrDgG,KAAKm/E,aAAanlF,KAEpBgG,KAAKm/E,aAAajlF,OAAS,EAC3B8F,KAAKue,MAAMhL,WA9bfoxD,EAAArqE,UAocE8lF,OApcF,WAqcQpgF,KAAK0oC,KAAKt3B,OACZpR,KAAKy4B,SAELz4B,KAAK0oC,KAAKt3B,QAAS,GAxczBuzD,EAAArqE,UAgdEO,MAhdF,WAidImF,KAAKs0D,gBAAgBlrB,WAAWppC,KAAKue,MAAOve,KAAK0oC,MACjD1oC,KAAK0oC,KAAKt3B,QAAS,GAldvBuzD,EAAArqE,UAydEm+B,OAzdF,WA0dIz4B,KAAKs0D,gBAAgBlrB,WAAWppC,KAAK0oC,KAAM1oC,KAAKue,OAChDve,KAAK0oC,KAAKt3B,QAAS,GA3dvBuzD,EAAArqE,UAkeEgZ,MAleF,WAmeItT,KAAKue,MAAMjL,QACXtT,KAAK0oC,KAAKp1B,SApedqxD,EAAArqE,UA6eE+lF,sBA7eF,SA6ewBpK,GACpB,IAAMvtC,EAAOI,EAAA,EAAY1d,iBAAiBprB,KAAKue,MAAOqqB,GAAA,GAChDC,EAAUH,EAAKt1B,gBAAkBs1B,EAAKt1B,gBAAgB2E,MAAM,QAC5DqlE,EAAMv0C,EAAQrnB,QAAQy0D,GACxBmH,GAAO,EACTv0C,EAAQztC,OAAOgiF,EAAK,GAEpBv0C,EAAQzuC,KAAK67E,GAEfvtC,EAAKr1B,cAAcw1B,EAAQ3uC,OAAS2uC,EAAQzhC,KAAK,KAAO,OAtf5Du9D,EAAArqE,UA8fEgmF,eA9fF,SA8fiBzhD,GACb7+B,KAAKue,MAAMlL,cAAcwrB,EAAA,QA/f7B8lC,EAAArqE,UAsgBEimF,oBAtgBF,SAsgBsB1hD,GAClB7+B,KAAKue,MAAMjM,cAAgBusB,EAAA,MAC3B7+B,KAAKue,MAAM7L,cAAgBmsB,EAAA,KAxgB/B8lC,EAAArqE,UAghBEwkF,YAhhBF,SAghBc0B,GAEV,IAAM3hD,EAAO,IAAIC,KAEjB,QAAsB5+B,IAAlBsgF,EAA6B,CAC/B,IAAM1vE,EAAO+tB,EAAK2qB,UAAYg3B,EAC9B3hD,EAAK4hD,QAAQ3vE,GAGf,OAAO+tB,EAAKM,eAzhBhBwlC,EAAArqE,UAgiBEykF,mBAhiBF,WAiiBI,OAAO/+E,KAAK8+E,YAAY,SAjiB5Bna,EAAArqE,UAyiBEomF,WAziBF,SAyiBa5vE,GAET,OADa,IAAIguB,KAAKhuB,GACV6vE,sBA3iBhBhc,EAAArqE,UA4jBEwlF,oBA5jBF,SA4jBsB1uE,EAAQwvE,GAE1B,GAAM5gF,KAAK0oC,gBAAgBC,GAAA,GACrB3oC,KAAKue,iBAAiBoqB,GAAA,GACxBv3B,IAAWwvE,EAFf,CAOA,IAAM7jC,EAAO/8C,KAAKqnC,cACZlZ,GAAO,aAAc+jB,EAAA,EAAclyC,OAAOoH,KAAK,KAC/C81C,EAAUl9C,KAAKq4C,qBAEfwoC,EAAc7gF,KAAK0oC,KAAKnwB,QACxBuoE,EAAe9gF,KAAKue,MAAMhG,QAE1B+kC,EAASt9C,KAAK4E,IAAI24C,cACxBzU,EAAA,EAAY0U,cAAcF,GAEtBlsC,GACF2rC,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKu/E,cACL,MACAv/E,KAAKq/D,mBACLr/D,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEgO,EACA,cACAt9C,KAAK09C,sBACL19C,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKs5C,WACL,eACAt5C,KAAKo9C,oBACLp9C,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKu5C,QACL,YACAv5C,KAAKq9C,iBACLr9C,OAIJA,KAAKs+E,eAAe7xD,cAAco0D,GAClC7gF,KAAKs+E,eAAehyD,WAAWw0D,GAE/B9gF,KAAKw+C,wBAELtB,EAAQ9W,aAAajY,EAAKnuB,KAAKq/E,kBAAkB,GACjDniC,EAAQ9W,aAAajY,EAAKnuB,KAAKk5C,oBAAoB,GACnDgE,EAAQ9W,aAAajY,EAAKnuB,KAAKw5C,oBAAoB,GACnD0D,EAAQ9W,aAAajY,EAAKnuB,KAAKy5C,uBAAuB,GAEtDz5C,KAAKi5C,QAAQtjC,WAAU,GAEnBmrE,EAAaxkE,eACftc,KAAKqoC,mBAAmB/vB,SAASwoE,GAAc,KAIjDA,EAAaxoE,SAAS,MACtBykC,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EAEd8F,KAAKo/E,YAAa,EAElBliC,EAAQnW,eAAe5Y,EAAKnuB,KAAKq/E,kBACjCniC,EAAQnW,eAAe5Y,EAAKnuB,KAAKk5C,oBACjCgE,EAAQnW,eAAe5Y,EAAKnuB,KAAKw5C,oBACjC0D,EAAQnW,eAAe5Y,EAAKnuB,KAAKy5C,uBAEjCz5C,KAAKi5C,QAAQtjC,WAAU,GAEvB3V,KAAK0+C,0BAED1+C,KAAKw/E,iBAAiB1yB,aACxB9sD,KAAKs+E,eAAe7xD,cAAcq0D,GAEpC9gF,KAAKs+E,eAAehyD,WAAWu0D,GAE/B7gF,KAAKw/E,iBAAiB9yD,WAzpB5Bi4C,EAAArqE,UAiqBEggD,wBAjqBF,WAkqBIt6C,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1BA,EAAYvlB,WAAU,GACtBorE,GAAA,EAAiB7lD,YAAYA,MApqBnCypC,EAAArqE,UA4qBEkkD,sBA5qBF,WA4qB0B,IAAAz4C,EAAA/F,KACtBA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Bn1B,EAAKnB,IAAI0vB,eAAe4G,MA9qB9BypC,EAAArqE,UAsrBEokD,wBAtrBF,WAsrB4B,IAAA73C,EAAA7G,KACxBA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Br0B,EAAKjC,IAAIyvB,kBAAkB6G,MAxrBjCypC,EAAArqE,UAgsBE+kE,mBAhsBF,SAgsBqBl0C,GAAK,IAAAwN,EAAA34B,KAEtBA,KAAKg4C,SAAS,WAEZ,IAAMz5B,EAAQuqB,EAAA,EAAY1d,iBACxBuN,EAAKpa,MAAOoqB,GAAA,GACRpwB,EAAUgG,EAAMhG,QAGhByoE,EAAel4C,EAAA,EAAY1d,iBAC/BD,EAAIvB,QACJmiC,GAAA,GAEIvwC,EAAWstB,EAAA,EAAY1d,iBAC3B41D,EAAa1kE,cACb2kE,GAAA,GAEF1iE,EAAM/C,SAAWA,EAGjBmd,EAAKymD,YAAa,EAGlB,IAAMhiE,EAAaub,EAAK0P,mBAAmB7nB,wBACzCwgE,GACFroD,EAAK0P,mBAAmB3nB,0BAA0BnI,GAClDA,EAAQ6lB,cAAchhB,GACtBub,EAAK0P,mBAAmB/vB,SAASC,GAAS,GAE1CogB,EAAKwN,OAAOyN,YA7tBlB+wB,EAAArqE,UAsuBE4mF,oBAtuBF,WAuuBI,IAAMx4C,EAAOI,EAAA,EAAY1d,iBAAiBprB,KAAK0oC,KAAMC,GAAA,GACrD,OAAO3oC,KAAKqoC,mBAAmBrvB,QAAQ0vB,EAAKnwB,UAxuBhDosD,EAAArqE,UA+uBEojD,sBA/uBF,SA+uBwBvyB,GAAK,IAAA0N,EAAA74B,KAGzBA,KAAKmhF,cAGL,IAAMxjC,EAAQ39C,KAAK4E,IAAIs5C,cAAc/yB,GAC/B8I,EAAaj0B,KAAK4E,IAAIu5C,uBAAuBR,GAE/CplC,EAAUvY,KAAK4E,IAAIg5C,sBACrBD,EACA,SAACplC,GACC,IAAIslC,GAAM,EAIV,OAHI96C,EAAA,EAAiB81B,EAAK2mD,iBAAiBr4D,WAAY5O,KACrDslC,EAAMtlC,GAEDslC,IAQLzE,KACN,GALA7gC,EAAUA,GAAoB,KAKjB,CAEX,IAAMlb,EAAO2C,KAAKqoC,mBAAmBrvB,QAAQT,GACtCzY,EAAiBE,KAAK02B,gBAEzBr5B,GAAQ2iF,GAAA,EAAiBziF,QACzBF,GAAQ2iF,GAAA,EAAiBxiF,aACzBH,GAAQ2iF,GAAA,EAAiBniF,SACzBR,GAAQ2iF,GAAA,EAAiBliF,WAC3Bs7C,EAAQh/C,MACNi/C,IAAK,eACL9zC,MAAOzF,EAAewF,UAAU,QAChCvJ,KAAM,SAGNsB,GAAQ2iF,GAAA,EAAiBxiF,aACzBH,GAAQ2iF,GAAA,EAAiBniF,SACzBR,GAAQ2iF,GAAA,EAAiBliF,WAC3Bs7C,EAAQh/C,MACNi/C,IAAK,qBACL9zC,MAAOzF,EAAewF,UAAU,UAChCvJ,KAAM,WAKRq9C,EAAQl/C,SAEV8F,KAAKm5C,MAAQ,IAAIioC,GAAA,GACfhoC,YAGF9J,EAAA,EACEtvC,KAAKm5C,MACL,cACAn5C,KAAKm9C,uBACLn9C,MAEFA,KAAK4E,IAAIuwB,WAAWn1B,KAAKm5C,OAEzBn5C,KAAKm5C,MAAMiF,KAAKnqB,GAEhB9I,EAAIkzB,iBACJlzB,EAAImzB,kBAEJt+C,KAAKmmC,OAAOyN,WArzBlB+wB,EAAArqE,UA6zBE6mF,YA7zBF,WA8zBQnhF,KAAKm5C,QACP7J,EAAA,EACEtvC,KAAKm5C,MACL,cACAn5C,KAAKm9C,uBACLn9C,MAEFA,KAAK4E,IAAIwwB,cAAcp1B,KAAKm5C,OAC5Bn5C,KAAKm5C,MAAQ,OAt0BnBwrB,EAAArqE,UA80BE6iD,uBA90BF,SA80ByBhyB,GACrB,IAAM6zB,EAAS7zB,EAAIxI,OAAOq8B,OAE1B,OAAQA,GACN,IAAK,OACHh/C,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,SACZ,MACF,IAAK,SACH5zC,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,SACZ,MACF,QACE9vC,QAAQ48B,IAAR,oBAAgCse,KA31BxC2lB,EAAArqE,UAo2BE+iD,iBAp2BF,SAo2BmBlyB,GACfnrB,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,UAt2BhB+wB,EAAArqE,UA62BE8iD,oBA72BF,SA62BsBjyB,GAClBnrB,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,UA/2BhB+wB,EAAA,GA63BAiZ,GAAQlZ,UAAU,YAChBH,UACE+Z,eAAkB,IAClB15E,IAAO,IACP8jC,KAAQ,IACR61C,UAAa,KAEf/tD,WAAYotD,GAAQM,gBACpB3mC,YAAa0mC,KAIA,IAAAoD,GAAA,GCn8Bf,IAAMC,GAAUx5E,QAAQpM,OAAO,cAC7BggE,EAAA,EAAqBhgE,OAAOK,KAC5BslF,GAAwBtlF,KACxB+hF,GAAA,EAAsBpiF,OAAOK,KAC7BwlF,GAAA,EAAoB7lF,OAAOK,OA0B7B,SAASylF,GAAsBj0D,EAAQi0D,GACrC,OAAOA,EAAsBj0D,GAvB/B+zD,GAAQvqC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,cAAe57C,EAAQ,SAI5CimF,GAAQ/kF,MAAM,wBAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,sBACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,8DAcN+pC,GAAQ5c,UAAU,cAChBH,UACEkd,cAAiB,IACjBhE,YAAe,IAGfiE,WAAc,IACdhE,cAAiB,IACjBY,eAAkB,IAClB15E,IAAO,IACP25E,UAAa,KAEf/tD,WAAY,uBACZ+mB,YAAaiqC,KAMfF,GAAQK,kBAAR,WAcE,SAAAhd,EAAY7kE,EAAgButB,EAAQ+I,EAAUwrD,EAC5CvtB,gGAAgBwtB,CAAA7hF,KAAA2kE,GAQhB3kE,KAAKyhF,cAMLzhF,KAAKy9E,YAMLz9E,KAAK0hF,WAML1hF,KAAK09E,cAML19E,KAAKs+E,eAMLt+E,KAAK4E,IAML5E,KAAKu+E,UASLv+E,KAAK02B,gBAAkB52B,EAMvBE,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK8hF,gBAAkBF,EAMvB5hF,KAAKs0D,gBAAkBD,EASvBr0D,KAAK4pC,aAEDxvB,KAAMta,EAAewF,UAAU,OAC/B/I,MAAOwtC,GAAA,EAAoBphC,MAG3ByR,KAAMta,EAAewF,UAAU,gBAC/B/I,MAAOwtC,GAAA,EAAoBrC,KAG3BttB,KAAMta,EAAewF,UAAU,QAC/B/I,MAAOwtC,GAAA,EAAoBtC,MAS/BznC,KAAK+hF,sBAOL/hF,KAAKgiF,mBAMLhiF,KAAKiiF,oBAtIT,OAAAtd,EAAA9nC,SAAA,wEAAA8nC,EAAArqE,UAgJEw/C,QAhJF,WAgJY,IAAAz3C,EAAArC,KAERA,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAKo/E,eACXzhF,KAAKkiF,2BAA2BllF,KAAKgD,OAIvC,IACA2M,EADmBm8B,EAAA,EAAYxlC,OAAOtD,KAAK0hF,WAAWnzE,YACtD3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAzB+T,EAAyBpD,EAC9BoD,EAAUjT,OAASuqC,EAAA,EAAwB5oC,SAC7CgB,KAAK+hF,mBAAmB3nF,KAAKkW,GAE7BtQ,KAAKgiF,gBAAgB5nF,KAAKkW,GAK9B,IACAhB,KADiB0N,OAAOhd,KAAKy9E,YAAaz9E,KAAK09E,eAC/CnuE,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA0B,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAAfmsC,EAAej5B,EACxBzP,KAAKmiF,cAAcz5C,GAIrB1oC,KAAKnF,SAxKT8pE,EAAArqE,UAkLE8qE,WAlLF,WAmLwC,OAAhCplE,KAAK0hF,WAAW74E,cAClB7I,KAAK0hF,WAAW74E,YAAc,MAEhC7I,KAAKs+E,eAAe5xD,SAtLxBi4C,EAAArqE,UA8LE8nF,SA9LF,WA+LI,SAAUplE,OAAOhd,KAAKy9E,YAAaz9E,KAAK09E,eAAexjF,OAAS,GA/LpEyqE,EAAArqE,UAwMEO,MAxMF,WAwMU,IAAAkL,EAAA/F,KAENA,KAAK0hF,WAAW74E,YAAc,KAG9B7I,KAAKg4C,SAAS,WACZ,IAAMnvC,EAAc9C,EAAKs8E,qBACrBx5E,EAAY3O,SACd6L,EAAK27E,WAAW74E,YAAcA,EAE9B9C,EAAK+7E,gBAAgBp1D,YAlN7Bi4C,EAAArqE,UA6NEgoF,QA7NF,WA8NI,IAAMz5E,EAAc7I,KAAKqiF,qBAGzB,GAAKx5E,EAAY3O,OAAjB,CAIA,IAAMyU,EAAa3O,KAAK0hF,WAElB98E,EAAM5E,KAAK4E,IACXk0D,EAAWl0D,EAAI6a,UAAUgyB,gBAAgBylB,UACzChyD,EAASlF,KAAKs0D,gBAAgB5qB,cAClC/6B,WAAYA,EACZ9F,YAAaA,EACbihC,QAASgvB,IAEXhwB,EAAA,EAAYxlC,OAAO4B,GAEnBlF,KAAK8hF,gBAAgBhlD,OACnBE,aAAcruB,GACdzJ,OAAQA,EACRq3B,MAbY,IAcZ33B,IAAKA,MApPX+/D,EAAArqE,UA8PE+nF,mBA9PF,WA+PI,IAAMx5E,KAENgH,KADiBmN,OAAOhd,KAAKy9E,YAAaz9E,KAAK09E,eAC/C5tE,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA0B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAfmsC,EAAe14B,EACpB04B,EAAKnsC,OACPsM,EAAYzO,KAAKsuC,GAGrB,OAAO7/B,GAtQX87D,EAAArqE,UAiREioF,uBAjRF,SAiRyBjyE,GACrB,IAAMo4B,EAAO1oC,KAAKs0D,gBAAgB7rB,wBAAwBn4B,GAAW,GACrEtQ,KAAKmiF,cAAcz5C,GACnB1oC,KAAKy9E,YAAYrjF,KAAKsuC,GAGtB1oC,KAAKg4C,SAAS,WACZtP,EAAKt3B,QAAS,GACb,IAzRPuzD,EAAArqE,UAiSEkoF,aAjSF,SAiSetlF,GACP8C,KAAK0hF,WAAWj5E,kBAAoBvL,EAAUX,QAChDyD,KAAK0hF,WAAWj5E,gBAAkBvL,EAAUX,QAnSlDooE,EAAArqE,UA6SEmoF,iBA7SF,SA6SmB/5C,GAAM,IAAA7hC,EAAA7G,KACrB0oC,EAAKt3B,QAAS,EACdpR,KAAKg4C,SAAS,WACZj1C,EAAA,EAAe8D,EAAK42E,YAAa/0C,GACjC7hC,EAAK67E,gBAAgBh6C,GACrBA,EAAKn1B,aAlTXoxD,EAAArqE,UA0TE6nF,cA1TF,SA0TgBz5C,GACZ,IAAMva,EAAM+jB,EAAA,EAAcxJ,GAC1B1oC,KAAKiiF,iBAAiB9zD,GAAOnuB,KAAKmmC,OAAOvY,OACvC,kBAAM8a,EAAKt3B,QACXpR,KAAK2iF,wBAAwB3lF,KAAKgD,OAGhC0oC,aAAgBC,GAAA,GAClB3oC,KAAKs+E,eAAehyD,WAAWoc,EAAKnwB,UAlU1CosD,EAAArqE,UA0UEooF,gBA1UF,SA0UkBh6C,GACd,IAAMva,EAAM+jB,EAAA,EAAcxJ,GACpBk6C,EAAa5iF,KAAKiiF,iBAAiB9zD,GACzC2a,EAAA,EAAYxlC,OAAOs/E,GACnBA,WACO5iF,KAAKiiF,iBAAiB9zD,GAEzBua,aAAgBC,GAAA,GAClB3oC,KAAKs+E,eAAe7xD,cAAcic,EAAKnwB,UAlV7CosD,EAAArqE,UA2VEqoF,wBA3VF,WA4VI,IAAIlB,GAAgB,EAEpBvxE,KADiB8M,OAAOhd,KAAKy9E,YAAaz9E,KAAK09E,eAC/CvtE,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA0B,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MACxB,GADwB8T,EACfe,OAAQ,CACfqwE,GAAgB,EAChB,OAGJzhF,KAAKyhF,cAAgBA,GApWzB9c,EAAArqE,UA4WE4nF,2BA5WF,WA6WI,IAAIliF,KAAKyhF,cAGT,KACAlwE,KADiByL,OAAOhd,KAAKy9E,YAAaz9E,KAAK09E,eAC/ClsE,EAAA3E,MAAAC,QAAAyE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvE,OAAAC,cAA0B,KAAAyE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArX,OAAA,MAAAwX,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApE,QAAAC,KAAA,MAAAsE,EAAAD,EAAAlV,MAAA,IAAfmsC,EAAeh3B,EACxB,GAAIg3B,EAAKt3B,OAAQ,CACfs3B,EAAKt3B,QAAS,EACd,UApXRuzD,EAAA,GA2XA2c,GAAQ9wD,WAAW,uBAAwB8wD,GAAQK,mBAGpC,IAAAkB,GAAA,mBC1af,IAAMC,GAAUh7E,QAAQpM,OAAO,qBAC7Bi2E,EAAA,EAAyBj2E,OAAOK,KAChC0+E,EAAA,EAAqC/+E,OAAOK,KAC5Cq6E,EAAoB16E,OAAOK,KAC3BgnF,GAAA,EAAyBrnF,OAAOK,KAChC61E,EAAA,EAAwBl2E,OAAOK,KAC/B81E,EAAA,EAA0B91E,KAC1B2/D,EAAA,EAAqBhgE,OAAOK,KAC5B8mF,GAAoB9mF,KACpB4hF,GAAuBjiF,OAAOK,OA0BhC,SAASinF,GAA6Bz1D,EAAQy1D,GAC5C,OAAOA,EAA6Bz1D,GAvBtCu1D,GAAQ/rC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,sCAAuC57C,EAAQ,SAGpEynF,GAAQvmF,MAAM,+BAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,6BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,6FAkBNurC,GAAQtrC,YAAR,WAuBE,SAAAmtB,EAAYt3C,EAAQ+I,EAAUt2B,EAAgBmjF,EAC5CC,EAAsBC,EAAiBv8B,EAASvwB,EAChD+sD,EAAuB/uB,GACvB,IAAAhyD,EAAArC,kGAAAqjF,CAAArjF,KAAA2kE,GAQA3kE,KAAKoR,OAELic,EAAOO,OACL,kBAAMvrB,EAAK+O,QACXpR,KAAK8/E,oBAAoB9iF,KAAKgD,OAOhCA,KAAK4E,IAML5E,KAAKu+E,UASLv+E,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK02B,gBAAkB52B,EASvBE,KAAKijF,2BAA6BA,EAElC51D,EAAOO,OACL,kBAAMvrB,EAAK4gF,2BAA2Bt0E,YACtC3O,KAAKsjF,gCAAgCtmF,KAAKgD,OAO5CA,KAAKujF,sBAAwBL,EAM7BljF,KAAKmjF,gBAAkBA,EAGvB91D,EAAOyvC,iBACL,kBAAMz6D,EAAK8gF,gBAAgBK,wBAC3B,WAC6D,IAAvDnhF,EAAK8gF,gBAAgBK,uBAAuBtpF,QAC7CmI,EAAKohF,6BACNphF,EAAKohF,4BAA6B,KASxCzjF,KAAK0jF,SAAW98B,EAEhBv5B,EAAOO,OACL,kBAAMvrB,EAAKqhF,SAAS/6B,iBACpB3oD,KAAK2jF,oCAAoC3mF,KAAKgD,OAOhDA,KAAK22B,kBAAoBN,EAMzBr2B,KAAKs+E,eAAiBx1C,EAAA,EAAYxlC,OAChC8/E,EAAsBx2D,qBAOxB5sB,KAAKs0D,gBAAkBD,EASvBr0D,KAAKyhF,eAAgB,EAMrBzhF,KAAKy9E,YAAc,KAMnBz9E,KAAK09E,cAAgB,KAMrB19E,KAAK4jF,wBAML5jF,KAAK6jF,yBAA2B,KAMhC7jF,KAAK8jF,gBAAkBZ,EAAqBj+E,WAM5CjF,KAAKqnC,iBAQLrnC,KAAK+jF,gBAAkB,KAMvB/jF,KAAKgkF,cAMLhkF,KAAKikF,0BAA2B,EAGhC52D,EAAOO,OACL,kBAAMvrB,EAAK4hF,0BACX,WACE5hF,EAAK6hF,eAAiB,KAQ1BlkF,KAAKkkF,eAAiB,GAMtBlkF,KAAKyjF,4BAA6B,EAMlCzjF,KAAKmkF,+BAAgC,EAErC92D,EAAOO,OACL,kBAAMvrB,EAAK8hF,+BACXnkF,KAAKokF,0CAA0CpnF,KAAKgD,OAStDA,KAAKqkF,gCAGLrkF,KAAKskF,gCAjPT,OAAA3f,EAAA9nC,SAAA,kLAAA8nC,EAAArqE,UAwPEqpF,oCAxPF,WAyPI,IAAMY,EAAUvkF,KAAK0jF,SAAS/6B,gBAC1B47B,GAAWA,EAAA,kBACbvkF,KAAK6jF,yBAA2BU,EAAA,kBAEhCvkF,KAAK6jF,yBAA2B,KAE9BU,GACAA,EAAA,qBACAA,EAAA,oBAA+B,GAEjCvkF,KAAKqkF,gCAAkCE,EAAA,oBAA+B,GAEtEvkF,KAAKqkF,qCAAkCnkF,EAEzCF,KAAKskF,iCAvQT3f,EAAArqE,UA8QEgqF,8BA9QF,WA+QI,IAAME,IAA8BxkF,KAAK6jF,yBACrC7jF,KAAKmkF,gCAAkCK,IACzCxkF,KAAKmkF,8BAAgCK,IAjR3C7f,EAAArqE,UA4REwlF,oBA5RF,SA4RsB1uE,GAAQ,IAAArL,EAAA/F,KACrBoR,IACHpR,KAAKyhF,eAAgB,EACrBzhF,KAAKg4C,SAAS,WACZjyC,EAAKk9E,2BAA2Bt0E,WAAa,SAhSrDg2D,EAAArqE,UA0SE8pF,0CA1SF,SA0S4CK,GACxC,IAAM1nC,EAAO/8C,KAAKqnC,cAEdo9C,GAEF1nC,EAAK3iD,KACHk1C,EAAA,EAAgBtvC,KAAK8jF,gBAAiB,MAAO9jF,KAAKm0C,sBAAuBn0C,MACzEsvC,EAAA,EAAgBtvC,KAAK8jF,gBAAiB,SAAU9jF,KAAKuvC,yBAA0BvvC,OAIjFA,KAAK8jF,gBAAgB9gF,QAAQhD,KAAKgtC,oBAAqBhtC,QAGvD+8C,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EAGd8F,KAAK4jF,qBAAqB1pF,OAAS,IA5TzCyqE,EAAArqE,UAyUE65C,sBAzUF,SAyUwBhpB,GACpB,IAAMxc,EAAawc,EAAIvB,QACnBjb,aAAsB0nE,GACxBr2E,KAAKgtC,oBAAoBr+B,IA5U/Bg2D,EAAArqE,UAyVEi1C,yBAzVF,SAyV2BpkB,GACvB,IAAMxc,EAAawc,EAAIvB,QACnBjb,aAAsB0nE,GACxBr2E,KAAKotC,sBAAsBz+B,IA5VjCg2D,EAAArqE,UAyWE0yC,oBAzWF,SAyWsBr+B,GACW,OAAzBA,EAAW5F,YACb4F,EAAW5F,UAAY/I,KAAK0kF,uBAAuB/1E,IAGjDA,EAAW5F,YACb/I,KAAK4jF,qBAAqBxpF,KAAKuU,QAEczO,IAAzCF,KAAKqkF,iCACL11E,EAAW5S,OAASiE,KAAKqkF,kCAE3BrkF,KAAKijF,2BAA2Bt0E,WAAaA,KApXrDg2D,EAAArqE,UAgYE8yC,sBAhYF,SAgYwBz+B,GAChBA,EAAW5F,YACbhG,EAAA,EAAe/C,KAAK4jF,qBAAsBj1E,GAEtC3O,KAAKijF,2BAA2Bt0E,aAAeA,IACjD3O,KAAKijF,2BAA2Bt0E,WAAa,QArYrDg2D,EAAArqE,UAkaEoqF,uBAlaF,SAkayB/1E,EAAYg2E,GACjC,IAAI57E,GAAY,EACV67E,EAAU5kF,KAAK02B,gBACf8C,GAAwB,IAAfmrD,EACT16D,EAAQ6e,EAAA,EAAYxlC,OAAOtD,KAAK6jF,0BAChCgB,KAGN,GAAI9hF,EAAA,EAAiBknB,EAAOtb,EAAW5S,OA0BrC,GAvBK4S,EAAWpB,aACds3E,EAAKzqF,KAAKwqF,EAAQt/E,UAChB,8GAMCqJ,EAAWlF,WAAckF,EAAWlF,UAAUvP,OAIvCyU,EAAWlF,UAAU,GAAGiD,WAElCm4E,EAAKzqF,KAAKwqF,EAAQt/E,UAChB,2DANFu/E,EAAKzqF,KAAKwqF,EAAQt/E,UAChB,uDASJyD,GAAa87E,EAAK3qF,OAIds/B,IAAWzwB,EAAW,CACxB,IAAM+7E,EAAKF,EAAQt/E,UAAR,yGAILy/E,EAAQp2E,EAAW5S,KAAnB,KAA4B4S,EAAWkX,GAAvC,KACAm/D,EAAKJ,EAAQt/E,UAAR,oFAIXu/E,EAAKhsE,QAAWisE,EAAhB,IAAsBC,EAAtB,IAA4BC,GAC5BlhF,QAAQsf,KAAKyhE,EAAKz9E,KAAK,MACvBpH,KAAK22B,kBAAkB6C,QACrB9V,IAAKmhE,EAAKz9E,KAAK,KACf/J,KAAMk2E,EAAA,EAAmBvpE,KAAKqZ,gBAIlCta,GAAY,EAGd,OAAOA,GAzdX47D,EAAArqE,UAieEgpF,gCAjeF,SAiekC30E,GAAY,IAAA9H,EAAA7G,KAE1CA,KAAKyhF,eAAgB,EACrBzhF,KAAKy9E,YAAc,KACnBz9E,KAAK09E,cAAgB,KACrB19E,KAAK+jF,gBAAkB,KACvB/jF,KAAKmjF,gBAAgB8B,oBAAsB,KAGtCt2E,IAKA3O,KAAKoR,SACRpR,KAAKoR,QAAS,GAGhBpR,KAAKujF,sBAAsB3N,2BACzBjnE,GACAhL,KAAK,SAACgL,GAIN,IAAInM,EAAOqE,EAAKq+E,kBAAkBv2E,GAClC,IAAKnM,IACHA,GACEi7E,eACAC,kBAEF72E,EAAKs+E,kBAAkBx2E,EAAYnM,GAC/BmM,EAAWvL,SAAST,UACpBgM,EAAWvL,SAAST,SAASyiF,0BAC7Bz2E,EAAWvL,SAAST,SAASyiF,yBAAyBlrF,QAExD,KAAMmrF,EACF12E,EAAWvL,SAAST,SAASyiF,yBAEjCz4E,EADmBm8B,EAAA,EAAYxlC,OAAOqL,EAAWJ,YACjD3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAzB+T,EAAyBpD,EAC9BnK,EAAA,EAAiBsiF,EAAoB/0E,EAAUvU,OACjDyG,EAAKk7E,cAActjF,KACjByM,EAAKytD,gBAAgB7rB,wBAAwBn4B,KAOvDzJ,EAAK42E,YAAcj7E,EAAKi7E,YACxB52E,EAAK62E,cAAgBl7E,EAAKk7E,cAC1B72E,EAAKk9E,gBAAkBp1E,EACvB9H,EAAKs8E,gBAAgB8B,oBAAsBt2E,EAAWkX,OAphB5D8+C,EAAArqE,UA8hBE4qF,kBA9hBF,SA8hBoBv2E,GAChB,OAAO3O,KAAKgkF,WAAWr1E,EAAWkX,KAAO,MA/hB7C8+C,EAAArqE,UAuiBE6qF,kBAviBF,SAuiBoBx2E,EAAYnM,GAC5BxC,KAAKgkF,WAAWr1E,EAAWkX,IAAMrjB,GAxiBrCmiE,EAAArqE,UA8iBEgrF,oBA9iBF,WA+iBItlF,KAAKikF,0BAA2B,GA/iBpCtf,EAAArqE,UAqjBEirF,eArjBF,WAujBI,IAAMxpF,EAAOiE,KAAKkkF,eACZv1E,EAAam6B,EAAA,EAAYxlC,OAAOtD,KAAK+jF,iBACrCztB,EAAe3nD,EAAWkX,GAC1B2/D,GACqB,IADLxlF,KAAKmjF,gBAAgBhG,YACzCphF,EAAMu6D,GACFp5D,EAAYyR,EAAWlG,gBAEvBib,EAAM1jB,KAAK02B,gBAAgBpxB,UAArB,mFAIZ,IAAKkgF,GAAgBlpC,QAAQ54B,GAAM,CAEjC,IAMMlhB,GACJtF,YACAugF,YARkBz9E,KAAKy9E,YACvBz9E,KAAKs0D,gBAAgB/qB,eAAevpC,KAAKy9E,gBAQzCnnB,eACAonB,cARoB19E,KAAK09E,cACzB19E,KAAKs0D,gBAAgB/qB,eAAevpC,KAAK09E,kBAQzC3hF,QAEFiE,KAAKmjF,gBAAgB/nC,KAAK54C,GAG1BxC,KAAKikF,0BAA2B,IAplBtCtf,EAAArqE,UA6lBEmrF,mBA7lBF,SA6lBqBC,GAAY,IAAA/sD,EAAA34B,KAEvB2O,EAAam6B,EAAA,EAAYxlC,OAAOtD,KAAK+jF,iBAG3C/jF,KAAKy9E,YAAc,KACnBz9E,KAAK09E,cAAgB,KAErB,IAAMD,EAAcz9E,KAAKs0D,gBAAgBvrB,YACvC28C,EAAWjI,aACPC,EAAgB19E,KAAKs0D,gBAAgBvrB,YACzC28C,EAAWhI,eAIb19E,KAAKg4C,SAAS,WAEZrf,EAAK8kD,YAAcA,EACnB9kD,EAAK+kD,cAAgBA,EAGrB/uE,EAAWlG,gBAAkBi9E,EAAWxoF,UAGxC,IAAMyoF,EAAY78C,EAAA,EAAYxlC,OAAOq1B,EAAKusD,kBAAkBv2E,IAC5Dg3E,EAAUlI,YAAcA,EACxBkI,EAAUjI,cAAgBA,KAvnBhC/Y,EAAArqE,UA8nBEsrF,iBA9nBF,WA+nBI5lF,KAAKyjF,4BAA6B,GA/nBtC9e,EAAArqE,UAuoBEurF,qBAvoBF,SAuoBuBrjF,GACnBxC,KAAKmjF,gBAAgBvzC,OAAOptC,IAxoBhCmiE,EAAA,GAipBAme,GAAQtrC,YAAYsuC,UASpBhD,GAAQtrC,YAAYuuC,cAGpBjD,GAAQpe,UAAU,qBAChBH,UACEnzD,OAAQ,IACRxM,IAAK,IACL25E,UAAW,KAEb/tD,WAAYsyD,GAAQtrC,YACpBD,YAAayrC,KAIA,IAAAgD,GAAA,GCruBAC,GANCn+E,QAAQpM,OAAO,oBAC7BsqF,GAAkCjqF,KAClC4hF,GAAuBjiF,OAAOK,2BCC1BmqF,yBAAUp+E,QAAQpM,OAAO,mCAC7BswC,EAAA,EAAgBtwC,OAAOK,KACvB,eAIFmqF,GAAQnvC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,oCAAqC57C,EAAQ,SA0BlE6qF,GAAQh4B,WAAa,SAAS93B,EAAU/e,GACtC,OACEq7B,OACE4tC,eAAgB,+BAChBxvE,KAAM,sBAERwmC,kBAAkB,EAClB9mB,WAAY,wCACZgiB,SAAU,KACV+E,YAAa,oCACb9E,MACE0zC,IAAK,SAAiBzzC,EAAO9oB,EAAS+oB,EAAOvN,GAa3C,SAASghD,EAAcjhB,EAAGkhB,GACxB,IAAIC,SAAOC,SAAOC,SAiBlB,OAhBIH,EAAShhF,QACXihF,EAAQ,IAAIxnD,KAAKsG,EAAKqhD,iBAAiBJ,EAAShhF,OAAO,KACvDkhF,EAAQ,IAAIznD,KAAKsG,EAAKqhD,iBAAiBJ,EAAShhF,OAAO,KACvD+/B,EAAKshD,OAASJ,EAAOC,GACrBC,GACEr1E,MAAOm1E,EAAM98B,UACbt4C,IAAKq1E,EAAM/8B,aAGb88B,EAAQ,IAAIxnD,KAAKsG,EAAKqhD,iBAAiBJ,EAAS9pF,QAChD6oC,EAAKshD,MAAQJ,EACbE,GACEr1E,MAAOm1E,EAAM98B,YAGjB9W,EAAMkB,SACC4yC,EA9BTphD,EAAKtY,OAELsY,EAAKuhD,cAAL,KAGA,SAA2BxhB,EAAGkhB,GAC5BjhD,EAAKk7C,gBACHxvE,KAAMs1E,EAAcjhB,EAAGkhB,KAEzB3zC,EAAMkB,UANRxO,EAAKuhD,cAAL,MAA8BP,MAftCF,GAAQh4B,0CAkDRg4B,GAAQnzC,UAAU,gBAAiBmzC,GAAQh4B,YAa3Cg4B,GAAQ1uC,YAAc,SAASnqB,EAAQyW,GAMrC9jC,KAAK+jC,aAAeD,EAOpB9jC,KAAKsgF,eAQLtgF,KAAK8Q,KAOL9Q,KAAK4mF,YAOL5mF,KAAK0pD,SAOL1pD,KAAK4pD,SAML5pD,KAAK6mF,cAWL7mF,KAAK2mF,cAOL3mF,KAAK0mF,OAlEPR,GAAQ1uC,6CAyER0uC,GAAQ1uC,YAAYl9C,UAAUwyB,KAAO,WACnC9sB,KAAK6mF,cAAgB7mF,KAAK8mF,oBAG1B,IAAMC,EAAkB/mF,KAAK+jC,aAAakC,WAAWjmC,KAAK8Q,MAC1D9Q,KAAK4mF,YAAiC,UAAnB5mF,KAAK8Q,KAAKyuB,KAC7Bv/B,KAAK0pD,SAAWq9B,EAAgBt9B,QAChCzpD,KAAK4pD,SAAWm9B,EAAgBp9B,QAChC3pD,KAAK0mF,MAAQ1mF,KAAK4mF,aAAeG,EAAgB1hF,OAAO,GAAI0hF,EAAgB1hF,OAAO,IACjF0hF,EAAgB1hF,OAClBrF,KAAK2mF,eACH51E,MAAO/Q,KAAK4mF,YACZ3e,IAAKjoE,KAAK0pD,SACV8mB,IAAKxwE,KAAK4pD,WAUds8B,GAAQ1uC,YAAYl9C,UAAUwsF,kBAAoB,WAChD,IAAM/gD,EAAU/lC,KAAK8Q,KACjB+1E,EAAgB,KACdp9B,EAAU,IAAI3qB,KAAK9+B,KAAK0pD,UACxBC,EAAU,IAAI7qB,KAAK9+B,KAAK4pD,UAE9B,GAAI7jB,EAAQ1gC,OACVwhF,KACA9gD,EAAQ1gC,OAAOrC,QAAQ,SAAC67B,GACtBgoD,EAAczsF,KAAK,IAAI0kC,KAAKD,GAAM2qB,iBAE/B,CACL,IACMw9B,EAAU,IAAIloD,KAAK2qB,EAAQD,WAMjC,GALAw9B,EAAQvd,YAAYhgB,EAAQ+f,cAFR,KAEsCzjC,EAAQi5C,SAAS,IAC3EgI,EAAQ1d,SAAS7f,EAAQie,WAHL,KAGgC3hC,EAAQi5C,SAAS,GACnEv1B,EAAQ4gB,UAJU,KAIgBtkC,EAAQi5C,SAAS,IACrDgI,EAAQrd,WAAWlgB,EAAQ+hB,aALP,KAKoCzlC,EAAQi5C,SAAS,IAErEgI,EAAUr9B,EAAS,CAGrBk9B,KACA,IAAK,IAAI7sF,EAAI,GAAKA,IAAK,CACrB,IAAMitF,EAAW,IAAInoD,KAAK2qB,EAAQD,WAKlC,GAJAy9B,EAASxd,YAAYhgB,EAAQ+f,cAAgBxvE,EAAI+rC,EAAQi5C,SAAS,IAClEiI,EAAS3d,SAAS7f,EAAQie,WAAa1tE,EAAI+rC,EAAQi5C,SAAS,GAC1Dv1B,EAAQ4gB,UAAYrwE,EAAI+rC,EAAQi5C,SAAS,IAC3CiI,EAAStd,WAAWlgB,EAAQ+hB,aAAexxE,EAAI+rC,EAAQi5C,SAAS,MAC5DiI,GAAYt9B,GAGd,MAFAk9B,EAAczsF,KAAK6sF,EAASz9B,aAOpC,OAAOq9B,GAUTX,GAAQ1uC,YAAYl9C,UAAUmsF,iBAAmB,SAASS,GACxD,GAAIA,GAAalnF,KAAK0pD,SACpB,OAAO1pD,KAAK0pD,SAGd,GAAIw9B,GAAalnF,KAAK4pD,SACpB,OAAO5pD,KAAK4pD,SAGd,GAAI5pD,KAAK6mF,cAAe,CAMtB,IAJA,IAAIrgE,SACA2gE,EAAY,EACZC,EAAapnF,KAAK6mF,cAAc3sF,OAAS,EAErCktF,EAAaD,EAAa,GAChC3gE,EAAQ5K,KAAK6kB,OAAO0mD,EAAYC,GAAc,GAC1CpnF,KAAK6mF,cAAcrgE,IAAU0gE,EAC/BE,EAAa5gE,EAEb2gE,EAAY3gE,EAIhB,IAAM6gE,EAAezrE,KAAKuX,IAAInzB,KAAK6mF,cAAcM,GAAaD,GACxDI,EAAgB1rE,KAAKuX,IAAInzB,KAAK6mF,cAAcO,GAAcF,GAEhE,OAAOlnF,KAAK6mF,cAAcQ,EAAeC,EAAgBH,EAAYC,GASrE,IANA,IAAMG,EAAa,IAAIzoD,KAAKooD,GACtBM,EAAY,IAAI1oD,KAAK9+B,KAAK0pD,UAC5B+9B,EAAW,IAAI3oD,KAAK9+B,KAAK0pD,UACvBC,EAAU,IAAI7qB,KAAK9+B,KAAK4pD,UAC1B89B,EAAe9rE,KAAKuX,IAAIo0D,EAAaE,GAEhCztF,EAAI,GAAKA,IAAK,CAIrB,IAAMmT,EAAO,IAAI2xB,KAAK0oD,EAAUh+B,WAMhC,GALAr8C,EAAKs8D,YAAY+d,EAAUhe,cAAgBxvE,EAAIgG,KAAK8Q,KAAKkuE,SAAS,IAClE7xE,EAAKm8D,SAASke,EAAU9f,WAAa1tE,EAAKgG,KAAK8Q,KAAKkuE,SAAS,GAC3DwI,EAAUnd,UAAYrwE,EAAIgG,KAAK8Q,KAAKkuE,SAAS,IAC/C7xE,EAAKw8D,WAAW6d,EAAUhc,aAAexxE,EAAIgG,KAAK8Q,KAAKkuE,SAAS,IAE5D7xE,EAAOw8C,EACT,MAGF,IAAMg+B,EAAW/rE,KAAKuX,IAAIo0D,EAAap6E,GACvC,KAAIw6E,GAAYD,GAId,MAHAD,EAAWt6E,EACXu6E,EAAeC,EAMnB,OAAOF,EAASj+B,WAWpB08B,GAAQ1uC,YAAYl9C,UAAUstF,iBAAmB,SAAS92E,GACxD,OAAO9Q,KAAK+jC,aAAarF,gBAAgB5tB,EAAM9Q,KAAK8Q,KAAKmc,aAI3Di5D,GAAQ11D,WAAW,0BACjB01D,GAAQ1uC,aAGK,IAAAqwC,GAAA,GCnTAC,WATChgF,QAAQpM,OAAO,sBAC7BqsF,GAAA,EAAsBhsF,KACtBisF,GAAA,EAAyCjsF,KACzC69E,EAAA,EAA6Bl+E,OAAOK,KACpC8rF,GAAgC9rF,KAChCu+E,EAAA,EAAwB5+E,OAAOK,sCCAlBksF,WAPCngF,QAAQpM,OAAO,sBAC7BwsF,GAAA,EAAsBxsF,OAAOK,KAC7BosF,GAAA,EAAyBzsF,OAAOK,KAChCqsF,GAAA,EAA2BrsF,4BCLvBssF,GAAUvgF,QAAQpM,OAAO,cAgC/B2sF,GAAQn6B,WAAa,SAASrJ,GAC5B,OACErS,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GAErB,IACM21C,EAAO31C,EAAA,QAEP/tC,EAAM8tC,EAAM5kB,MAAMw6D,GACxBx/C,EAAA,EAAY1d,iBAAiBxmB,EAAK2jF,GAAA,GAElC3jF,EAAI4jF,UAAU5+D,EAAQ,IAOtB,IACM6+D,EAAmB91C,EAAA,oBAGzB,GAFqBD,EAAM5kB,MAAM26D,GAEf,CAChB,IACMC,EAAuB/1C,EAAA,wBAEvBg2C,EACJj2C,EAAM5kB,MAAM46D,GAEdp5C,EAAA,EACEuV,EACA,SACA,WACE,GAAI8jC,EAAkB,CAEpB,IAAMx3E,EAAQ2tB,KAAK8pD,MACfC,GAAO,GACQ,SAAbC,IACJlkF,EAAImkF,aACJnkF,EAAIokF,aACAH,GACFhkC,EAAQokC,sBAAsBH,GAE5BhqD,KAAK8pD,MAAQz3E,EAAQw3E,IACvBE,GAAO,GAGXC,QAGAlkF,EAAImkF,mBAvDlBV,GAAQn6B,+BAiERm6B,GAAQt1C,UAAU,UAAWs1C,GAAQn6B,YAGtB,IAAAg7B,GAAA,uBClGTC,GAAUrhF,QAAQpM,OAAO,wBAG/BytF,GAAQ5sF,MAAM,+BAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,6BACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,2BAGN4xC,GAAQpyC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,yBAA0B57C,EAAQ,SAuDvD,IAAM03C,GAAY,SAASq2C,GACzB,OACE52C,SAAU,IACVE,OAAO,EACPliB,WAAY,8BACZ+mB,YAAa6xC,4FAKjBD,GAAQp2C,UAAU,oBAAqBA,IAcvC,IAAMs2C,GAA0B,SAA1BC,EAAmCj8D,EAAQoqB,EAAUlqB,GAAQ,IAAAlrB,EAAArC,KAE3DupF,EAAah8D,EAAA,kBAOnBvtB,KAAKwpF,OACFn8D,EAAOS,MAAMy7D,GAChBzgD,EAAA,EAAYxlC,YAAuBpD,IAAhBF,KAAKwpF,QAMxBxpF,KAAKypF,WAELp8D,EAAOO,OAAO,kBAAMvzB,OAAO0iD,KAAK16C,EAAKmnF,QAAQtvF,QAAQ,SAACwvF,GACpDrnF,EAAKonF,WAAapvF,OAAO0iD,KAAK16C,EAAKmnF,QAAQ5kF,IAAIi5B,QAC/Cx7B,EAAKonF,WAAWE,KAAK5mF,EAAA,KAGvB,IAAMgrB,EAAUR,EAAA,qBAMhBvtB,KAAKgvC,KAA8B3hB,EAAOS,MAAMC,GAChD+a,EAAA,EAAY1d,iBAAiBprB,KAAKgvC,KAAMu5C,GAAA,GAExC,IAAMqB,EAAcr8D,EAAA,yBACdvlB,EAAUqlB,EAAOS,MAAM87D,GA2B7B,GArBA5pF,KAAKgI,QAAUshF,EAAwBO,YAAY7hF,GAMnDhI,KAAK6kE,QAAUx3C,EAMfrtB,KAAK8pF,qBAAuB,KAM5B9pF,KAAK+pF,kBAAe7pF,EAGP,OADAF,KAAKgvC,KAAKvvB,UACJ,CACjB,IAAMuqE,EAAchqF,KAAKgvC,KAAKvvB,UAAUwqE,eACpB/pF,IAAhB8pF,IACFhqF,KAAK+pF,aAAe/pF,KAAKutE,SAASyc,IAItC16C,EAAA,EAAgBtvC,KAAKgvC,KAAM,cAAehvC,KAAKkqF,kBAAmBlqF,MAElEA,KAAKmqF,oCAEL98D,EAAA,kBAA8BrtB,0FAUhCqpF,GAAwBQ,YAAc,SAAS7hF,GAC7C,IAAIoiF,GAAS,EAIb,YAHgBlqF,IAAZ8H,IACFoiF,EAA8B,GAArBpiF,EAAA,SAGToiF,OAAQA,IAUZf,GAAwB/uF,UAAUizE,SAAW,SAAS8c,GACpD,OAAOrqF,KAAKwpF,OAAOa,IAQrBhB,GAAwB/uF,UAAUgwF,WAAa,SAASD,GACtDrqF,KAAKgvC,KAAKvvB,UAAU8qE,QAAQF,IAQ9BhB,GAAwB/uF,UAAUkwF,wBAA0B,SAASrlB,GAAG,IAAAp/D,EAAA/F,KAChEwf,EAAOxf,KAAKgvC,KAAKvvB,UACjBsqE,EAAe/pF,KAAKwpF,OAA8BhqE,EAAKyqE,gBAaxC/pF,IAAjB6pF,GACF/pF,KAAK6kE,QAAQhpC,YAAY,WACvB91B,EAAKgkF,aAAeA,KAU1BV,GAAwB/uF,UAAU4vF,kBAAoB,SAAS/kB,GAC7DnlE,KAAKmqF,oCACLnqF,KAAKwqF,wBAAwB,OAO/BnB,GAAwB/uF,UAAU6vF,kCAAoC,WAClC,OAA9BnqF,KAAK8pF,sBACPx6C,EAAA,EAAuBtvC,KAAK8pF,sBAE9B,IAAMtqE,EAAOxf,KAAKgvC,KAAKvvB,UACvBzf,KAAK8pF,qBAAuBx6C,EAAA,EAAgB9vB,EAC1C,oBAAqBxf,KAAKwqF,wBAC1BxqF,OAIJmpF,GAAQ34D,WAAW,8BAA+B64D,IAGnC,IAAAoB,GAAA,GCvPAC,GAVC5iF,QAAQpM,OAAO,iBAC7Bg5E,EAA0Bh5E,OAAOK,KACjCmtF,GAAiBntF,KACjBgnF,GAAA,EAAyBrnF,OAAOK,KAChC4uF,GAAA,EAAgB5uF,KAChB6uF,GAAA,EAAiB7uF,KACjB0uF,GAAqB1uF,OCXjB8uF,GAAU/iF,QAAQpM,OAAO,mBAC7BusF,GAAmBlsF,KACnB+uF,GAAA,EAAmBpvF,OAAOK,KAC1B2uF,GAAc3uF,KACdgnF,GAAA,EAAyBrnF,OAAOK,OAIlC8uF,GAAQ9zC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,UAAW57C,EAAQ,SAuBxCwvF,GAAQ38B,WAAa,WACnB,OACExb,OACE9tC,IAAO,aACPmmF,aAAgB,sBAChBpC,iBAAoB,2BAEtBn4D,WAAY,2BACZ8mB,kBAAkB,EAClBC,YAAa,YAIjBszC,GAAQ93C,UAAU,SAAU83C,GAAQ38B,YAapC28B,GAAQrzC,YAAc,SAAS4rC,EAAuB4H,EAAcrzC,GAQlE33C,KAAK4E,IAML5E,KAAK+qF,aAML/qF,KAAK2oF,iBASL3oF,KAAKirF,uBAAyB7H,EAM9BpjF,KAAKkrF,cAAgBF,EAMrBhrF,KAAKk4C,aAAeP,GAzCtBkzC,GAAQrzC,2EAgDRqzC,GAAQrzC,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKirF,uBAAuBn+D,KAAK9sB,KAAK4E,KACtC5E,KAAKkrF,cAAcn+D,OAAO/sB,KAAK4E,KAC/B5E,KAAKk4C,aAAanrB,OAAO/sB,KAAK4E,MAIhCimF,GAAQr6D,WAAW,mBAAoBq6D,GAAQrzC,aAGhC,IAAA2zC,GAAA,gCCjHTC,GAAUtjF,QAAQpM,OAAO,uBAC7B2vF,GAAA,EAAgBtvF,OA2BlB,SAASuvF,GAA+B/9D,EAAQ+9D,GAC9C,OAAOA,EAA+B/9D,GAxBxC69D,GAAQr0C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iCAAkC57C,EAAQ,SAI/D+vF,GAAQ7uF,MAAM,iCAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,+BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,0FAgCN6zC,GAAQl0C,YACN1mB,WAAY,qCACZ+zC,UACE3/D,IAAO,uBACP2mF,YAAe,gCAEjBh0C,YAAa+zC,IAGfF,GAAQ1mB,UAAU,mBAChB0mB,GAAQl0C,YAcVk0C,GAAQ5zC,YAAc,SAASC,EAAUpgC,EAASgW,EAAQvtB,GAKxDE,KAAK4E,IAML5E,KAAKurF,YAMLvrF,KAAKqY,WAMLrY,KAAK6kE,QAAUx3C,EAMfrtB,KAAK02B,gBAAkB52B,EAMvBE,KAAK4kE,UAAYntB,EAMjBz3C,KAAKsX,SAAWD,EAMhBrX,KAAKwrF,SAAW,MA/ClBJ,GAAQ5zC,qEAsDR4zC,GAAQ5zC,YAAYl9C,UAAUw/C,QAAU,WAAW,IAAAz3C,EAAArC,KACjDA,KAAK6kE,QAAQ32C,IAAI,yBAA0B,WACzC7rB,EAAKopF,mBAIPzrF,KAAKyrF,kBAQPL,GAAQ5zC,YAAYl9C,UAAUmxF,eAAiB,WACvB,OAAlBzrF,KAAKwrF,UACPxrF,KAAK4E,IAAI8mF,cAAc1rF,KAAKwrF,UAI9B,IASM1rF,EAAiBE,KAAK02B,gBAC5B12B,KAAKwrF,SAAW,IAAIG,GAAA,GAClBC,UAAW,4BACXC,iBAZe,SAAS/uE,GACxB,IAAMgvE,EAAgB9rF,KAAKqY,WAAWnT,OAAO6S,MAAM,KAC7C7S,EAASlF,KAAKsX,SAASw0E,EAAcnxF,SAC3CmuC,EAAA,EAAY7wB,eAAe/S,GAC3B,IAAMga,EAAO4sE,EAEb,OADA5sE,EAAKrG,QAAQiE,GACN5X,EAAOrK,MAAMmF,KAAMkf,IAMCliB,KAAKgD,MAChCqrB,OAAQvjB,QAAQ8hB,QAAQ,oCAAqC5pB,KAAK4kE,WAAW,GAC7EmnB,cAAejsF,EAAewF,UAAU,iBAG1CtF,KAAKoY,cAAcpY,KAAKurF,YAAY,IAEpCvrF,KAAK4E,IAAIonF,WAAWhsF,KAAKwrF,WAQ3BJ,GAAQ5zC,YAAYl9C,UAAU8d,cAAgB,SAASC,GACrDrY,KAAKwrF,SAASpzE,cAAco5D,GAAA,EAAWn5D,EAAW4zE,OAClDjsF,KAAKqY,WAAaA,GAGpB+yE,GAAQ56D,WAAW,6BACjB46D,GAAQ5zC,aAGK,IAAA00C,GAAA,GCvLAC,GANCrkF,QAAQpM,OAAO,gBAC7ByvF,GAAgBpvF,KAChBmwF,GAA6BnwF,2BCCzBqwF,GAAU,SAAS1yF,EAAM2yF,GAK7BrsF,KAAKtG,KAAOA,EAMZsG,KAAKqsF,WAAaA,EAMlBrsF,KAAKssF,iBAUPF,GAAQG,UAAY,SAASh+E,GAC3B,SAAU2jC,EAAA,EAAc3jC,IAU1B69E,GAAQ9xF,UAAUkyF,cAAgB,SAASj+E,GACzC,QAASvO,KAAKssF,aAAaF,GAAQG,UAAUh+E,KAS/C69E,GAAQ9xF,UAAUmyF,iBAAmB,WACnC,OAAOpyF,OAAO0iD,KAAK/8C,KAAKssF,cAAcpyF,QASxCkyF,GAAQ9xF,UAAUoyF,gBAAkB,WAAW,IAAArqF,EAAArC,KAC7C,OAAOA,KAAKtG,KAAKwL,OAAO,SAAAynF,GAAA,OAAOtqF,EAAKmqF,cAAcG,MAQpDP,GAAQ9xF,UAAUsyF,UAAY,SAASr+E,GACrC,IAAM4f,EAAMi+D,GAAQG,UAAUh+E,GAC9BvO,KAAKssF,aAAan+D,GAAO5f,GAQ3B69E,GAAQ9xF,UAAUuyF,UAAY,SAASt+E,GACrC,IAAM4f,EAAMi+D,GAAQG,UAAUh+E,GACXvO,KAAKwsF,cAAcj+E,UAE7BvO,KAAKssF,aAAan+D,GAEzBnuB,KAAKssF,aAAan+D,GAAO5f,GAS7B69E,GAAQ9xF,UAAUwyF,UAAY,WAAW,IAAA/mF,EAAA/F,KACvCA,KAAKtG,KAAKsJ,QAAQ,SAACuL,GACjBxI,EAAK6mF,UAAUr+E,MASnB69E,GAAQ9xF,UAAUyyF,YAAc,WAC9B,IAAK,IAAMC,KAAShtF,KAAKssF,oBAChBtsF,KAAKssF,aAAaU,IAS7BZ,GAAQ9xF,UAAU2yF,gBAAkB,WAAW,IAAApmF,EAAA7G,KAC7CA,KAAKtG,KAAKsJ,QAAQ,SAACuL,GACjB1H,EAAKgmF,UAAUt+E,MAOnB69E,GAAQ1wF,OAASoM,QAAQpM,OAAO,qBAGjB,IAAAwxF,GAAA,YC1HTC,kBAAUrlF,QAAQpM,OAAO,YAC7BwxF,GAAexxF,OAAOK,KACtBsvF,GAAA,EAAgBtvF,KAChB,gBA2BF,SAASqxF,GAAoB7/D,EAAQ6/D,GACnC,OAAOA,EAAoB7/D,GAxB7B4/D,GAAQp2C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,YAAa57C,EAAQ,SAI1C8xF,GAAQ5wF,MAAM,sBAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,oBACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,0DAgCN41C,GAAQj2C,YACN1mB,WAAY,6BACZ+zC,UACE8oB,cAAiB,0BAEnB91C,YAAa61C,IAGfD,GAAQzoB,UAAU,WAAYyoB,GAAQj2C,YAYtCi2C,GAAQ31C,YAAc,SAASnqB,GAM7BrtB,KAAKmmC,OAAS9Y,EAMdrtB,KAAKqtF,cAMLrtF,KAAKssF,aAOLtsF,KAAKstF,SAMLttF,KAAKutF,eAAgB,EAOrBvtF,KAAKwtF,kBACHC,gBAAmB,SAASC,GAC1B,OAAOA,EAAOhqB,QAAQ,iCAxC5BypB,GAAQ31C,+BAiDR21C,GAAQ31C,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKssF,aAAetsF,KAAKqtF,cAAcf,cAYzCa,GAAQ31C,YAAYl9C,UAAUqvF,KAAO,SAASgE,GAC5C3tF,KAAKutF,cAAgBvtF,KAAKstF,WAAaK,IAAc3tF,KAAKutF,cAC1DvtF,KAAKstF,SAAWK,EAEhB,IAAMC,EAAM5tF,KAAKutF,cAAgB,GAAK,EACtCvtF,KAAKqtF,cAAc3zF,KAAKiwF,KAAK,SAACkE,EAAaC,GACzC,OAAKD,EAAYF,GAGZG,EAAYH,GAGVE,EAAYF,GAAcG,EAAYH,GAAcC,GAAOA,GAFxD,EAHD,KAgBbT,GAAQ31C,YAAYl9C,UAAUyzF,SAAW,SAASx/E,EAAYiU,GAC5D,IAAMwrE,EAAWhuF,KAAKiuF,gBAAgBzrE,GAChC0rE,EAAsBluF,KAAKmuF,2BAA2B3rE,GAE5DxiB,KAAKouF,UAAU7/E,EAAYy/E,EAAUE,IAUvCf,GAAQ31C,YAAYl9C,UAAU8zF,UAAY,SACxC7/E,EAAYy/E,EAAUE,GAEtB,GAAIF,IAAaE,EACfluF,KAAKquF,aAAa9/E,QACb,IAAKy/E,GAAYE,EACtBluF,KAAKqtF,cAAcR,UAAUt+E,OACxB,CACL,IAAM+/E,EAAatuF,KAAKqtF,cAAcb,cAAcj+E,GACpDvO,KAAKqtF,cAAcN,cACduB,GACHtuF,KAAKqtF,cAAcT,UAAUr+E,KAWnC4+E,GAAQ31C,YAAYl9C,UAAU+zF,aAAe,SAAS9/E,GACpD,IAAMggF,EAAYrB,GAAeX,UAAUh+E,GACrC7U,EAAOsG,KAAKqtF,cAAc3zF,KAEhC,IAAIsG,KAAKqtF,cAAcb,cAAcj+E,GAArC,CAQA,IAFA,IAAIigF,OAAgBtuF,EACduuF,KACGz0F,EAAI,EAAGA,EAAIN,EAAKQ,OAAQF,IAAK,CACpC,IAAM00F,EAAah1F,EAAKM,GAGpBu0F,IAFerB,GAAeX,UAAUmC,GAG1CF,EAAgBx0F,EACPgG,KAAKqtF,cAAcb,cAAckC,IAC1CD,EAAgBr0F,KAAKJ,GAGzB8uC,EAAA,EAAYxlC,YAAyBpD,IAAlBsuF,GAEW,GAA1BC,EAAgBv0F,QAElB8F,KAAKqtF,cAAcT,UAAUr+E,GAM/B,IAFA,IAAIo5E,EAAWnrE,IACXmyE,EAAgBF,EAAgB,GAC3BvzF,EAAI,EAAGA,EAAIuzF,EAAgBv0F,OAAQgB,IAAK,CAC/C,IAAM0zF,EAAaH,EAAgBvzF,GAC7B2zF,EAAkBjzE,KAAKuX,IAAIy7D,EAAaJ,GAC1C7G,EAAWkH,IACblH,EAAWkH,EACXF,EAAgBC,GASpB,IAHA,IACME,EAAYN,EAAgBG,EAAiBH,EAAgBG,EAE1DhzF,EAHW6yF,EAAgBG,EAAiBH,EAAgBG,EAG5ChzF,GAAKmzF,EAAUnzF,IACtCqE,KAAKqtF,cAAcT,UAAUlzF,EAAKiC,MAWtCwxF,GAAQ31C,YAAYl9C,UAAUy0F,qBAAuB,SAASvsE,GAC5D,IAAMwrE,EAAWhuF,KAAKiuF,gBAAgBzrE,GAChC0rE,EAAsBluF,KAAKmuF,2BAA2B3rE,IAExDwrE,GAAYE,IACd1rE,EAAM67B,kBAWV8uC,GAAQ31C,YAAYl9C,UAAU6zF,2BAA6B,SAAS3rE,GAClE,OAAQA,EAAMwsE,SACXzuF,GAAA,EAAYiiB,EAAMysE,QAAUzsE,EAAM0sE,WAClC1sE,EAAMwrE,UAUXb,GAAQ31C,YAAYl9C,UAAU2zF,gBAAkB,SAASzrE,GACvD,OACGA,EAAMwsE,UACHxsE,EAAMysE,SAAWzsE,EAAM0sE,UACzB1sE,EAAMwrE,UAIZb,GAAQ38D,WAAW,qBAAsB28D,GAAQ31C,aAGlC,IAAA23C,GAAA,8BCjRTC,GAAUtnF,QAAQpM,OAAO,yBAC7B2zF,GAAA,EAAgB3zF,OAAOK,KACvBgM,GAAA,EAAoBhM,KACpBozF,GAAkBpzF,KAClBmxF,GAAexxF,OAAOK,KACtBgnF,GAAA,EAAyBrnF,OAAOK,KAChCwlF,GAAA,EAAoB7lF,OAAOK,OA6B7B,SAASuzF,GAA+B73C,EAAUlqB,EAAQ+hE,GACxD,OAAOA,EAA+B73C,EAAUlqB,GA1BlD6hE,GAAQ7yF,MAAM,iCAMZ,SAACk7C,EAAUlqB,GACT,IAAMgqB,EAAchqB,EAAA,+BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,4BAIN63C,GAAQr4C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,0BAA2B57C,EAAQ,2EAuDxD+zF,GAAQl4C,YACN1mB,WAAY,wCACZ+zC,UACEnzD,OAAU,8BACVm+E,gBAAmB,oCACnBC,uBAA0B,2CAC1BC,SAAY,0BACZC,qBAAwB,0CACxBC,aAAgB,kCAChBC,kBAAqB,uCACrBC,UAAa,kCAEft4C,YAAa+3C,IAIfF,GAAQ1qB,UAAU,sBAAuB0qB,GAAQl4C,YAqBjDk4C,GAAQ53C,YAAc,SAAS73C,EAAW0tB,EAAQ4O,EAAiB2lD,EACjEwB,EAAuBhtD,EAAU05D,EAAiBr4C,GAAU,IAAAp1C,EAAArC,KAEtD+vF,EACJpwF,EAAUY,IAAI,oBACZZ,EAAUtD,IAAI,uBAMlB2D,KAAK6kE,QAAUx3C,EAMfrtB,KAAKw2B,UAAYJ,EAMjBp2B,KAAKi8B,gBAAkBA,EAMvBj8B,KAAK8hF,gBAAkBF,EAMvB5hF,KAAKgwF,iBAAmBF,EAMxB9vF,KAAK4kE,UAAYntB,EAMjBz3C,KAAKiwF,gBAAoC/vF,IAAvB6vF,EAAaxzD,MAAsBwzD,EAAaxzD,MAAQ,GAM1Ev8B,KAAKoR,QAAS,EAMdpR,KAAKo9B,SAAU,EAMfp9B,KAAKkwF,eAOLlwF,KAAKmwF,qBAOLnwF,KAAKowF,YAAc,KAMnBpwF,KAAKqwF,qBAAsB,EAM3BrwF,KAAKswF,gBAMLtwF,KAAK6vF,aAQL7vF,KAAKuwF,uBAQLvwF,KAAK+vD,UAAY,IAAI5jB,GAAA,EAMrBnsC,KAAKirF,uBAAyB7H,EAM9BpjF,KAAKwwF,mBAAqB,IAAIrkD,GAAA,EAO9BnsC,KAAKywF,UAAY9wF,EAAUY,IAAI,kBAC7BZ,EAAUtD,IAAI,kBAAoB,oBAMpC2D,KAAKgvC,KAAO,KAGZhvC,KAAK6kE,QAAQ/H,iBACX,kBAAM7gC,GACN,SAACy0D,EAAgBC,GACXD,IAAmBC,GACrBtuF,EAAKuuF,gBAUX5wF,KAAK6wF,yBAA2B,MA5JlCzB,GAAQ53C,8IAkKR43C,GAAQ53C,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKqwF,sBAAsBrwF,KAAA,uBAAkE,IAAnCA,KAAA,uBAC1DA,KAAKswF,gBAAkBtwF,KAAA,kBAA4BA,KAAA,yBAA8BE,EAEjF,IAAM4wF,EAAkB9wF,KAAKirF,uBAAuBr+D,oBACpDkkE,EAAgB7gC,YAAYjwD,KAAK+vD,WACjC,IAAMghC,EAAgB/wF,KAAA,uBACAE,IAAlB6wF,IACFjoD,EAAA,EAAY1d,iBAAiB2lE,EAAepR,GAAA,GAC5CmR,EAAgBx4E,SAASy4E,IAG3B,IAAMC,EAA2BhxF,KAAKirF,uBAAuBr+D,oBAC7DokE,EAAyB/gC,YAAYjwD,KAAKwwF,oBAC1C,IAAIS,EAAwBjxF,KAAA,yBAC5B,QAA8BE,IAA1B+wF,EACFnoD,EAAA,EAAY1d,iBAAiB6lE,EAAuBtR,GAAA,OAC/C,CACL,IAAMjlE,EAAO,IAAIklE,GAAA,GAAahmE,OAAQ,IAAK,EAAG,EAAG,MAC3CE,EAAS,IAAIo3E,GAAA,GAAet3E,OAAQ,IAAK,EAAG,EAAG,GAAIG,MAAO,IAChEk3E,EAAwB,IAAItR,GAAA,GAC1BjlE,KAAMA,EACNF,MAAO,IAAI+xC,GAAA,GACT7xC,KAAMA,EACND,OAAQ,EACRX,OAAQA,IAEVA,OAAQA,EACRyC,OAAQ,KAGZy0E,EAAyB14E,SAAS24E,GAElC,IAAME,EAAQnxF,KAAA,SACd,GAAImxF,EAAO,CACT,IAAMvsF,EAAMusF,IACZroD,EAAA,EAAY1d,iBAAiBxmB,EAAK2jF,GAAA,GAClCvoF,KAAKgvC,KAAOpqC,IAShBwqF,GAAQ53C,YAAYl9C,UAAU82F,eAAiB,WAAW,IAAArrF,EAAA/F,KACxD,OAAOA,KAAKmwF,kBAAkBvrF,IAAI,SAAAysF,GAAA,OAAetrF,EAAKmqF,YAAYmB,MAOpEjC,GAAQ53C,YAAYl9C,UAAUs2F,YAAc,WAAW,IAAA/pF,EAAA7G,KAErD,GAAmC,IAA/BA,KAAKi8B,gBAAgBqB,QAAgBt9B,KAAKsxF,4BAA6B,CACzE,IAAM1Q,EAAY5gF,KAAKoR,OAOvB,OANApR,KAAK0sB,aACDk0D,IAEF5gF,KAAKoR,OAASpR,KAAKi8B,gBAAgBmB,QACnCp9B,KAAKo9B,QAAUp9B,KAAKi8B,gBAAgBmB,UAKxCp9B,KAAKoR,QAAS,EACdpR,KAAKo9B,SAAU,EACf,IAAIG,EAAUv9B,KAAKi8B,gBAAgBsB,QAE/BljC,OAAO0iD,KAAK/8C,KAAK6vF,WAAW31F,OAAS,IACvCqjC,EAAUv9B,KAAKuxF,kBAAkBh0D,IAInCA,EAAQv6B,QAAQ,SAACwiB,GACXA,EAAOiY,eACT52B,EAAK2qF,UAAU,KAAMhsE,IAErBA,EAAOK,GAAKhf,EAAK4qF,YAAYjsE,EAAOK,IACnBL,EAAO7H,SACXzjB,OAAS,GACpB2M,EAAK6qF,aAAalsE,MAKc,IAAlCxlB,KAAKmwF,kBAAkBj2F,OAOF,OAArB8F,KAAKowF,aAA0B,GAAIpwF,KAAKowF,eAAkBpwF,KAAKkwF,aAGjElwF,KAAKw2B,UAAU,WACb,IAAMm7D,EAAgB9qF,EAAKspF,kBAAkB,GAC7CtpF,EAAK+qF,UAAU/qF,EAAKqpF,YAAYyB,KAC/B,GAXH3xF,KAAKoR,QAAS,GAoBlBg+E,GAAQ53C,YAAYl9C,UAAUg3F,0BAA4B,WACxD,OAAOtxF,KAAKi8B,gBAAgBsB,QAAQv3B,KAAK,SAAAwf,GAAA,OAAUA,EAAOiY,kBAS5D2xD,GAAQ53C,YAAYl9C,UAAUm3F,YAAc,SAASl1F,GAEnD,GAAIshC,OAAOg0D,UAAiCt1F,GAC1C,OAAOA,EAEP,IAAMu1F,EAAW,uCACjB,OAA8B,OAA1Bv1F,EAAM2pD,MAAM4rC,GACPv1F,EAAM6oB,QAAQ0sE,EAAU,KAExBv1F,GAYb6yF,GAAQ53C,YAAYl9C,UAAUg0F,WAAa,SAASyD,GAClD,OAAO/xF,KAAKowF,cAAgB2B,EAAWvsE,OAAOjgB,OAUhD6pF,GAAQ53C,YAAYl9C,UAAUi3F,kBAAoB,SAASh0D,GAAS,IAAA5E,EAAA34B,KAC5DgyF,KAEAC,KAYN,IAAK,IAAMC,KAVX30D,EAAQv6B,QAAQ,SAACwiB,GAIM,OAFAmT,EAAKw5D,iBAAiB3sE,EAAQysE,IAIjDD,EAAW53F,KAAKorB,KAISysE,EAC3BD,EAAW53F,KAAK63F,EAAcC,IAGhC,OAAOF,GAcT5C,GAAQ53C,YAAYl9C,UAAU63F,iBAAmB,SAAS3sE,EAAQysE,GAChE,IAAIG,EAAgB,KAEpB,IAAK,IAAMC,KAAwBryF,KAAK6vF,UAAW,CAGjD,GAFqB7vF,KAAK6vF,UAAUwC,GACArsF,KAAK,SAAAqrF,GAAA,OAAeA,GAAe7rE,EAAOjgB,QAC1D,CAClB6sF,EAAgBC,EAChB,OAIJ,GAAsB,OAAlBD,EAEF,OAAO,KAIT,IAAIE,SAmCJ,OAlCIF,KAAiBH,EACnBK,EAAcL,EAAcG,IAE5BE,GACE30E,YACAkI,GAAIusE,EACJ7sF,MAAO6sF,EACP71D,MAAOv8B,KAAKiwF,WACZ7yD,SAAS,EACTI,SAAS,EACTC,gBAAgB,EAChBC,uBAAmBx9B,GAErB+xF,EAAcG,GAAiBE,GAIjC9sE,EAAO7H,SAAS3a,QAAQ,SAACuV,GACvB+5E,EAAY30E,SAASvjB,KAAKme,KAK5B+5E,EAAY70D,eAAiB60D,EAAY70D,gBAAkBjY,EAAOiY,eAC9D60D,EAAY70D,iBACd60D,EAAY50D,uBAAuDx9B,IAAlCoyF,EAAY50D,kBAC3C40D,EAAY50D,kBAAoB40D,EAAY30E,SAASzjB,OAASo4F,EAAY30E,SAASzjB,OACrFo4F,EAAY30E,kBAEmBzd,IAA7BslB,EAAOkY,oBACT40D,EAAY50D,uBAAuDx9B,IAAlCoyF,EAAY50D,kBAC3C40D,EAAY50D,kBAAoBlY,EAAOkY,kBAAoBlY,EAAOkY,mBAG/D40D,GASTlD,GAAQ53C,YAAYl9C,UAAUo3F,aAAe,SAASlsE,GACpD,IACM+sE,KACAC,KACAC,KACFr1E,SAAYs1E,UAJCltE,EAAO7H,SAKf3a,QAAQ,SAACuV,QAEGrY,KADnBkd,EAAa7E,EAAQ8E,mBAGnBq1E,EAAsBn6E,EAAQ+E,mBAC+B,IAAzDk1E,EAAuBhxE,QAAQkxE,IACjCF,EAAuBp4F,KAAKs4F,GAG9BH,EAAcn4F,KAAKgjB,GACnBq1E,EAAkBvF,GAAeX,UAAUnvE,IAAe7E,KAI9DvY,KAAK2yF,iBAAiBJ,EAAeC,GACjCD,EAAcr4F,OAAS,KACL8F,KAAKwxF,UAAUe,EAAe/sE,KAEhDxlB,KAAKuwF,oBAAL,GAA4B/qE,EAAOjgB,OAAWktF,KAYpDrD,GAAQ53C,YAAYl9C,UAAUq4F,iBAAmB,SAC/CJ,EAAeC,GACfD,EAAcvvF,QAAQ,SAACoa,GACrBo1E,EAAuBxvF,QAAQ,SAAC0vF,UACvBt1E,EAAWs1E,YAEbt1E,EAAA,iBACAA,EAAA,sBAGwB,IAA7Bpd,KAAKqwF,qBACPrwF,KAAK4yF,sBAAsBL,IAU/BnD,GAAQ53C,YAAYl9C,UAAUs4F,sBAAwB,SACpDL,GAEA,IAAMM,KACF74F,SAAG4W,SACP,IAAKA,KAAO2hF,EAAc,GACxB,IAAKv4F,EAAI,EAAGA,EAAIu4F,EAAcr4F,OAAQF,IACpC,QAA8BkG,IAA1BqyF,EAAcv4F,GAAG4W,GAAoB,CACvCiiF,EAAWz4F,KAAKwW,GAChB,MAKN,IAAIkiF,SACJP,EAAcvvF,QAAQ,SAACoa,GAErB,IAAKxM,KADLkiF,KACY11E,GACuB,IAA7By1E,EAAWrxE,QAAQ5Q,IACrBkiF,EAAY14F,KAAKwW,GAIrBkiF,EAAY9vF,QAAQ,SAAC4N,UACZwM,EAAWxM,QAYxBw+E,GAAQ53C,YAAYl9C,UAAUk3F,UAAY,SAAS93F,EAAM8rB,GACvD,IAAM6rE,KAAiB7rE,EAAOjgB,MAC1BwtF,EAAa,KACjB,OAAa,OAATr5F,GAEiB,QADnBq5F,EAAa/yF,KAAKgzF,sBAAsBt5F,QAKU,GAAhDsG,KAAKmwF,kBAAkB3uE,QAAQ6vE,IACjCrxF,KAAKmwF,kBAAkB/1F,KAAKi3F,GAE9BrxF,KAAKkwF,YAAYmB,IACfhE,cAAe0F,EACfvtE,OAAQA,IAEH,IAST4pE,GAAQ53C,YAAYl9C,UAAU04F,sBAAwB,SACpDt5F,GACAovC,EAAA,EAAYxlC,OAAO5J,EAAKQ,OAAS,GACjC,IAAMqkB,KACNlkB,OAAOgrB,OAAO9G,EAAO7kB,EAAK,WACnB6kB,EAAM00E,OACb,IAGM5G,KAON,OAVgBhyF,OAAO0iD,KAAKx+B,GAIpBvb,QAAQ,SAACkwF,GACf7G,EAAWjyF,MACT2B,KAAMm3F,MAIN7G,EAAWnyF,OAAS,EACf,IAAIgzF,GAAexzF,EAAM2yF,GAGzB,MAUX+C,GAAQ53C,YAAYl9C,UAAUoyB,MAAQ,WACpC1sB,KAAKoR,QAAS,EACdpR,KAAKo9B,SAAU,EACfp9B,KAAKkwF,eACLlwF,KAAKmwF,qBACLnwF,KAAKowF,YAAc,KACnBpwF,KAAKy9B,gBAAiB,EACtBz9B,KAAK+vD,UAAUrjC,QACf1sB,KAAKwwF,mBAAmB9jE,QACxB1sB,KAAK8hF,gBAAgBp1D,QACrB1sB,KAAKuwF,uBACDvwF,KAAK6wF,0BACP7wF,KAAK6wF,4BAUTzB,GAAQ53C,YAAYl9C,UAAUs3F,UAAY,SAASG,GAAY,IAAAl5D,EAAA74B,KACvDwlB,EAASusE,EAAWvsE,OAC1BxlB,KAAKowF,YAAc5qE,EAAOjgB,MAEtBvF,KAAK6wF,2BACP7wF,KAAK6wF,2BACL7wF,KAAK6wF,yBAA2B,MAGD,OAA7BkB,EAAW1E,gBACbrtF,KAAK6wF,yBAA2B7wF,KAAK6kE,QAAQ/H,iBAC3C,kBAAMi1B,EAAW1E,cAAcf,cAC/B,SAAC6G,EAAaC,GACR/4F,OAAO0iD,KAAKo2C,KAAiB94F,OAAO0iD,KAAKq2C,IAC3Cv6D,EAAKw6D,yBAIbrzF,KAAKszF,gBAAgBvB,GAErB/xF,KAAKuzF,eAOPnE,GAAQ53C,YAAYl9C,UAAUi5F,YAAc,WAM1C,IAAM1tE,EAAK7lB,KAAKyxF,YAAYzxF,KAAKowF,aAAe,IAC1CoD,EAAaxzF,KAAK4kE,UAAUnoB,KAAf,gBAAoC52B,GACvD2tE,EAAWC,YAAY,UAAUrlC,SAAS,UAC1CpuD,KAAKw2B,UAAU,WACbg9D,EAAW/2C,KAAK,uCAAhB,QAAkE,aAStE2yC,GAAQ53C,YAAYl9C,UAAU+4F,oBAAsB,WAClD,GAAyB,OAArBrzF,KAAKowF,YAAT,CAIA,IAAM2B,EAAa/xF,KAAKkwF,YAAL,GAAoBlwF,KAAKowF,aAC5CpwF,KAAKszF,gBAAgBvB,KAQvB3C,GAAQ53C,YAAYl9C,UAAUg5F,gBAAkB,SAASvB,GAIvD,GAHA/xF,KAAK+vD,UAAUrjC,QACf1sB,KAAKwwF,mBAAmB9jE,QAES,OAA7BqlE,EAAW1E,cAAf,CAIA,IAAMgE,KAAiBU,EAAWvsE,OAAOjgB,MACnCktF,EAAoBzyF,KAAKuwF,oBAAoBc,GAC7C/E,EAAeyF,EAAW1E,cAAcf,aAE9C,IAAK,IAAMU,KAASyF,EAAmB,CACrC,IAAMl6E,EAAUk6E,EAAkBzF,GAC9BA,KAASV,EACXtsF,KAAKwwF,mBAAmBp2F,KAAKme,GAE7BvY,KAAK+vD,UAAU31D,KAAKme,MAW1B62E,GAAQ53C,YAAYl9C,UAAUo5F,oBAAsB,WAClD,OAAyB,OAArB1zF,KAAKowF,YACA,KAEApwF,KAAKkwF,YAAL,GAAoBlwF,KAAKowF,cAUpChB,GAAQ53C,YAAYl9C,UAAUq5F,cAAgB,WAC5C,IAAMnuE,EAASxlB,KAAK0zF,sBACpB,OAAe,OAAXluE,GAA4C,OAAzBA,EAAO6nE,eAGrB7nE,EAAO6nE,cAAcZ,mBAAqB,GAUrD2C,GAAQ53C,YAAYl9C,UAAUs5F,oBAAsB,WAClD,IAAMpuE,EAASxlB,KAAK0zF,sBACpB,OAAe,OAAXluE,GAA4C,OAAzBA,EAAO6nE,cACrB,EAEA7nE,EAAO6nE,cAAcZ,oBAShC2C,GAAQ53C,YAAYl9C,UAAUwyF,UAAY,WACxC,IAAMtnE,EAASxlB,KAAK0zF,sBACL,OAAXluE,GACFA,EAAO6nE,cAAcP,aASzBsC,GAAQ53C,YAAYl9C,UAAUyyF,YAAc,WAC1C,IAAMvnE,EAASxlB,KAAK0zF,sBACL,OAAXluE,GACFA,EAAO6nE,cAAcN,eASzBqC,GAAQ53C,YAAYl9C,UAAU2yF,gBAAkB,WAC9C,IAAMznE,EAASxlB,KAAK0zF,sBACL,OAAXluE,GACFA,EAAO6nE,cAAcJ,mBASzBmC,GAAQ53C,YAAYl9C,UAAUu5F,gBAAkB,WAE9C,GAAe,OADA7zF,KAAK0zF,sBACC,CACnB,IAAMh0E,EAASo0E,GAAA,IACf9zF,KAAKwwF,mBAAmBxtF,QAAQ,SAACuV,GAC/Bu7E,GAAA,EAAgBp0E,EAAQnH,EAAQ+D,cAAc4D,eAEhD,IAAM5F,EAAOta,KAAKgvC,KAAK1vB,UACvBwpB,EAAA,EAAYxlC,YAAgBpD,IAAToa,GACnB,IAAMy5E,EAAU/zF,KAAKswF,gBACrBtwF,KAAKgvC,KAAKvvB,UAAU4xB,IAAI3xB,GAASpF,OAAMy5E,cAS3C3E,GAAQ53C,YAAYl9C,UAAU05F,YAAc,WAC1C,IAAMxuE,EAASxlB,KAAK0zF,sBACpB,GAAe,OAAXluE,EAAiB,CACnB,IAAM6mE,EAAa7mE,EAAO6nE,cAAchB,WACxCvjD,EAAA,EAAYxlC,YAAsBpD,IAAfmsF,GACnB,IAAMC,EAAe9mE,EAAO6nE,cAAcX,kBAE1C1sF,KAAKgwF,iBAAiBiE,cACpB3H,EAAcD,EAAYrsF,KAAKywF,aAKrCrB,GAAQ5+D,WAAW,gCACjB4+D,GAAQ53C,aAGK,IAAA08C,GAAA,GC95BTC,GAAUrsF,QAAQpM,OAAO,oBA+B/By4F,GAAQlyC,QAAQ,kBAAmB,WAEjC,IAEMmyC,GACJC,OACEljF,MAAO,YACPmjF,KAAM,YACNpjF,IAAK,WAEPqjF,OACEpjF,MAAO,aACPmjF,KAAM,YACNpjF,IAAK,WACLunB,OAAQ,eAEV+7D,SACErjF,MAAO,cACPmjF,KAAM,cACNpjF,IAAK,YACLunB,OAAQ,kBAIZ,SAAS1b,EAAeyF,GACtB,IAAMmhD,EAAgBnhD,EAAMmhD,eAAiBnhD,EACvCiyE,EAAU9wB,EAAc8wB,SAAW9wB,EAAc8wB,QAAQv6F,OAASypE,EAAc8wB,SAAW9wB,GAC3FwB,EAAKxB,EAAc+wB,gBAAkB/wB,EAAc+wB,eAAe,IAAOD,EAAQ,GAEvF,OACE3vF,EAAGqgE,EAAEwvB,QACLr0E,EAAG6kD,EAAEyvB,SAIT,SAASC,EAAUC,EAAcC,GAC/B,IAAM9lF,KAON,OANAnH,QAAQ9E,QAAQ8xF,EAAc,SAACE,GAC7B,IAAMC,EAAYb,EAAeY,GAAaD,GAC1CE,GACFhmF,EAAI7U,KAAK66F,KAGNhmF,EAAI7H,KAAK,KAGlB,OAqCEpK,KArCK,SAqCA4sB,EAASsrE,EAAeJ,GAE3B,IAAIK,SAAQC,SAERC,SAEAC,SAEAlkF,GAAS,EAEb0jF,EAAeA,IAAiB,QAAS,QAAS,WAClDlrE,EAAQ+R,GAAGk5D,EAAUC,EAAc,SAAU,SAACtyE,GAC5C6yE,EAAct4E,EAAeyF,GAC7BpR,GAAS,EACT+jF,EAAS,EACTC,EAAS,EACTE,EAAUD,EACNH,EAAA,OACFA,EAAA,MAAuBG,EAAa7yE,KAGxC,IAAM8sB,EAASulD,EAAUC,EAAc,UACnCxlD,GACF1lB,EAAQ+R,GAAG2T,EAAQ,SAAC9sB,GAClBpR,GAAS,EACL8jF,EAAA,QACFA,EAAA,OAAwB1yE,KAK9BoH,EAAQ+R,GAAGk5D,EAAUC,EAAc,QAAS,SAACtyE,GAC3C,GAAKpR,GAUAikF,EAAL,CAGA,IAAMxnC,EAAS9wC,EAAeyF,GAO9B,GALA2yE,GAAUv5E,KAAKuX,IAAI06B,EAAO/oD,EAAIwwF,EAAQxwF,GACtCswF,GAAUx5E,KAAKuX,IAAI06B,EAAOvtC,EAAIg1E,EAAQh1E,GAEtCg1E,EAAUznC,IAENsnC,EArIiB,IAqIcC,EArId,IA0IrB,OAAID,EAASC,GAEXhkF,GAAS,OACL8jF,EAAA,QACFA,EAAA,OAAwB1yE,MAK1BA,EAAM67B,sBACF62C,EAAA,MACFA,EAAA,KAAsBrnC,EAAQrrC,QAKpCoH,EAAQ+R,GAAGk5D,EAAUC,EAAc,OAAQ,SAACtyE,GACrCpR,IAGLA,GAAS,EACL8jF,EAAA,KACFA,EAAA,IAAqBn4E,EAAeyF,GAAQA,WAOtD2xE,GAAQoB,oBAAsB,SAASC,EAAeC,EAAWR,GAC/Dd,GAAQphD,UAAUyiD,GAAgB,SAAU,iBAAkB,SAASjjD,EAAQmjD,GAE7E,IAAMC,EAA0B,GAE1BC,EAAuB,GAEvBC,EAAwB,GAE9B,OAAO,SAASnjD,EAAO9oB,EAASm7C,GAC9B,IAAM+wB,EAAevjD,EAAOwyB,EAAKywB,IAE7BH,SAAaU,SAuBjB,IAAMjB,GAAgB,SACjBhtF,QAAQkuF,UAAUjxB,EAAA,wBACrB+vB,EAAa16F,KAAK,SAEpBs7F,EAAe14F,KAAK4sB,GAClBzY,MAAS,SAAS08C,EAAQrrC,GACxB6yE,EAAcxnC,EACdkoC,GAAQ,GAEVt9D,OAAU,SAASjW,GACjBuzE,GAAQ,GAEV7kF,IAAO,SAAS28C,EAAQrrC,IAjC1B,SAAoBqrC,GASlB,IAAKwnC,EACH,OAAO,EAET,IAAMY,GAAUpoC,EAAOvtC,EAAI+0E,EAAY/0E,GAAKm1E,EACtCS,EAASt6E,KAAKuX,IAAI06B,EAAO/oD,EAAIuwF,EAAYvwF,GAC/C,OAAOixF,GACHG,EAASP,GACTM,EAAS,GACTA,EAASJ,GACTK,EAASD,EAASL,GAgBhBO,CAAWtoC,IACbnb,EAAMkB,OAAO,WACXhqB,EAAQwsE,eAAenB,GACvBa,EAAapjD,GAAQ2jD,OAAQ7zE,QAIlCsyE,QAMTX,GAAQoB,oBAAoB,gBAAiB,EAAG,aAChDpB,GAAQoB,oBAAoB,eAAgB,EAAG,WAGhC,IAAAe,GAAA,GCjPTC,gCAAUzuF,QAAQpM,OAAO,2BAC7BqnF,GAAA,EAAyBrnF,OAAOK,KAChCgwC,GAAA,EAAsBrwC,OAAOK,KAC7Bu6F,GAAcv6F,KACdwlF,GAAA,EAAoB7lF,OAAOK,KAC3B,YACA,aAwCF,SAASy6F,GAAiC/+C,EAAUlqB,EAAQipE,GAC1D,OAAOA,EAAiC/+C,EAAUlqB,GArCpDgpE,GAAQllF,QAAQ,mBAMd,SAASolF,GACPA,EAAiBC,gBAAgB,qBAKrCH,GAAQh6F,MAAM,mCAMZ,SAACk7C,EAAUlqB,GACT,IAAMgqB,EAAchqB,EAAA,iCACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,8BAGNg/C,GAAQx/C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,4BAA6B57C,EAAQ,6EA+C1Dk7F,GAAQr/C,YACN1mB,WAAY,0CACZ+zC,UACEoyB,qBAAwB,8CACxBpH,gBAAmB,sCACnBC,uBAA0B,6CAC1BoH,mBAAsB,0CACtBC,QAAW,gCACXC,oBAAuB,6CAEzBv/C,YAAai/C,IAIfD,GAAQ7xB,UAAU,wBAAyB6xB,GAAQr/C,YAgBnDq/C,GAAQ/+C,YAAc,SAASC,EAAUpqB,EAAQ4O,EAAiB2lD,EAChEwB,GAAuB,IAAA/gF,EAAArC,KAMvBA,KAAK22F,qBAML32F,KAAK62F,SAAU,EAQf72F,KAAK+2F,WAAa/2F,KAAK62F,QAMvB72F,KAAKg3F,sBAAuB,EAO5Bh3F,KAAKi3F,eAAiBz5D,SAAW,GAMjCx9B,KAAKi8B,iBACHsB,WACAD,MAAO,EACPF,SAAS,GAOXp9B,KAAK8hF,gBAAkBF,EAMvB5hF,KAAKk3F,eAAiB,KAMtBl3F,KAAK+vD,UAAY,IAAI5jB,GAAA,EAMrBnsC,KAAKirF,uBAAyB7H,EAM9BpjF,KAAKwwF,mBAAqB,IAAIrkD,GAAA,EAM9BnsC,KAAKwlB,OAAS,KAMdxlB,KAAKuY,QAAU,KAMfvY,KAAKm3F,eAAiB,EAMtBn3F,KAAKo3F,QAAS,EAMdp3F,KAAKmgB,QAAU,EAMfngB,KAAKo+C,MAAO,EAMZp+C,KAAK+3C,SAAWN,EAEhBpqB,EAAOyvC,iBACL,kBAAM7gC,GACN,SAACy0D,EAAgBC,GACftuF,EAAKg1F,mBAAmB3G,GACpBA,EAAepzD,MAAQ,EACzBj7B,EAAKwgB,OACI8tE,IAAmBD,GAC5BruF,EAAK45C,WA7Hbs6C,GAAQ/+C,qGAqIR++C,GAAQ/+C,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAK22F,qBAAuB32F,KAAK22F,sBAAwB,WACzD32F,KAAK62F,QAAU72F,KAAK62F,QACpB72F,KAAK+2F,UAAY/2F,KAAA,oBACkB,IAAjCA,KAAA,sBAAyCA,KAAK62F,QAEhD72F,KAAKg3F,uBAAuBh3F,KAAA,sBACM,IAAhCA,KAAA,oBAEFA,KAAKi3F,cAAgBj3F,KAAKg3F,yBAA6Bx5D,SAAW,GAElE,IAAMszD,EAAkB9wF,KAAKirF,uBAAuBr+D,oBACpDkkE,EAAgB7gC,YAAYjwD,KAAK+vD,WACjC,IAAMghC,EAAgB/wF,KAAA,uBACAE,IAAlB6wF,IACFjoD,EAAA,EAAY1d,iBAAiB2lE,EAAepR,GAAA,GAC5CmR,EAAgBx4E,SAASy4E,IAG3B,IAAMC,EAA2BhxF,KAAKirF,uBAAuBr+D,oBAC7DokE,EAAyB/gC,YAAYjwD,KAAKwwF,oBAC1C,IAAIS,EAAwBjxF,KAAA,yBAC5B,QAA8BE,IAA1B+wF,EACFnoD,EAAA,EAAY1d,iBAAiB6lE,EAAuBtR,GAAA,OAC/C,CACL,IAAMjlE,EAAO,IAAIklE,GAAA,GAAahmE,OAAQ,IAAK,EAAG,EAAG,MAC3CE,EAAS,IAAIo3E,GAAA,GAAet3E,OAAQ,IAAK,EAAG,EAAG,GAAIG,MAAO,IAChEk3E,EAAwB,IAAItR,GAAA,GAC1BjlE,KAAMA,EACNF,MAAO,IAAI+xC,GAAA,GACT7xC,KAAMA,EACND,OAAQ,EACRX,OAAQA,IAEVA,OAAQA,IAGZk3E,EAAyB14E,SAAS24E,GAE9BjxF,KAAK62F,UACP72F,KAAK+3C,SAAS0E,KAAK,4CAA4CwoB,WAC7DxsC,OAAU,yCACV6+D,YAAet3F,KAAK22F,uBAEtB32F,KAAK+3C,SAAS0E,KAAK,4CAA4C+nB,WAC7D+yB,UAAa,IACbC,SAAY,QAYlBjB,GAAQ/+C,YAAYl9C,UAAUuoB,KAAO,WACnC7iB,KAAK0sB,QACL1sB,KAAKszF,mBAOPiD,GAAQ/+C,YAAYl9C,UAAUg5F,gBAAkB,WAC9CtzF,KAAKy3F,kBAAkB,GAAG,GACN,OAAhBz3F,KAAKwlB,SACPxlB,KAAK03F,mBACL13F,KAAK23F,2BACL33F,KAAKo+C,MAAO,IAYhBm4C,GAAQ/+C,YAAYl9C,UAAUm9F,kBAAoB,SAChD3yD,EAAU8yD,GACV,IAAIC,GAAa,EACjB,GAAI/yD,IAAa9kC,KAAKm3F,cAAe,CACnC,IAAIn9F,SAAGwrB,SAAQ7H,SACTm6E,EAAc93F,KAAKuY,QACnBglB,EAAUv9B,KAAKi8B,gBAAgBsB,QAErC,IADAv9B,KAAKm3F,cAAgBryD,EAChB9qC,EAAI,EAAGA,EAAIujC,EAAQrjC,OAAQF,IAE9B,GADAwrB,EAAS+X,EAAQvjC,GACW,OAAxBgG,KAAKk3F,gBAA2Bl3F,KAAKk3F,iBAAmB1xE,EAA5D,CAKA,KAAIsf,IADJnnB,EAAW6H,EAAO7H,UACOzjB,QAElB,CACL8F,KAAKwlB,OAASA,EACdxlB,KAAKuY,QAAUiN,EAAO7H,SAASmnB,GAC/B+yD,GAAa,EACb,MALA/yD,GAAYnnB,EAASzjB,OAQrB09F,GACF53F,KAAK23F,yBAAyBG,GAGlC,OAAOD,GASTtB,GAAQ/+C,YAAYl9C,UAAUw5E,SAAW,WACvC,IAAIhvC,EAAW9kC,KAAKm3F,cAAgB,EAChCryD,EAAW,IACbA,EAAW9kC,KAAK+3F,kBAAoB,GAEnB/3F,KAAKy3F,kBAAkB3yD,GAAU,IAElD9kC,KAAKg4F,UAAS,IAUlBzB,GAAQ/+C,YAAYl9C,UAAU6S,KAAO,WACnC,IAAI23B,EAAW9kC,KAAKm3F,cAAgB,EAEhCryD,EADgB9kC,KAAK+3F,kBAAoB,IAE3CjzD,EAAW,GAEM9kC,KAAKy3F,kBAAkB3yD,GAAU,IAElD9kC,KAAKg4F,UAAS,IAUlBzB,GAAQ/+C,YAAYl9C,UAAU+8F,mBAAqB,SAASY,GAC1Dj4F,KAAKi8B,gBAAgBqB,MAAQ,EAC7Bt9B,KAAKi8B,gBAAgBsB,QAAQrjC,OAAS,EACtC,IAAK,IAAIF,EAAI,EAAGA,EAAIi+F,EAAY16D,QAAQrjC,OAAQF,IAAK,CACnD,IAAMwrB,EAASyyE,EAAY16D,QAAQvjC,GACnCwrB,EAAO7H,SAAW6H,EAAO7H,SAASzY,OAAO,SAACqT,GAExC,OADAuwB,EAAA,EAAYxlC,OAAOiV,IACXogE,EAAA,EAAc5sC,GAAA,EAAsB5uB,yBAAyB5E,MAEvEvY,KAAKi8B,gBAAgBsB,QAAQnjC,KAAKorB,GAClCxlB,KAAKi8B,gBAAgBqB,OAAS9X,EAAO7H,SAASzjB,SAUlDq8F,GAAQ/+C,YAAYl9C,UAAUy9F,gBAAkB,WAC9C,OAA4B,OAAxB/3F,KAAKk3F,eACAl3F,KAAKi8B,gBAAgBqB,MAErBt9B,KAAKk3F,eAAev5E,SAASzjB,QASxCq8F,GAAQ/+C,YAAYl9C,UAAU49F,QAAU,WACtC,OAA6B,GAAtBl4F,KAAKm3F,eAQdZ,GAAQ/+C,YAAYl9C,UAAU69F,OAAS,WACrC,OAAOn4F,KAAKm3F,eAAiBn3F,KAAK+3F,kBAAoB,GAUxDxB,GAAQ/+C,YAAYl9C,UAAU89F,iBAAmB,WAC/C,OAAKp4F,KAAKuY,QAGHwzB,GAAA,EAAsB5uB,yBAAyBnd,KAAKuY,SAFlD,MAeXg+E,GAAQ/+C,YAAYl9C,UAAU09F,SAAW,SAASZ,GAChDp3F,KAAKo3F,OAASA,EACdp3F,KAAKmgB,WAQPo2E,GAAQ/+C,YAAYl9C,UAAUo9F,iBAAmB,WAC/C,IAAMn6D,EAAUv9B,KAAKi8B,gBAAgBsB,QACrCv9B,KAAK+vD,UAAUrjC,QACf,IAAK,IAAI1yB,EAAI,EAAGA,EAAIujC,EAAQrjC,OAAQF,IAAK,CACvC,IAAMwrB,EAAS+X,EAAQvjC,GACvB,GAA4B,OAAxBgG,KAAKk3F,gBAA2Bl3F,KAAKk3F,iBAAmB1xE,EAK5D,IADA,IAAM7H,EAAW6H,EAAO7H,SACfxc,EAAK,EAAGA,EAAKwc,EAASzjB,OAAQiH,IACrCnB,KAAK+vD,UAAU31D,KAAKujB,EAASxc,MAYnCo1F,GAAQ/+C,YAAYl9C,UAAUq9F,yBAC9B,SAASU,GACPr4F,KAAKwwF,mBAAmB9jE,QACxB1sB,KAAK+vD,UAAUngB,OAAO5vC,KAAKuY,SAC3BvY,KAAKwwF,mBAAmBp2F,KAAK4F,KAAKuY,cACVrY,IAApBm4F,GACFr4F,KAAK+vD,UAAU31D,KAAKi+F,IAUxB9B,GAAQ/+C,YAAYl9C,UAAU2hD,MAAQ,WACpCj8C,KAAKo+C,MAAO,EACZp+C,KAAK0sB,QACL1sB,KAAK8hF,gBAAgBp1D,SASvB6pE,GAAQ/+C,YAAYl9C,UAAUoyB,MAAQ,WACpC1sB,KAAKuY,QAAU,KACfvY,KAAKwlB,OAAS,KACdxlB,KAAKm3F,eAAiB,EACtBn3F,KAAK+vD,UAAUrjC,QACf1sB,KAAKwwF,mBAAmB9jE,QACxB1sB,KAAKk3F,eAAiB,MAQxBX,GAAQ/+C,YAAYl9C,UAAUg+F,kBAAoB,SAAS9yE,GAC1C,OAAXA,GAAmBA,EAAO7H,SAASzjB,QAAU,IAIjD8F,KAAK0sB,QACL1sB,KAAKk3F,eAAiB1xE,EACtBxlB,KAAKszF,oBAIPiD,GAAQ/lE,WAAW,kCACjB+lE,GAAQ/+C,aAGK,IAAA+gD,GAAA,GC7jBAC,kBANC1wF,QAAQpM,OAAO,uBAC7Bw4F,GAAsBn4F,KACtBw8F,GAAwBx8F,4BCGX08F,WANC3wF,QAAQpM,OAAO,mBAC7Bg9F,GAAA,EAAmB38F,KACnB48F,GAAA,EAAwBj9F,OAAOK,kBCA3B68F,GAAU9wF,QAAQpM,OAAO,6BAC7Bm9F,GAAA,EAAgBn9F,OAAOK,KACvB64E,EAAA,EAAel5E,OAAOK,OA2BxB,SAAS+8F,GAA4BvrE,EAAQurE,GAC3C,OAAOA,EAA4BvrE,GAxBrCqrE,GAAQ7hD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+B57C,EAAQ,SAI5Du9F,GAAQr8F,MAAM,8BAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,4BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,oFAkENqhD,GAAQ1hD,YACNqtB,UACEr/D,OAAU,2BAEZsrB,WAAY,6BACZ+mB,YAAauhD,IAGfF,GAAQl0B,UAAU,mBAAoBk0B,GAAQ1hD,YAa9C0hD,GAAQphD,YAAc,SAASnqB,EAAQ0rE,EAAiBziE,GAMtDt2B,KAAK+4F,gBAAkBA,EAMvB/4F,KAAK42B,WAAaN,EAMlBt2B,KAAKkB,OAMLlB,KAAKkF,OAMLlF,KAAKqnC,iBAELrnC,KAAKqnC,cAAcjtC,KAAKk1C,EAAA,EAAgBtvC,KAAK42B,WAAY,SAAU52B,KAAKg5F,WAAYh5F,OAEpFqtB,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QAlClD44F,GAAQphD,6DA2CRohD,GAAQphD,YAAYl9C,UAAU0+F,WAAa,WAAW,IAAA32F,EAAArC,KACpDA,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GAEtCmB,EAAKnB,OAASmB,EAAK6C,OAAShE,EAAOgE,OAAO7C,EAAK6C,QAAUhE,KAW7D03F,GAAQphD,YAAYl9C,UAAU2+F,SAAW,SAAS73F,EAAOw2B,GACnDx2B,GACFpB,KAAK+4F,gBAAgBt5C,SAASr+C,EAAOw2B,IAQzCghE,GAAQphD,YAAYl9C,UAAUkgD,eAAiB,WAC7Cx6C,KAAKqnC,cAAcrkC,QAAQssC,EAAA,GAC3BtvC,KAAKqnC,cAAcntC,OAAS,GAI9B0+F,GAAQpoE,WAAW,6BACjBooE,GAAQphD,aAGK,IAAA0hD,GAAA,GCnLAC,GAPCrxF,QAAQpM,OAAO,kBAC7Bw9F,GAA0Bn9F,KAC1B88F,GAAA,EAAgBn9F,OAAOK,KACvB64E,EAAA,EAAel5E,OAAOK,sQCCxB,IAAMq9F,GAAUtxF,QAAQpM,OAAO,qCAC7B,eA0BF,SAAS29F,GAAoC9rE,EAAQ8rE,GACnD,OAAOA,EAAoC9rE,GAvB7C6rE,GAAQriD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,sCAAuC57C,EAAQ,SAIpE+9F,GAAQ78F,MAAM,sCAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,oCACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,oGAiBN6hD,GAAQ5hD,YAAR,WAYE,SAAAmtB,EAAYltB,EAAUjV,EAAMnV,EAAQmhC,gGAAU8qC,CAAAt5F,KAAA2kE,GAQ5C3kE,KAAKu5F,aAMLv5F,KAAKuxC,QAAU,KAKfvxC,KAAKw5F,gBAAkB,KAKvBx5F,KAAKy5F,aAAe,KAMpBz5F,KAAKilE,UAMLjlE,KAAK22F,qBAML32F,KAAK62F,QAML72F,KAAKwvD,OAAS,KAMdxvD,KAAKo+C,KAMLp+C,KAAKwkE,UAMLxkE,KAAKkvC,MAAQ,KAMblvC,KAAKuD,IAAM,KAMXvD,KAAK+Z,MAAQ,KASb/Z,KAAK+3C,SAAWN,EAMhBz3C,KAAK2uD,KAAOnsB,EAMZxiC,KAAKmmC,OAAS9Y,EAMdrtB,KAAK05F,SAAWlrC,EArHpB,OAAAmW,EAAA9nC,SAAA,uCAAA8nC,EAAArqE,UA2HEw/C,QA3HF,WA6JI,GA/BA95C,KAAKu5F,cAAqC,IAAtBv5F,KAAKu5F,aACzBv5F,KAAKuxC,QAAUvxC,KAAKuxC,SAAW,KAC/BvxC,KAAKw5F,gBAAkBx5F,KAAKw5F,iBAAmB,KAC/Cx5F,KAAKy5F,aAAez5F,KAAKy5F,cAAgB,KACzCz5F,KAAK62F,SAA2B,IAAjB72F,KAAK62F,QACpB72F,KAAK22F,qBAAuB32F,KAAK22F,sBAAwB,WACzD32F,KAAKo+C,MAAqB,IAAdp+C,KAAKo+C,KACjBp+C,KAAKwvD,OAASxvD,KAAKwvD,QAAU,QAC7BxvD,KAAK+Z,MAAQ/Z,KAAK+Z,OAAS,QAE3B/Z,KAAKilE,eAA+B/kE,IAAnBF,KAAKilE,UACpBjlE,KAAKilE,UAAYjlE,KAAK62F,QACxB72F,KAAKwkE,eAA+BtkE,IAAnBF,KAAKwkE,UACpBxkE,KAAKwkE,UAAYxkE,KAAK62F,QAGpB72F,KAAKilE,WACPjlE,KAAK+3C,SAAS0E,KAAK,wCAAwCwoB,WACzDqyB,YAAet3F,KAAK22F,qBACpBgD,OAAU,eAKV35F,KAAKwkE,WACPxkE,KAAK+3C,SAAS0E,KAAK,wCAAwC+nB,WACzD+yB,UAAa,IACbC,SAAY,MAIZx3F,KAAKw5F,gBAAiB,CACxB,IAAM9mD,EAAQ5J,EAAA,EAAYxlC,OAAOtD,KAAKy5F,cAAgBz5F,KAAKmmC,QACrDyzD,EAAW55F,KAAK05F,SAAS15F,KAAKw5F,gBAAnBx5F,CAAoC0yC,GAC/B1yC,KAAK+3C,SAAS0E,KAAK,6DAC3BoS,OAAyB+qC,KAjK7Cj1B,EAAArqE,UAwKE2hD,MAxKF,WAyKIj8C,KAAKo+C,MAAO,EACRp+C,KAAKu5F,cACPv5F,KAAK65F,UA3KXl1B,EAAArqE,UAuMEu/F,OAvMF,WAwMI75F,KAAKuxC,QAAU,KACfvxC,KAAKkvC,MAAQ,KACblvC,KAAKuD,IAAM,MA1Mfu2F,GAAAn1B,IAAA/zD,IAAA,QAAAvU,IAAA,WAoLI,OACEmzD,OAAUxvD,KAAKwvD,OACfz1C,MAAS/Z,KAAK+Z,UAtLpBnJ,IAAA,aAAAvU,IAAA,WA+LI,GAAI2D,KAAKuD,IACP,OAA8BvD,KAAK2uD,KAAKorC,mBAAmB/5F,KAAKuD,SAhMtEohE,EAAA,GA4PAy0B,GAAQ10B,UAAU,qBAChBH,UACEg1B,aAAgB,KAChBhoD,QAAW,KACXioD,gBAAmB,KACnBC,aAAgB,KAChB5C,QAAW,KACX5xB,UAAa,KACb0xB,qBAAwB,KACxBnnC,OAAU,KACVpR,KAAQ,KACRomB,UAAa,KACbt1B,MAAS,KACT3rC,IAAO,KACPwW,MAAS,MAEXyW,WAAY4oE,GAAQ5hD,YACpBD,YAAa8hD,KAIA,IAAAW,GAAA,gCCxTTC,GAAUnyF,QAAQpM,OAAO,kBAuB/Bu+F,GAAQ/iD,WAAa,WACnB,OACE1E,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GAErB,IAAMunD,EACGxnD,EAAM5kB,MAAM6kB,EAAA,aACrB7J,EAAA,EAAY1d,iBAAiB8uE,EAASC,GAAA,GAEtC,IAAMv1F,EACG8tC,EAAM5kB,MAAM6kB,EAAA,gBACrB7J,EAAA,EAAY1d,iBAAiBxmB,EAAK2jF,GAAA,GAElC2R,EAAQ1R,UAAU5+D,EAAQ,IAC1BhlB,EAAIonF,WAAWkO,MAMrBD,GAAQlnD,UAAU,cAAeknD,GAAQ/iD,YAG1B,IAAAkjD,GAAA,uBCvDTC,GAAUvyF,QAAQpM,OAAO,qBAwB/B2+F,GAAQnjD,WAAa,SAAS2N,GAC5B,OACErS,SAAU,IACVE,OACE4nD,YAAe,kBACfr9E,UAAa,6BAOfw1B,KAAM,SAACC,EAAO9oB,EAAS+oB,GACrB,IAAM11B,EAAY,eAAgB4nC,EAClCnS,EAAA,UAAqBz1B,EAChBA,GAGL2M,EAAQ+R,GAAG,SAAU,SAAC4+D,GAEpB,IAAMC,EAAa,IAAI31C,EAAQ41C,WAC/BD,EAAWE,OAIT,SAASvvE,GACPunB,EAAMkB,OAAO,WACXlB,EAAA,YAAuBvnB,EAAIE,OAAOtwB,UAGxCy/F,EAAWG,WAAWJ,EAAYlvE,OAAOuvE,MAAM,SA9BvDP,GAAQnjD,+BAqCRmjD,GAAQtnD,UAAU,iBAChBsnD,GAAQnjD,YAGK,IAAA2jD,GAAA,GCjETC,GAAUhzF,QAAQpM,OAAO,6BAe/Bo/F,GAAQr5C,SAAW,SAASoD,GAC1B,gBAKWk2C,GACP,IAAMC,EAAMn2C,EAAQvjC,UAChB25E,EAAmBD,EAAIE,WAAaF,EAAIG,UACtCH,EAAII,iBAAmBJ,EAAIK,gBAAkBL,EAAIM,aAQvD,OAPKzuF,MAAMC,QAAQmuF,KACjBA,GAAoBA,KAItBA,GAFAA,EAAmBA,EAAiBr2F,IAAI,SAAApC,GAAA,OAAQA,EAAK0f,UAAU,EAAG,MAE9Bhd,OAAO,SAAC1C,EAAMgkB,EAAO8/C,GAAd,OAAsBA,EAAI9kD,QAAQhf,IAASgkB,KAC1CthB,OAAO,SAAA1C,GAAA,OAA6C,GAArCu4F,EAAmBv5E,QAAQhf,KAC5D,KAjBhCs4F,GAAQr5C,6BAqBRq5C,GAAQ74C,QAAQ,yBAA0B64C,GAAQr5C,UAGnC,IAAA85C,GAAA,uBCJAC,GAnBC1zF,QAAQpM,OAAO,uBAC7B+/F,GAAA,EAAuB//F,OAAOK,KAC9B2/F,GAAA,EAAqB3/F,KACrBq+F,GAAyBr+F,KACzBgiF,GAAA,EAA4BhiF,KAC5B4/F,GAAA,EAAiB5/F,KACjBu/E,GAAA,EAAoB5/E,OAAOK,KAC3BgwC,GAAA,EAAsBrwC,OAAOK,KAC7Bq2C,GAAA,EAAa12C,OAAOK,KACpB8+F,GAA4B9+F,KAC5BsvF,GAAA,EAAgBtvF,KAChBw/F,GAA2Bx/F,KAC3B6/F,GAAA,EAA0B7/F,KAC1B8/F,GAAA,EAAangG,OAAOK,KACpBiiF,GAAA,EAAwBtiF,OAAOK,KAC/BiwC,EAAA,EAAgBtwC,OAAOK,OC7BnB+/F,GAAUh0F,QAAQpM,OAAO,gBAC7B6lF,GAAA,EAAoB7lF,OAAOK,OAiC7B+/F,GAAQ5tC,WAAa,SAAS0zB,EAAgBjiF,GAC5C,OACE6yC,SAAU,IACVE,OAAO,EACPD,KAAM,SAACC,EAAOqpD,EAAMppD,GAClB,IAAM/tC,EAAM8tC,EAAM5kB,MAAM6kB,EAAA,iBACpBqpD,EAAiB,KACjBC,EAAuB,KAOrBx+C,EAAkB,SAAStyB,GAC/B,IAAM8I,EAAa9I,EAAI8I,WACvB2tD,EAAe9kD,OACb7I,aACArvB,SAUE6mD,EAAqB,SAAStgC,GAClC,IAAKA,EAAI0I,SAAU,CACjB,IAAM8pB,EAAQ/4C,EAAIs5C,cAAc/yB,EAAIw4C,eAM9Bu4B,EAAMt3F,EAAIu3F,oBAAoBx+C,EAAO,kBAAM,QAAMz9C,EALrC,SAASuC,GACzB,IAAMmjB,EAAUnjB,EAAMpG,IAAI,WACpB+/F,EAAY35F,EAAMpG,IAAI,kBAC5B,OAAOupB,KAAaw2E,IAGtBx3F,EAAI26D,mBAAmBxmD,MAAMymD,OAAS08B,EAAM,UAAY,KAmC5DxpD,EAAM9kB,OAAO+kB,EAAA,mBACX,SAAC/8B,EAAQiY,GACHjY,GA7BNomF,EAAiB1sD,EAAA,EAAgB1qC,EAAK,cAAe64C,IAEnD99C,EAAUY,IAAI,oBAAsBZ,EAAUtD,IAAI,wBAEnCggG,cACfJ,EAAuB3sD,EAAA,EAAgB1qC,EAAK,cAAe6mD,MAQtC,OAAnBuwC,IACF1sD,EAAA,EAAuB0sD,GACvBA,EAAiB,MAEU,OAAzBC,IACF3sD,EAAA,EAAuB2sD,GACvBA,EAAuB,OAE2B,IAAhDvpD,EAAM5kB,MAAM6kB,EAAA,wBACdivC,EAAel1D,cAnEzBovE,GAAQ5tC,kDAqFR4tC,GAAQ/oD,UAAU,eAAgB+oD,GAAQ5tC,YAG3B,IAAAouC,GAAA,gCC/ETC,GAAsB,SAAS78F,EAAOu8B,EAAiBugE,GAAyB,IAAAn6F,EAAArC,KAE9EgI,EAAUw0F,EAMhBx8F,KAAKytC,KAAOzlC,EAAQzE,IAMpBvD,KAAKy8F,kBAAuCv8F,IAAxB8H,EAAQivD,YAA4BjvD,EAAQivD,YAAc,GAM9Ej3D,KAAK08F,aAEL5zD,EAAA,EAAYvpB,YAAYvX,EAAQ20F,SAAU,iCAC1C30F,EAAQ20F,SAAS35F,QAAQ,SAAC45F,GACxBv6F,EAAKq6F,UAAUE,EAAQ9uF,aAAe8uF,IAOxC58F,KAAK68F,kBAAoB70F,EAAQ80F,iBAMjC98F,KAAK+8F,sBAAwB/0F,EAAQg1F,qBAMrCh9F,KAAKi9F,mBAAqBj1F,EAAQk1F,kBAMlCl9F,KAAKK,OAASX,EAMdM,KAAKq8B,QAAUJ,qIAQjBsgE,GAAoBjiG,UAAUoyB,MAAQ,WACpC1sB,KAAKm9F,gBAYPZ,GAAoBjiG,UAAUwiC,MAAQ,SAAS7a,EAAWrd,GACxDkkC,EAAA,EAAYxlC,OAAOtD,KAAKytC,KACtB,6FAEFztC,KAAKm9F,eAEL,IAAMC,EAAWn7E,EAAU26E,QAC3B,GAAK58F,KAAK08F,UAAUniG,eAAe6iG,GAAnC,CAGA,IAAMR,EAAU58F,KAAK08F,UAAUU,GAEzBl8C,EAAUlhD,KAAKq9F,eAAep7E,EAAUq7E,cAC9B,OAAZp8C,GAIJlhD,KAAKu9F,cAAcX,EAAS17C,EAASt8C,EAAKqd,EAAUu7E,gBAWtDjB,GAAoBjiG,UAAUijG,cAAgB,SAASX,EAAS13F,EAAQN,EAAK44F,GAAc,IAAAz3F,EAAA/F,KACnFsN,EAAY,IAAIo9B,GAAA,EAChB6tB,EAAoBjrD,EAAU0qD,iBAClCluB,QAASllC,EAAI6a,UAAUgyB,gBAAgBylB,UACvCrpD,eAAkC3N,IAAtB08F,EAAQ/uF,UAClB+uF,EAAQ/uF,UAAY7N,KAAK68F,kBAC3BplC,mBAA0Cv3D,IAA1B08F,EAAQnlC,cACtBmlC,EAAQnlC,cAAgBz3D,KAAK+8F,sBAC/BrmC,cAAekmC,EAAQ9uF,aACvB4pD,aAAc,OACdxyD,OAAQA,EACR+xD,YAAaj3D,KAAKy8F,eAGdjkC,GAAiB,IAAI7tB,eAAgBC,kBAAkB2tB,GAI7Dv4D,KAAKK,OAAOghD,KAAKrhD,KAAKytC,KAAM+qB,GAF1BlX,SAAUC,eAAgB,6BAEwB59C,KAAK,SAACC,GACxD,IAAM+Z,EAAWrQ,EAAUqkC,aAAa/tC,EAASlK,MACjD,GAAuB,GAAnBikB,EAASzjB,OAAb,CAKA,IAAMogB,EAAO1V,EAAI0a,UACjB,QAAapf,IAAToa,EAAoB,CACtB,IAAMy5E,EAAUhuF,EAAKk3F,mBAErBr4F,EAAI6a,UAAU4xB,IAAItrC,EAAK03F,WAAW9/E,IAAYrD,OAAMy5E,UAAS2J,SAD5C,GAAI,GAAI,GAAI,MAK/B,GAAIF,EAAc,CAChB,IAAMG,GACJhgF,SAAYA,EACZkI,GAAM+2E,EAAQ9uF,YACdorE,yBAA4B0jB,EAAQr3F,MACpCA,MAASq3F,EAAQ9uF,YACjBsvB,SAAW,GAGbr3B,EAAKs2B,QAAQkB,QAAQnjC,KAAKujG,GAC1B53F,EAAKs2B,QAAQiB,MAAQ3f,EAASzjB,YAWpCqiG,GAAoBjiG,UAAUmjG,WAAa,SAAS9/E,GAClD,OAAOA,EAASigF,OAAO,SAACl+E,EAAQnH,GAAT,OAAqBu7E,GAAA,EAAgBp0E,EAAQnH,EAAQ+D,cAAc4D,cAAc4zE,GAAA,MAU1GyI,GAAoBjiG,UAAU+iG,eAAiB,SAASC,GACtD,GAA2B,GAAvBA,EAAapjG,OACf,OAAO,KAET,IAAMonE,EAAIt3B,GAYV,OAAOuyD,GAAoBsB,IAAIP,EAAa14F,IAXd,SAASk5F,GACrC,IAAM58C,EAAU48C,EAAY58C,QAAQt8C,IAAI,SAACm5F,GACvC,IAAM7gG,EAAY6gG,EAAU7gG,UAC5B,OAAI2P,MAAMC,QAAQ5P,GACTq/F,GAAoBsB,IAAI3gG,EAAU0H,IAAI,SAAAo5F,GAAA,OAAQ18B,EAAE28B,QAAQF,EAAUphG,SAAUqhG,MAE5E18B,EAAE28B,QAAQF,EAAUphG,SAAUohG,EAAU7gG,aAGnD,OAAOq/F,GAAoB2B,KAAKh9C,OAapCq7C,GAAoB2B,KAAO,SAASh9C,GAClC,OAAOq7C,GAAoB4B,aAAaj9C,EAASlX,GAAA,MAWnDuyD,GAAoBsB,IAAM,SAAS38C,GACjC,OAAOq7C,GAAoB4B,aAAaj9C,EAASlX,GAAA,KAanDuyD,GAAoB4B,aAAe,SAASj9C,EAASk9C,GACnD,OAAOl9C,EAAQ08C,OAAO,SAACS,EAAiBC,GACtC,OAAwB,OAApBD,EACKC,GAEPx1D,EAAA,EAAYxlC,OAAyB,OAAlBg7F,GACZF,EAAOC,EAAiBC,KAEhC,OASL/B,GAAoBjiG,UAAU6iG,aAAe,WAC3Cn9F,KAAKq8B,QAAQiB,MAAQ,EACrBt9B,KAAKq8B,QAAQkB,QAAQv6B,QAAQ,SAACwiB,GAC5BA,EAAO7H,SAASzjB,OAAS,MAQ7BqiG,GAAoB7gG,OAASoM,QAAQpM,OAAO,wBASjBa,MAAM,2BAE7BgH,IAAK,GACLo5F,YACAG,iBAAkB,GAClBE,qBAAsB,KAK1BT,GAAoB7gG,OAAOqM,QAAQ,mBAAoBw0F,IAGxC,IAAAgC,GAAA,GChRTC,GAAU,SAASntF,EAAQgc,EAAQ1tB,GAAW,IAAAoG,EAAA/F,KAMlDA,KAAK0lD,aAAe/lD,EAAUtD,IAAI,gBAC9B2D,KAAK0lD,aAAar+C,SAAS,WAE7BvK,OAAO8vC,SAAWjtC,GAGpBmpC,EAAA,EAAY1d,iBAAiBprB,KAAK4E,IAAK2jF,GAAA,GAMb5oF,EAAUtD,IAAI,qBACtB+b,cAAc0wB,EAAA,EAAYxlC,OAAOtD,KAAK4E,IAAI6a,UAAUgyB,kBAMtEzxC,KAAK+4F,gBAAkBp5F,EAAUtD,IAAI,mBAMrC2D,KAAKu/C,gBAAkB5/C,EAAUtD,IAAI,kBAOrC2D,KAAK42B,WAAaj3B,EAAUtD,IAAI,aAOhC2D,KAAKy+F,WAAa9+F,EAAUtD,IAAI,gBAMhC,IAAMqiG,EAAoB/+F,EAAUtD,IAAI,4BAMxC2D,KAAK6F,mBAAoB,EAKzB7F,KAAK2+F,yBAA2B,WAAW,IAAAt8F,EAAArC,KACzCA,KAAK42B,WAAW/wB,oBAAoBlC,KAAK,SAACkC,GACxCxD,EAAKwD,kBAAoBA,KAO7B,IAAM+4F,EAAa,SAACzzE,GAClB,IAAM+9B,EAAO/9B,EAAIxI,OAAOumC,KAClB21C,EAA4B,OAAlB31C,EAAKE,SAAqBF,EAAKL,aAAU3oD,EAIzD6F,EAAK6wB,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAMynD,EAAkB5iD,EAAK6gD,QAAQ+B,gBACjCA,GACAA,EAAgBm2C,YACkB,iBAAlCn2C,EAAgBm2C,WAAW,KAC7B/4F,EAAKg5F,sBAAuB,KAKhC,IAAMC,EAAoBj5F,EAAKgzF,gBAAgBp5C,eAC/C55C,EAAKgzF,gBAAgBr5C,aAAa,IAAI,GACrB,UAAbv0B,EAAI9tB,MACN0I,EAAKk5F,oBAAoBD,GAG3Bj5F,EAAK6wB,WAAWjwB,WAAWk4F,GAC3B94F,EAAK44F,4BAGPrvD,EAAA,EAAgBovD,EAAmB,QAASE,GAC5CtvD,EAAA,EAAgBovD,EAAmB,QAASE,GAC5CtvD,EAAA,EAAgBovD,EAAmB,SAAUE,GAM7C5+F,KAAKk/F,oBACHC,SAAU,QACVC,YAA6Cz/F,EAAUtD,IAAI,mBAC3DgjG,aAA8C1/F,EAAUtD,IAAI,oBAC5Dgc,oBAAoBhH,EAAOiuF,MAAQ,OACnC/7F,IAA6B5D,EAAUtD,IAAI,uBAO7C2D,KAAK4C,cAGL5C,KAAKy+F,WAAWhnB,cAAcz3E,KAAK4C,YAGnC,IAAM28F,EAAwB5/F,EAAUtD,IAAI,yBAM5C,GAJAkjG,EAAsB/nB,iBAAiBx3E,KAAK4E,KAE5C26F,EAAsB9nB,cAAcz3E,KAAK4C,YAErCjD,EAAUY,IAAI,wBAAyB,CAEzC,IAAMi/F,EAAoB7/F,EAAUtD,IAAI,wBACxC,IAAK,IAAMojG,KAAOD,OACat/F,IAAzBF,KAAK4C,WAAW68F,KAClBz/F,KAAK4C,WAAW68F,GAAOD,EAAkBC,IAS/Cz/F,KAAKo1E,oBAAsBz1E,EAAUtD,IAAI,0BAGzCgxB,EAAOyvC,iBAAiB,kBAAM/2D,EAAKnD,YAAY,WAC7CmD,EAAKqvE,oBAAoB/uD,iBAAiBtgB,EAAKnB,IAAKmB,EAAKnD,cAG3D5C,KAAKo1E,oBAAoBz5C,GAAG,SAAU,WACpC51B,EAAKqvE,oBAAoB/uD,iBAAiBtgB,EAAKnB,IAAKmB,EAAKnD,cAO3D5C,KAAK0/F,gBAAiB,EAMtB1/F,KAAK2/F,iBAAkB,EAEvB,IAAMC,EAAY,IAAIhgB,GAAA,GAAahmE,OAAQ,IAAK,IAAK,EAAG,MAClDimF,EAAc,IAAI3O,GAAA,GAAet3E,OAAQ,IAAK,IAAK,EAAG,GAAIG,MAAO,IAOvE/Z,KAAK8/F,kBAAoB,IAAIngB,GAAA,GAC3BjlE,KAAMklF,EACNplF,MAAO,IAAI+xC,GAAA,GACT7xC,KAAMklF,EACNnlF,OAAQ,EACRX,OAAQ+lF,IAEV/lF,OAAQ+lF,IAOV7/F,KAAK++F,sBAAuB,EAO5B/+F,KAAK+/F,aAAc,EAOnB//F,KAAKggG,gBAAiB,EAMtBhgG,KAAKigG,kBAAmB,EAMxBjgG,KAAKkgG,aAAc,EAMnBlgG,KAAK8hF,gBAAkBniF,EAAUtD,IAAI,kBAGrCgxB,EAAOO,OAAO,kBAAM7nB,EAAKk6F,kBAAkB,SAACrqF,GAGrCA,GAAW7P,EAAKg6F,aACnBh6F,EAAK+7E,gBAAgBp1D,QAEvB3mB,EAAKi6F,gBAAkBpqF,EACvB7P,EAAKm6F,YAActqF,IAQrB5V,KAAKmgG,oBAAqB,EAO1BngG,KAAKogG,qBAAsB,EAM3BpgG,KAAKqgG,mBAAoB,EAMzBrgG,KAAKsgG,wBAAyB,EAM9BtgG,KAAK4mD,QAAUjnD,EAAUtD,IAAI,WAK7B2D,KAAKu7F,mBAAqB57F,EAAUtD,IAAI,0BAKxC2D,KAAKugG,aAAe5gG,EAAUtD,IAAI,oBAKlC2D,KAAKwgG,iBAAmB7gG,EAAUtD,IAAI,oBAKtC2D,KAAKqtB,OAASA,EAMdrtB,KAAK+5C,KAML/5C,KAAKygG,YAAc9gG,EAAUtD,IAAI,eAMjC2D,KAAK0gG,SAAW/gG,EAAUtD,IAAI,YAM9B2D,KAAKF,eAAiBH,EAAUtD,IAAI,kBAEpC2D,KAAK2gG,eAQL3gG,KAAK4gG,cANY,WAYajhG,EAAUtD,IAAI,yBACtBywB,KAAK9sB,KAAK4E,KAMhC,IAAMkzC,EAAsBn4C,EAAUtD,IAAI,uBAEpCwkG,EAAoB,IAAIvhB,GAAA,EAAqBt/E,KAAM,eACzD83C,EAAoB1R,aAtBH,WAsB0By6D,GAAmB,GAE9D,IAAMC,EAAuB,IAAIxhB,GAAA,EAAqBt/E,KAAM,sBAC5D83C,EAAoB1R,aAzBH,WAyB0B06D,GAAsB,GAEjE,IAAMC,EAAwB,IAAIzhB,GAAA,EAAqBt/E,KAAM,uBAC7D83C,EAAoB1R,aA5BH,WA4B0B26D,GAAuB,GAElE,IAAMC,EAAsB,IAAI1hB,GAAA,EAAqBt/E,KAAM,qBAC3D83C,EAAoB1R,aA/BH,WA+B0B46D,GAAqB,GAEhE,IAAMC,EAA2B,IAAI3hB,GAAA,EAAqBt/E,KAAM,0BAChE83C,EAAoB1R,aAlCH,WAkC0B66D,GAA0B,GAErE,IAAMC,EAAqB,IAAI5hB,GAAA,EAAqBt/E,KAAM,oBAC1D83C,EAAoB1R,aArCH,WAqC0B86D,GAAoB,GAE/D7zE,EAAO8zE,MAAMjzE,IAAI2qE,GAAA,EAAgB/4C,UAAUC,eAAgB,SAACv9B,EAAOzmB,GACjEgK,EAAK6wB,WAAWnxB,eAAe1J,GAAM4H,KAAK,SAACvC,GACzC2E,EAAKq7F,sBAAsBhgG,OAS/BpB,KAAKqhG,8BAAgC,SAASC,GAAe,IAAAz6F,EAAA7G,KAC3DA,KAAK42B,WAAWx0B,cAAcuB,KAAK,SAACW,GAClC,IAAIi9F,SAKJ,GAJKD,IAEHC,EAAa16F,EAAK43F,WAAW+C,mBAAmBl9F,KAE7Ci9F,EAAY,CAEf,IAAM54C,EAAkB9hD,EAAK+/C,QAAQ+B,gBACrC,GAAIA,EAAiB,CACnB,IAAM84C,EAAsB94C,EAAgB+4C,gBAC5C,GAAID,EAAoBvnG,OAAS,EAAG,CAClC,IAAMynG,EAAsBF,EAAoB,GAChDF,EAAax+F,EAAA,EAAauB,EAAQ,SAAA7B,GAAA,OAASA,EAAMpG,IAAI,WAAaslG,OAInEJ,GAAcj9F,EAAO,KAGxBi9F,EAAaj9F,EAAO,IAGlBi9F,GACF16F,EAAKuuE,oBAAoB1yE,IAAImE,EAAKjC,IAAK28F,MAG3CvkG,KAAKgD,MAEPA,KAAKqhG,+BAA8B,GAKnC,IAAMO,EAAO9kG,OAAO8kG,SAIpB9kG,OAAO8kG,KAAOA,EAWdA,EAAKC,gBAAkB,SACrBt+F,EAAK2rC,EAAO4yD,EAAWC,EAAYC,GAEnCj8F,EAAKk8F,iBAAmB1+F,EACxBq+F,EAAKM,WAAWhzD,EAAO4yD,EAAWC,EAAYC,IAYhDJ,EAAKO,cAAgB,SACnB5wD,EAASrC,EAAO4yD,EAAWC,EAAYC,GAEvCj8F,EAAKq8F,qBAAuB7wD,EAC5BqwD,EAAKM,WAAWhzD,EAAO4yD,EAAWC,EAAYC,IAShDJ,EAAKM,WAAa,SAAChzD,EAAO4yD,EAAWC,EAAYC,GAE/Cj8F,EAAKs8F,mBAAqBnzD,EAC1BnpC,EAAKu8F,mBAAoB,EAErBR,IACF/7F,EAAKw8F,mBAAwBT,EAA7B,MAEEC,IACFh8F,EAAKy8F,oBAAyBT,EAA9B,OAEgB,IAAdC,GACFj8F,EAAKsnB,OAAOumB,UAShB5zC,KAAK+qF,cAAe,EASpB/qF,KAAK2oF,iBAEL,IAAM8Z,EAAO3lG,OAAO2lG,SAIpB3lG,OAAO2lG,KAAOA,EAIdA,EAAKC,MAAQ5lG,OAAO2lG,KAAKC,UAUzBD,EAAKC,MAAMC,eAAiB,SAASp/F,EAAK2rC,EAAO4yD,EAAWC,EAAYC,GACtEJ,EAAKC,gBAAgBt+F,EAAK2rC,EAAO4yD,EAAWC,EAAYC,IAO1DhiG,KAAKoiG,qBAAuB,KAM5BpiG,KAAK4iG,kCAAoC,WAMzC5iG,KAAKwiG,oBAAsB,OAM3BxiG,KAAKsiG,mBAAoB,EAMzBtiG,KAAKqiG,mBAAqB,KAM1BriG,KAAKiiG,iBAAmB,KAMxBjiG,KAAKuiG,mBAAqB,8FAS5B/D,GAAQlkG,UAAUg5E,0BAA4B,WAC5C,OAA4C,IAArCtzE,KAAK4mD,QAAQiB,qBAStB22C,GAAQqE,iBAAmB,SAASv+F,EAAQw+F,GAC1C,OAAIA,GAAUA,EAAO5oG,OAAS,EACrB6I,EAAA,EAAauB,EAAQ,SAAA7B,GAAA,OAASA,EAAMpG,IAAI,WAAaymG,EAAO,KAE9D,MAQTtE,GAAQlkG,UAAUyoG,eAAiB,SAAShpD,GAC1CjR,EAAA,EAAYxlC,OAAOy2C,KAAQ/5C,KAAK0gG,UAChC1gG,KAAKF,eAAekjG,mBAAmBjpD,GACvC/5C,KAAKF,eAAemjG,WAAWjjG,KAAK0gG,SAAS3mD,IAC7C/5C,KAAKwgG,iBAAiB99F,IAAIq3C,GAC1B/5C,KAAK+5C,KAAOA,GAMdykD,GAAQlkG,UAAUqmG,aAAe,WAAW,IAAAhoE,EAAA34B,KAC1CA,KAAKqtB,OAAOO,OAAO,kBAAM+K,EAAKohB,MAAM,SAACjH,GACnCna,EAAK4nE,aAAapoE,aAChB4hB,KAAQjH,MAIZ,IAAMsoD,EACDp7F,KAAKu7F,mBAAmBlhG,OAAO0iD,KAAK/8C,KAAK0gG,WACxCwC,EACDljG,KAAKugG,aAAal6C,gBAAgB,QAEvC,YAAoBnmD,IAAhBgjG,GAA6BA,KAAeljG,KAAK0gG,cACnD1gG,KAAK+iG,eAAeG,QAEShjG,IAApBk7F,GAAiCA,KAAmBp7F,KAAK0gG,cAClE1gG,KAAK+iG,eAAe3H,QAMpBp7F,KAAK+iG,eAAe/iG,KAAKygG,cAU7BjC,GAAQlkG,UAAU8mG,sBAAwB,SAAShgG,GAAO,IAAAy3B,EAAA74B,KACxDA,KAAK42B,WAAWx0B,cAAcuB,KAAK,SAACW,GAClC,IAAI7B,WAGJA,EAAQo2B,EAAK4lE,WAAW+C,mBAAmBl9F,KAE7Bu0B,EAAK+tB,QAAQ+B,kBAEzBlmD,EAAQ+7F,GAAQqE,iBAAiBv+F,EAAQu0B,EAAK+tB,QAAQ+B,gBAAgB+4C,mBAGnEj/F,GAASrB,IAEZqB,EAAQ+7F,GAAQqE,iBAAiBv+F,EAAQlD,EAAMunD,gBAAgB+4C,kBAG5Dj/F,IAEHA,EAAQ6B,EAAOA,EAAOpK,OAAS,EAAI,EAAI,IAGzC4uC,EAAA,EAAYxlC,OAAOb,GACnBo2B,EAAKu8C,oBAAoB1yE,IAAIm2B,EAAKj0B,IAAKnC,MAQ3C+7F,GAAQlkG,UAAU2kG,oBAAsB,SAASkE,GAAmB,IAAA9pE,EAAAr5B,KAClEA,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAMe,EAAYo3B,EAAKolE,WAAW2E,sCAClC,GAAInhG,EAAW,CACb,IAAMb,EAAQwzE,EAAA,EAAe5yE,gBAAgBd,EAA+Be,GACxEb,GACFi4B,EAAK0/D,gBAAgBt5C,SAASr+C,GAAO,QAGvCi4B,EAAK0/D,gBAAgBr5C,aAAayjD,MASxC3E,GAAQlkG,UAAU+oG,gBAAkB,WAClC,IAAMC,EAAQnxE,SAASC,cAAc,QACrCkxE,EAAM1X,UAAY,uBAClB0X,EAAMvqF,MAAMma,UAAY,mBACxB,IAAMqwE,EAAepxE,SAASC,cAAc,QAE5C,OADAmxE,EAAaxvE,YAAYuvE,GAClBC,IAIT/E,GAAQ9iG,OAASoM,QAAQpM,OAAO,kCAC9B,UACA,oBACA83E,EAAwBz3E,KACxB05E,EAAoC15E,KACpCy+E,EAAoBz+E,KACpBwgF,GAAuBxgF,KACvBkqF,GAAiBlqF,KACjB+rF,GAAmB/rF,KACnBowF,GAAapwF,KACby8F,GAAoBz8F,KACpB08F,GAAgB18F,KAChBo9F,GAAep9F,KACfi+F,GAAkCj+F,KAClCy/F,GAAoBz/F,KACpBgwC,GAAA,EAAsBrwC,OAAOK,KAC7BwlF,GAAA,EAAoB7lF,OAAOK,KAC3BugG,GAA2BvgG,KAC3BynG,GAAA,EAAuBznG,KACvBwiG,GAA6B7iG,OAAOK,QAIvBy0B,WAAW,qBAAsBguE,IAGhDA,GAAQ9iG,OAAOa,MAAM,4BACnBwvC,GAAA,EAAsBluB,WAAWG,IACjC+tB,GAAA,EAAsBluB,WAAWC,MAGnC0gF,GAAQ9iG,OAAO2V,QAAQ,2BAA4B,sBAKjD,SAASoyF,EAA0BC,GAEjCD,EAAyBE,sBAAsBD,MAKpCpmG,EAAA,kNCvtBTsmG,EAAU,SAAVnoG,EAAmBuM,GAAS,IAAA3F,EAAArC,KAEhC8oC,EAAA,EAAYxlC,OAAO0E,EAAQ2V,UAE3B4sC,EAAA,EAAqB/vD,KAAKwF,MACxBwqD,gBAAiB/uD,EAAQgvD,iBACzBwW,gBAAiBxlE,EAAQooG,iBACzBxyE,YAAa51B,EAAQ41B,YACrBq5B,cAAejvD,EAAQkvD,iBAQzB3qD,KAAK8jG,eAAiB,KAMtB9jG,KAAK+jG,YAAc,EAAG,GAMtB/jG,KAAKygE,WAAY,EAOjBzgE,KAAKgkG,OAAS,IAAIC,EAAA,EAMlBjkG,KAAK2gE,qBAA6CzgE,IAA3B8H,EAAQ61D,eAC7B71D,EAAQ61D,eAAiB,GAM3B79D,KAAKkkG,kBAAmB,EAQxBlkG,KAAK0gE,kBAAmB,EAMxB1gE,KAAKmkG,cAAgB,KAOrBnkG,KAAK8gE,SAAW,IAAIx0B,EAAA,GAClB9mB,OAAQ,IAAI4mB,EAAA,GACVngB,iBAAiB,EACjBogB,QAASrkC,EAAQqkC,QAEnBtzB,MAAO/Q,EAAQ+Q,OAASmyC,EAAA,EAAsB6V,gCAC9C30C,sBAAsB,EACtBC,wBAAwB,IAO1BrsB,KAAK+vD,UAAY/nD,EAAQ2V,SAEzB3d,KAAK+vD,UAAU/sD,QAAQ,SAAAuV,GAAA,OAAWlW,EAAK+8D,YAAY7mD,KACnD+2B,EAAA,EAAgBtvC,KAAK+vD,UAAW,MAAO/vD,KAAKy6C,kBAAmBz6C,MAC/DsvC,EAAA,EAAgBtvC,KAAK+vD,UAAW,SAAU/vD,KAAKkwD,qBAAsBlwD,OAIvEkyC,EAAA,EAAgB0xD,EAASr5C,EAAA,GAOzBq5C,EAAQtpG,UAAU8kE,YAAc,SAAS7mD,GACvC,GAAwC,YAApCA,EAAQ+D,cAActD,WACpBT,EAAQlc,IAAI+nG,EAAA,EAA4BlmG,WAAY,CACxD,IAAMsd,EAA0CjD,EAAQ+D,cACxDtc,KAAKqkG,qBAAqB9rF,EAASiD,GAEnC,IAAM5W,EAAM5E,KAAKo0B,SACbxvB,GACF5E,KAAKskG,sBAAsBtkG,KAAK+jG,WAAYn/F,KAUlDg/F,EAAQtpG,UAAU+mE,oBAAsB,SAASl2C,GAC/C,IAAKnrB,KAAKygE,UAAW,CACnBzgE,KAAKygE,WAAY,EAEjB,IAAMj+C,EAAQ,IAAIiqC,EAAA,EAAgB,eAAgB9uC,SAAU3d,KAAK+vD,YACjE/vD,KAAKuH,cAAcib,KASvBohF,EAAQtpG,UAAUmlE,eAAiB,SAASlnD,GAC1CvY,KAAKukG,0BAA0BhsF,GAG3BvY,KAAK8jG,gBAAiD,IAA/B9jG,KAAK+vD,UAAUjD,cACxC9sD,KAAK8gE,SAASt3C,YAAYiD,cAAczsB,KAAK8jG,gBAC7C9jG,KAAK8jG,eAAiB,OAS1BF,EAAQtpG,UAAUiqG,0BAA4B,SAAShsF,GACrD,IAAMisF,EAAQxkG,KAAKgkG,OACmCS,KACtDD,EAAMxhG,QAIJ,SAACd,GACKqW,IAAYrW,EAAKqW,SACnBksF,EAAcrqG,KAAK8H,KAGzB,IAAK,IAAIlI,EAAIyqG,EAAcvqG,OAAS,EAAGF,GAAK,IAAKA,EAC/CwqG,EAAM50D,OAAO60D,EAAczqG,KAQ/B4pG,EAAQtpG,UAAUyyB,OAAS,SAASnoB,GAClC5E,KAAK8gE,SAAS/zC,OAAOnoB,GACrB2lD,EAAA,EAAqBjwD,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,IAQnDg/F,EAAQtpG,UAAUmgD,kBAAoB,SAAStvB,GAC7C,IAAM5S,EAAU4S,EAAIvB,QACpBkf,EAAA,EAAY1d,iBAAiB7S,EAASwzC,EAAA,EACpC,mCACF/rD,KAAKo/D,YAAY7mD,IAQnBqrF,EAAQtpG,UAAU41D,qBAAuB,SAAS/kC,GAChD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKy/D,eAAelnD,IAStBqrF,EAAQtpG,UAAU+pG,qBAAuB,SAAS9rF,EAASiD,GACzD,IAC2Bna,EADrBqjG,EAAQlpF,EAASuB,iBACnBD,SAAa9iB,SAAGmH,SAAIjG,SAAOypG,SAASC,SACxC,IAAK1pG,EAAI,EAAGmG,EAAKqjG,EAAMxqG,OAAQgB,EAAImG,IAAMnG,EAEvC,IAAKlB,EAAI,EAAGmH,GADZ2b,EAAc4nF,EAAMxpG,IACShB,OAAS,EAAGF,EAAImH,IAAMnH,EAEjD4qG,GACErsF,QAASA,EACTiD,SAAUA,EACV4S,OAAQlzB,GACRsrB,MAAOxsB,EACP2qG,QANFA,EAAU7nF,EAAY7f,MAAMjD,EAAGA,EAAI,IAQnCgG,KAAKgkG,OAAOa,OAAOnlF,EAAA,EAAwBilF,GAAUC,IAW3DhB,EAAQtpG,UAAUwqG,6BAA+B,SAAShoF,GACxD,IAAIioF,EAAgB/kG,KAAK8jG,eACpBiB,EAK4CA,EAAczoF,cACpD6vC,eAAervC,IALxBioF,EAAgB,IAAIh5C,EAAA,EAAU,IAAIC,EAAA,EAAYlvC,IAC9C9c,KAAK8jG,eAAiBiB,EACtB/kG,KAAK8gE,SAASt3C,YAAY8C,WAAWy4E,IAKvC,OAAOA,GAUTnB,EAAQoB,gBAAkB,SAASv6B,EAAG7oD,GACpC,OAAO6oD,EAAEjkD,MAAQ5E,EAAE4E,OAUrBo9E,EAAQn5C,iBAAmB,SAASt/B,GAClCnrB,KAAKskG,sBAAsBn5E,EAAIwyB,MAAOxyB,EAAIvmB,KAC1C5E,KAAKmkG,iBACLnkG,KAAKygE,WAAY,EACjB,IAAMskC,EAAgB/kG,KAAK8jG,eAC3B,GAAIiB,EAAe,CACjB,IACMjnC,EADyCinC,EAAczoF,cACrCS,iBAClBkoF,EAAevlF,EAAA,GAAyBo+C,IACxConC,EAAqBllG,KAAKgkG,OAAOmB,YAAYF,GAC7CG,KACNF,EAAmBvb,KAAKia,EAAQoB,iBAChC,IAAK,IAAIhrG,EAAI,EAAGmH,EAAK+jG,EAAmBhrG,OAAQF,EAAImH,IAAMnH,EAAG,CAC3D,IAAMqrG,EAAmBH,EAAmBlrG,GACtC2qG,EAAUU,EAAiBV,QAC7Bx2E,EAAM+jB,EAAA,EAAcmzD,EAAiB9sF,SACnC6V,EAAQi3E,EAAiBj3E,MAC3BA,IACFD,OAAWC,EAAMhnB,KAAK,MAEnBg+F,EAAkBj3E,KACrBi3E,EAAkBj3E,GAAO,IAAIthB,MAAM,IAEjConB,EAAA,EAAoB0wE,EAAQ,GAAI7mC,KAC/BsnC,EAAkBj3E,GAAK,IAC1BnuB,KAAKmkG,cAAc/pG,MAAMirG,EAAkB,IAC3CD,EAAkBj3E,GAAK,GAAKk3E,GACnBpxE,EAAA,EAAoB0wE,EAAQ,GAAI7mC,KACtCsnC,EAAkBj3E,GAAK,KAC1BnuB,KAAKmkG,cAAc/pG,MAAMirG,EAAkB,IAC3CD,EAAkBj3E,GAAK,GAAKk3E,IAIlC,QAASrlG,KAAK8jG,gBAShBF,EAAQC,iBAAmB,SAAS14E,GAClCnrB,KAAKqhE,oBAAoBl2C,GACzB,IAAM2yC,EAAS3yC,EAAI8I,WACbzY,EAA0Cxb,KAAKmkG,cAAc,GAAG,GAAG3oF,SACnE4E,EAASV,EAAA,EAAmBlE,EAAS0E,aAErC7E,EAAO,IAAIixC,EAAA,GAAkBlsC,EAAQ09C,IAMrCzqC,EAAS,IAAIk5B,EAAA,EAAansC,EAAQ/E,EAAKyxC,aACvChwC,EAAcziB,OAAAirG,EAAA,EAAAjrG,CAAWg5B,EAAQ,IAAItW,iBAC3C/c,KAAKulG,wBAAwB/pF,EAAUsB,GAGvC,IAAM1B,EAASoqF,EAAA,EAA6B53C,UAAUvyC,GACtDrb,KAAK+vD,UAAU5oC,WAAW,GAAGzkB,IAAI0hG,EAAA,EAA4B5lG,OAAQ4c,GAErEpb,KAAK8kG,6BAA6BhnC,IAUpC8lC,EAAQj5C,eAAiB,SAASx/B,GAKhC,GAJAnrB,KAAKgkG,OAAOt3E,QACZ1sB,KAAKqkG,qBAAqBrkG,KAAKmkG,cAAc,GAAG,GAAG5rF,QACjDvY,KAAKmkG,cAAc,GAAG,GAAG3oF,UAEvBxb,KAAKygE,UAAW,CAElB,IAAMj+C,EAAQ,IAAIiqC,EAAA,EAAgB,aAAc9uC,SAAU3d,KAAK+vD,YAC/D/vD,KAAKuH,cAAcib,GACnBxiB,KAAKygE,WAAY,EAEnB,OAAO,GAYTmjC,EAAQvyE,YAAc,SAASu6B,GAC7B,KAAMA,aAA2B65C,EAAA,GAC/B,OAAO,EAST,OALK75C,EAAgBhnD,IAAI6a,UAAUimF,kBACP,eAAxB95C,EAAgBvuD,MAA0B2C,KAAK2lG,wBACjD3lG,KAAKyrD,mBAAmBG,GAGnBrB,EAAA,EAAmB/vD,KAAKwF,KAAM4rD,KACjC,GAQNg4C,EAAQtpG,UAAUmxD,mBAAqB,SAAStgC,GAC9CnrB,KAAK+jG,WAAa54E,EAAIwyB,MACtB39C,KAAKskG,sBAAsBn5E,EAAIwyB,MAAOxyB,EAAIvmB,MAS5Cg/F,EAAQtpG,UAAUgqG,sBAAwB,SAAS3mD,EAAO/4C,GACxD,IAAMghG,EAAkBhhG,EAAIu5C,uBAAuBR,GAM7CkoD,EAAYjhG,EAAIu5C,wBACnBR,EAAM,GAAK39C,KAAK2gE,gBAAiBhjB,EAAM,GAAK39C,KAAK2gE,kBAC9CmlC,EAAalhG,EAAIu5C,wBACpBR,EAAM,GAAK39C,KAAK2gE,gBAAiBhjB,EAAM,GAAK39C,KAAK2gE,kBAC9ColC,EAAMrmF,EAAA,GAAyBmmF,EAAWC,IAG1C3jG,EADQnC,KAAKgkG,OACCmB,YAAYY,GAChC,GAAI5jG,EAAMjI,OAAS,EAAG,CACpBiI,EAAMwnF,KAde,SAASlf,EAAG7oD,GACjC,OAAOqS,EAAA,EAAsC2xE,EAAiBn7B,EAAEk6B,SAC5D1wE,EAAA,EAAsC2xE,EAAiBhkF,EAAE+iF,WAa7D,IACMqB,EADO7jG,EAAM,GACSwiG,QACxB7mC,EAAU7pC,EAAA,EAA8B2xE,EAC1CI,GACIC,EAAcrhG,EAAIshG,uBAAuBpoC,GAC/C,GAAIliD,KAAKoyC,KAAK/5B,EAAA,EAA6B0pB,EAAOsoD,KAC9CjmG,KAAK2gE,gBAAiB,CACxB,IAAMwlC,EAASvhG,EAAIshG,uBAAuBF,EAAe,IACnDI,EAASxhG,EAAIshG,uBAAuBF,EAAe,IACnDK,EAAepyE,EAAA,EAA6BgyE,EAAaE,GACzDG,EAAeryE,EAAA,EAA6BgyE,EAAaG,GACzDG,EAAO3qF,KAAKoyC,KAAKpyC,KAAKqsD,IAAIo+B,EAAcC,IAE9C,GADAtmG,KAAKkkG,iBAAmBqC,GAAQvmG,KAAK2gE,gBACjC3gE,KAAKkkG,iBAAkB,CACzBpmC,EAASuoC,EAAeC,EACtBN,EAAe,GAAKA,EAAe,GACrChmG,KAAK8kG,6BAA6BhnC,GAClC,IAAM0oC,KACNA,EAAet0D,EAAA,EAAc8zD,KAAmB,EAEhD,IADA,IAAIrB,SACK3qG,EAAI,EAAGmH,EAAKgB,EAAMjI,OAAQF,EAAImH,IACrCwjG,EAAUxiG,EAAMnI,GAAG2qG,QACd1wE,EAAA,EAAoB+xE,EAAe,GAAIrB,EAAQ,KAChD1wE,EAAA,EAAoB+xE,EAAe,GAAIrB,EAAQ,KAC9C1wE,EAAA,EAAoB+xE,EAAe,GAAIrB,EAAQ,KAChD1wE,EAAA,EAAoB+xE,EAAe,GAAIrB,EAAQ,OALR3qG,EAMzCwsG,EAAet0D,EAAA,EAAcyyD,KAAY,EAK7C,SAIF3kG,KAAK8jG,iBACP9jG,KAAK8gE,SAASt3C,YAAYiD,cAAczsB,KAAK8jG,gBAC7C9jG,KAAK8jG,eAAiB,OAU1BF,EAAQtpG,UAAUirG,wBAA0B,SAAS/pF,EAAUsB,GAC7D9c,KAAK0gE,kBAAmB,EACxBllD,EAAS2wC,eAAervC,GACxB9c,KAAK0gE,kBAAmB,GAIX,IAAA+lC,EAAA,EC7cTC,EAAU,SAAS1+F,GAAS,IAAA3F,EAAArC,KAEhC8oC,EAAA,EAAYxlC,OAAO0E,EAAQ2V,UAE3B4sC,EAAA,EAAqB/vD,KAAKwF,MACxBwqD,gBAAiBxqD,KAAKghE,YACtBC,gBAAiBjhE,KAAKkhE,YACtBxW,cAAe1qD,KAAKmhE,YAOtBnhE,KAAKygE,WAAY,EAMjBzgE,KAAK2mG,cAAgB,IAAIr6D,EAAA,GACvB9mB,OAAQ,IAAI4mB,EAAA,GACVC,QAASrkC,EAAQqkC,QAEnBzmB,QAAS5lB,KAAK0V,YACdqD,MAAO/Q,EAAQ+Q,OAASmyC,EAAA,EAAsB6V,gCAC9C30C,sBAAsB,EACtBC,wBAAwB,IAO1BrsB,KAAK+vD,UAAY/nD,EAAQ2V,SAOzB3d,KAAKsqB,SAAW,KAMhBtqB,KAAKk8D,UAMLl8D,KAAK4mG,QAAU,KAEft3D,EAAA,EAAgBtvC,KAAK+vD,UAAW,MAAO/vD,KAAKy6C,kBAAmBz6C,MAC/DsvC,EAAA,EAAgBtvC,KAAK+vD,UAAW,SAAU/vD,KAAKkwD,qBAAsBlwD,MAErEA,KAAK+vD,UAAU/sD,QAAQ,SAACuV,GACtBlW,EAAK+8D,YAAY7mD,MAKrB25B,EAAA,EAAgBw0D,EAASn8C,EAAA,GAOzBm8C,EAAQpsG,UAAUqb,UAAY,SAASvE,GACrCm5C,EAAA,EAAqBjwD,UAAUqb,UAAUnb,KAAKwF,KAAMoR,GAChDpR,KAAK2mG,eACP3mG,KAAK2mG,cAAchhF,WAAWvU,IAQlCs1F,EAAQpsG,UAAU8kE,YAAc,SAAS7mD,GACvC,IAAMsuF,EAActuF,EAAQ+D,cAC5B,GAAIuqF,aAAuBvB,EAAA,EAAe,CAGxC,IAAMn3E,EAAM+jB,EAAA,EAAc35B,GACtB/V,EAAOxC,KAAKk8D,OAAO/tC,GACvB,GAAI3rB,EACF,OAUF,IAPA,IAAMskG,EAAc9mG,KAAK2mG,cAAcn9E,YAMjCu9E,EAAUF,EAAY9pF,iBAAiB,GACtCgqF,EAAQ7sG,OAAS,GAClB6sG,EAAQ,GAAG,GAAKA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAC/DA,EAAQ1zC,MAER0zC,EAAQpsG,QAGZ,IAAMqsG,KACFC,SACAC,SACJH,EAAQ/jG,QAAQ,SAACmkG,GACfF,EAAc,IAAIj7C,EAAA,EAAYm7C,GAC9BD,EAAgB,IAAIn7C,EAAA,GAClBo7C,QAAU,EACV3rF,SAAYyrF,EACZG,SAAY,KACZC,SAAY,KACZC,WAAc/uF,IAGhByuF,EAAc5sG,KAAK8sG,IAClBlnG,MACHwC,GACEukG,QAASC,GAEXhnG,KAAKk8D,OAAO/tC,GAAO3rB,EAEnB,IAAI+kG,SACAC,SACJR,EAAchkG,QAAQ,SAACkkG,EAAe1gF,IACpC+gF,EAAkBP,EAAcxgF,EAAQ,MAEtC+gF,EAAkBP,EAAcA,EAAc9sG,OAAS,KAGzDstG,EAAcR,EAAcxgF,EAAQ,MAElCghF,EAAcR,EAAc,IAG1BxgF,EAAQ,GAAM,GAChB0gF,EAAcxkG,IAAI,WAAY8kG,GAC9BN,EAAcxkG,IAAI,WAAY6kG,KAE9BL,EAAcxkG,IAAI,WAAY6kG,GAC9BL,EAAcxkG,IAAI,WAAY8kG,KAG/BxnG,MACH8mG,EAAYz6C,YAAY26C,KAU5BN,EAAQpsG,UAAU+mE,oBAAsB,SAASl2C,GAC/C,IAAKnrB,KAAKygE,UAAW,CACnBzgE,KAAKygE,WAAY,EAEjB,IAAMj+C,EAAQ,IAAIiqC,EAAA,EAAgB,eAAgB9uC,SAAU3d,KAAK+vD,YACjE/vD,KAAKuH,cAAcib,GACnBxiB,KAAK4mG,QAAU5mG,KAAKynG,sBASxBf,EAAQpsG,UAAUmtG,kBAAoB,WACpC,IAIMJ,EAJUrnG,KAAKsqB,SAIIjuB,IAAI,YAC7BysC,EAAA,EAAY1d,iBAAiBi8E,EAAUt7C,EAAA,GAEvC,IAAM27C,EAASL,EAAShrG,IAAI,YAC5BysC,EAAA,EAAY1d,iBAAiBs8E,EAAQ37C,EAAA,GACrC,IAAM47C,EAAcD,EAAOprF,cAC3BwsB,EAAA,EAAY1d,iBAAiBu8E,EAAa37C,EAAA,GAC1C,IAAM47C,EAAmBD,EAAY5qF,iBAC/B8qF,EAAc7nG,KAAKo0B,SAAS8xE,uBAAuB0B,GAGnDR,EAAWM,EAAOrrG,IAAI,YAC5BysC,EAAA,EAAY1d,iBAAiBg8E,EAAUr7C,EAAA,GACvC,IAAM+7C,EAAgBV,EAAS9qF,cAC/BwsB,EAAA,EAAY1d,iBAAiB08E,EAAe97C,EAAA,GAC5C,IAAM+7C,EAAqBD,EAAc/qF,iBACnCirF,EAAgBhoG,KAAKo0B,SAAS8xE,uBAAuB6B,GACvDE,GACFD,EAAc,GAAKH,EAAY,GAC/BG,EAAc,GAAKH,EAAY,IAE3BK,EAAmBtsF,KAAKoyC,KAAKi6C,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAClFA,EAAQ,IAAMC,EACdD,EAAQ,IAAMC,EAGd,IAAMC,EAAgBd,EAAS/qF,cAC/BwsB,EAAA,EAAY1d,iBAAiB+8E,EAAen8C,EAAA,GAC5C,IAAMo8C,EAAqBD,EAAcprF,iBACnCsrF,EAAgBroG,KAAKo0B,SAAS8xE,uBAAuBkC,GACvDE,GACFD,EAAc,GAAKR,EAAY,GAC/BQ,EAAc,GAAKR,EAAY,IAE3BU,EAAmB3sF,KAAKoyC,KAAKs6C,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAelF,OAdAA,EAAQ,IAAMC,EACdD,EAAQ,IAAMC,EAGVxkD,MAAMkkD,EAAQ,KAAOlkD,MAAMukD,EAAQ,KAErCL,GAAW,EAAG,GACdK,GAAW,EAAG,IACLvkD,MAAMkkD,EAAQ,IACvBA,GAAWK,EAAQ,IAAKA,EAAQ,IACvBvkD,MAAMukD,EAAQ,MACvBA,GAAWL,EAAQ,IAAKA,EAAQ,MAIhCL,mBACAC,cACAC,gBACAK,gBACAF,UACAK,YASJ5B,EAAQpsG,UAAUmlE,eAAiB,SAASlnD,GAI1C,IAHA,IAAM4V,EAAM+jB,EAAA,EAAc35B,GAEpBwuF,EADO/mG,KAAKk8D,OAAO/tC,GACJ44E,QACZ/sG,EAAI,EAAGA,EAAI+sG,EAAQ7sG,OAAQF,IAClCgG,KAAK2mG,cAAcn9E,YAAYiD,cAAcs6E,EAAQ/sG,IAEvDgG,KAAKsqB,SAAW,KAChBy8E,EAAQ7sG,OAAS,SACV8F,KAAKk8D,OAAO/tC,IAOrBu4E,EAAQpsG,UAAUyyB,OAAS,SAASnoB,GAClC5E,KAAK2mG,cAAc55E,OAAOnoB,GAC1B2lD,EAAA,EAAqBjwD,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,IAQnD8hG,EAAQpsG,UAAUmgD,kBAAoB,SAAStvB,GAC7C,IAAM5S,EAAU4S,EAAIvB,QACpBkf,EAAA,EAAY1d,iBAAiB7S,EAASwzC,EAAA,EACpC,mCACF/rD,KAAKo/D,YAAY7mD,IAQnBmuF,EAAQpsG,UAAU41D,qBAAuB,SAAS/kC,GAChD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKy/D,eAAelnD,IAUtBmuF,EAAQpsG,UAAU0mE,YAAc,SAAS71C,GACvC,IAEM5S,EAFM4S,EAAIvmB,IAEIg5C,sBAAsBzyB,EAAIwyB,MAAO,SAAAplC,GAAA,OAClDA,EAAQlc,IAAI,aAAekc,EAAQlc,IAAI,YAAckc,OAAUrY,IAGlE,QAAIqY,IACFvY,KAAKsqB,SAAW/R,GAET,IAYXmuF,EAAQpsG,UAAU4mE,YAAc,SAAS/1C,GACvCnrB,KAAKqhE,oBAAoBl2C,GACzB,IAAM5S,EAAUvY,KAAKsqB,SAEf9O,EACDjD,EAAQ+D,cAEb,GAAId,aAAoBwwC,EAAA,EAAa,CACnCxwC,EAAS2wC,eAAehhC,EAAI8I,YAE5B,IAAMu0E,EAAmBr9E,EAAIwyB,MAEvBkqD,EAAc7nG,KAAK4mG,QAAQiB,YAC3BC,EAAgB9nG,KAAK4mG,QAAQkB,cAC7BK,EAAgBnoG,KAAK4mG,QAAQuB,cAC7BF,EAAUjoG,KAAK4mG,QAAQqB,QACvBK,EAAUtoG,KAAK4mG,QAAQ0B,QACvBV,EAAmB5nG,KAAK4mG,QAAQgB,iBAGhCa,EAAUzoG,KAAK0oG,mBACnBb,EAAaW,EAAkBP,GAC3BU,EAAe3oG,KAAKo0B,SAAS+pB,uBAAuBsqD,GAC1DX,EAAc37C,eAAew8C,GAE7B,IAAMC,EAAU5oG,KAAK0oG,mBACnBb,EAAaW,EAAkBF,GAC3BO,EAAe7oG,KAAKo0B,SAAS+pB,uBAAuByqD,GAC1DT,EAAch8C,eAAe08C,GAI7B,IACMxsF,EADa9D,EAAQlc,IAAI,cACPigB,cACxBwsB,EAAA,EAAY1d,iBAAiB/O,EAAMipF,EAAA,GACnCjpF,EAAK8vC,iBAAiBhhC,EAAI8I,WAAY00E,EAAcf,EAAkBiB,EAAc19E,EAAI8I,gBAc5FyyE,EAAQpsG,UAAUouG,mBAAqB,SACrChB,EAAQoB,EAAaC,GAErB,IAAMC,GAAWF,EAAY,GAAKpB,EAAO,GAAIoB,EAAY,GAAKpB,EAAO,IAE/DuB,EAAkBD,EAAQ,GAAKD,EAAO,GAAKC,EAAQ,GAAKD,EAAO,GAE/DG,GACHH,EAAO,GAAKE,EACZF,EAAO,GAAKE,GAGf,OAAQC,EAAY,GAAKxB,EAAO,GAAIwB,EAAY,GAAKxB,EAAO,KAU9DhB,EAAQpsG,UAAU6mE,UAAY,SAASh2C,GACrC,GAAInrB,KAAKygE,UAAW,CAElB,IAAMj+C,EAAQ,IAAIiqC,EAAA,EAAgB,aAAc9uC,SAAU3d,KAAK+vD,YAC/D/vD,KAAKuH,cAAcib,GACnBxiB,KAAK4mG,QAAU,KACf5mG,KAAKygE,WAAY,EAEnB,OAAO,GAyBM,IAAA0oC,EAAA,mCCxZTC,EAAU,SAASphG,GAEvB8gC,EAAA,EAAYxlC,OAAO0E,EAAQ2V,UAM3B3d,KAAK+vD,UAAY/nD,EAAQ2V,SAMzB3d,KAAKqnC,iBAMLrnC,KAAKg5C,iBAMLh5C,KAAKqpG,eAAiB,IAAIl9D,EAAA,EAE1BnsC,KAAKg5C,cAAc5+C,KAAK,IAAIqlF,EAAA,GAC1BplC,gBAAiBivD,EAAA,EAAUjvD,gBAC3B18B,SAAU3d,KAAKqpG,eACfxrC,eAAgB71D,EAAQ61D,eACxB9kD,MAAO/Q,EAAQ+Q,MACfszB,MAAOrkC,EAAQqkC,SAOjBrsC,KAAKupG,gBAAkB,IAAIp9D,EAAA,EAE3BnsC,KAAKg5C,cAAc5+C,KAAK,IAAIqsG,GAC1B9oF,SAAU3d,KAAKupG,gBACf1rC,eAAgB71D,EAAQ61D,eACxB9kD,MAAO/Q,EAAQ+Q,MACfszB,MAAOrkC,EAAQqkC,SAOjBrsC,KAAKwpG,mBAAqB,IAAIr9D,EAAA,EAE9BnsC,KAAKg5C,cAAc5+C,KAAK,IAAI+uG,GAC1BxrF,SAAU3d,KAAKwpG,mBACf3rC,eAAgB71D,EAAQ61D,eACxB9kD,MAAO/Q,EAAQ+Q,MACfszB,MAAOrkC,EAAQqkC,SAIjBo9D,EAAA,EAAyBjvG,KAAKwF,MAC5BqxB,YAAa47B,EAAA,KAKjB/a,EAAA,EAAgBk3D,EAASK,EAAA,GAQzBL,EAAQ9uG,UAAUqb,UAAY,SAASvE,GACrCq4F,EAAA,EAAyBnvG,UAAUqb,UAAUnb,KAAKwF,KAAMoR,GACxDpR,KAAKm/D,aAWPiqC,EAAQ9uG,UAAUyyB,OAAS,SAASnoB,GAElC,IAAM8kG,EAAe1pG,KAAKg5C,cAEpB2wD,EAAa3pG,KAAKo0B,SACpBu1E,GACFD,EAAa1mG,QAAQ,SAACk4B,GACpByuE,EAAWt1E,kBAAkB6G,KAIjCuuE,EAAA,EAAyBnvG,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAEjDA,GACF8kG,EAAa1mG,QAAQ,SAACk4B,GACpBt2B,EAAI0vB,eAAe4G,KAIvBl7B,KAAKm/D,aAQPiqC,EAAQ9uG,UAAU6kE,UAAY,WAAW,IAAA98D,EAAArC,KACjC4E,EAAM5E,KAAKo0B,SACXhjB,EAASpR,KAAK0V,YACdg0F,EAAe1pG,KAAKg5C,cACpB+D,EAAO/8C,KAAKqnC,cAElBqiE,EAAa1mG,QAAQ,SAACk4B,GACpBA,EAAYvlB,UAAUvE,KAAYxM,KAGhCwM,GAAUxM,GACZ5E,KAAK+vD,UAAU/sD,QAAQ,SAAAuV,GAAA,OAAWlW,EAAK+8D,YAAY7mD,KACnDwkC,EAAK3iD,KACHk1C,EAAA,EAAgBtvC,KAAK+vD,UAAW,MAAO/vD,KAAKq/D,mBAAoBr/D,MAChEsvC,EAAA,EAAgBtvC,KAAK+vD,UAAW,SAAU/vD,KAAKs/D,sBAAuBt/D,SAGxE+8C,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EACd8F,KAAK+vD,UAAU/sD,QAAQ,SAAAuV,GAAA,OAAWlW,EAAKo9D,eAAelnD,OAS1D6wF,EAAQ9uG,UAAU+kE,mBAAqB,SAASl0C,GAC9C,IAAM5S,EAAU4S,EAAIvB,QACpBkf,EAAA,EAAY1d,iBAAiB7S,EAASwzC,EAAA,EACpC,mCACF/rD,KAAKo/D,YAAY7mD,IAQnB6wF,EAAQ9uG,UAAUglE,sBAAwB,SAASn0C,GACjD,IAAM5S,EAAqC4S,EAAIvB,QAC/C5pB,KAAKy/D,eAAelnD,IAQtB6wF,EAAQ9uG,UAAU8kE,YAAc,SAAS7mD,GACpBvY,KAAK4pG,sBAAsBrxF,GACnCne,KAAKme,IAQlB6wF,EAAQ9uG,UAAUmlE,eAAiB,SAASlnD,GACvBvY,KAAK4pG,sBAAsBrxF,GACnCq3B,OAAOr3B,IASpB6wF,EAAQ9uG,UAAUsvG,sBAAwB,SAASrxF,GACjD,IACMsxF,EAAWtxF,EAAQlc,IAAI+nG,EAAA,EAA4BlmG,WACnD4rG,EAAcvxF,EAAQlc,IAAI+nG,EAAA,EAA4BjmG,cAQ5D,OAPiB,IAAb0rG,GAAkC,SAAbA,EACZ7pG,KAAKupG,iBACS,IAAhBO,GAAwC,SAAhBA,EACtB9pG,KAAKwpG,mBAELxpG,KAAKqpG,gBAML/rG,EAAA,wGCpNTysG,EAAU,SAAS18E,EAAQmV,EAAM1iC,EACrCqoC,EAAmB6hE,GAAc,IAAA3nG,EAAArC,KAMjCA,KAAKoR,YAEelR,IAAhBF,KAAKoR,SACPpR,KAAKoR,QAAS,GAShBpR,KAAK2d,SAML3d,KAAK4E,IAML5E,KAAK0Z,YAML1Z,KAAK02B,gBAAkB52B,EAEvBA,EAAewF,UAAU,SACzBxF,EAAewF,UAAU,cACzBxF,EAAewF,UAAU,WACzBxF,EAAewF,UAAU,UACzBxF,EAAewF,UAAU,aACzBxF,EAAewF,UAAU,QAMzBtF,KAAKiqG,eAAiB9hE,EAMtBnoC,KAAKkqG,cAAgBF,EAMrBhqG,KAAKg5C,iBAMLh5C,KAAKmqG,UAMLnqG,KAAKoqG,cAMLpqG,KAAKqqG,YAMLrqG,KAAKsqG,cAMLtqG,KAAKuqG,cAMLvqG,KAAKwqG,SAKLn9E,EAAOO,OACL,kBAAMvrB,EAAK+O,QACX,SAACwE,IACgB,IAAXA,GACFvT,EAAK22C,cAAch2C,QAAQ,SAACk4B,GAC1BA,EAAYvlB,WAAU,wKAehCo0F,EAAQzvG,UAAUmwG,oBAAsB,SACtCvvE,GACAl7B,KAAKg5C,cAAc5+C,KAAK8gC,GACxBA,EAAYvlB,WAAU,GACtBorE,EAAA,EAAiB7lD,YAAYA,GAC7Bl7B,KAAK4E,IAAI0vB,eAAe4G,IAW1B6uE,EAAQzvG,UAAUowG,mBAAqB,SAASloF,GAC9CxiB,KAAKoR,OAASpR,KAAKg5C,cAAchzC,KAAK,SAAAk1B,GAAA,OAAeA,EAAYxlB,aAAa1V,OAWhF+pG,EAAQzvG,UAAUqwG,cAAgB,SAASttG,EAAMmlB,GAC/C,IAAIooF,SAGFA,EAFEpoF,EAAMjK,QAECiK,EAAMjK,QAGNiK,EAAMG,OAAOpK,QAExBuwB,EAAA,EAAYxlC,OAAOsnG,GAEnB,IAAMxvF,EAASwvF,EAAOvuG,IAAI,UAEpBshB,EAAW3d,KAAK2d,UAAY3d,KAAKkqG,cAEjC3xF,EAAU,IAAIwzC,EAAA,EAAU6+C,EAAOtuF,eAE/BgsE,EAAO8b,EAAA,EAEb,OAAQ/mG,GACN,KAAK2iF,EAAA,EAAiBziF,OACpBgb,EAAQ7V,IAAI4lF,EAAKpqF,WAAW,QACbgC,IAAXkb,GACF7C,EAAQ7V,IAAI4lF,EAAK9pF,OAAQ4c,GAE3B,MACF,KAAK4kE,EAAA,EAAiBjiF,KACpBwa,EAAQ7V,IAAI4lF,EAAKlqF,SAAS,GAC1B,MACF,KAAK4hF,EAAA,EAAiBliF,UACpBya,EAAQ7V,IAAI4lF,EAAKnqF,cAAc,GASnC,IAAMpC,EAAOiE,KAAK02B,gBAAgBpxB,UAAUjI,GAC5Ckb,EAAQ7V,IAAI4lF,EAAKjqF,KAAStC,EAA1B,KAAkC4hB,EAASmvC,YAAc,IAKzD,IAAMlzC,EAAQvc,IAAS2iF,EAAA,EAAiBjiF,KAAO,UAAY,UAC3Dwa,EAAQ7V,IAAI4lF,EAAKrqF,MAAO2b,GAExBrB,EAAQ7V,IAAI4lF,EAAKtqF,MAAO,GACxBua,EAAQ7V,IAAI4lF,EAAK/pF,QAAS,IAC1Bga,EAAQ7V,IAAI4lF,EAAK7pF,eAAcuB,KAAK0Z,aACpCnB,EAAQ7V,IAAI4lF,EAAKhqF,YAAY,GAC7Bia,EAAQ7V,IAAI4lF,EAAK5pF,KAAM,IACvB6Z,EAAQ7V,IAAI4lF,EAAK3pF,OAAQ,GAGzBqB,KAAKiqG,eAAe3xF,SAASC,GAG7BoF,EAASvjB,KAAKme,KAOhBwxF,EAAQruG,OAASoM,QAAQpM,OAAO,6BAC9BmvG,EAAA,EAAiB9uG,KACjB2/F,EAAA,EAAqB3/F,KACrBgwC,EAAA,EAAsBrwC,OAAOK,QAEhBy0B,WAAW,4BAA6Bu5E,GAGxC,IAAAe,EAAA,kBCnPTC,EAAUjjG,QAAQpM,OAAO,oBAS/BqvG,EAAQ78C,WAAa,WACnB,OACE1b,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMb,EAAY,IAAIc,EAAA,GACpB5tG,KAA2C,UAG7C2tG,EAAgBP,oBAAoBN,GACpCa,EAAgBb,UAAYA,EAE5B76D,EAAA,EACE66D,EACA,UACAa,EAAgBL,cAAc3tG,KAC5BguG,EAAiBhrB,EAAA,EAAiBpiF,OACpCotG,GAEF17D,EAAA,EACE66D,EACA,gBACAa,EAAgBN,mBAChBM,MAORD,EAAQh4D,UAAU,gBAAiBg4D,EAAQ78C,YAG5B,IAAAv6B,EAAA,UChDTu3E,EAAUpjG,QAAQpM,OAAO,wBAS/BwvG,EAAQh9C,WAAa,WACnB,OACE1b,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMT,EAAgB,IAAIU,EAAA,GACxB5tG,KAA2C,aAC3C8tG,iBAAkB,SAACruF,EAAatB,GACzBA,IACHA,EAAW,IAAI8pF,EAAA,EAAc,OAE/B,IAAMn0F,EAAQ2L,EAAY,GACpB5L,EAAM4L,EAAY,GAIxB,OAHAtB,EAAS2wC,iBACNh7C,GAAQA,EAAM,GAAID,EAAI,IAAKA,GAAMA,EAAI,GAAIC,EAAM,IAAKA,KAEhDqK,GAET4vF,UAAW,IAGbJ,EAAgBP,oBAAoBF,GACpCS,EAAgBT,cAAgBA,EAEhCj7D,EAAA,EACEi7D,EACA,UACAS,EAAgBL,cAAc3tG,KAC5BguG,EAAiBhrB,EAAA,EAAiBliF,WACpCktG,GAEF17D,EAAA,EACEi7D,EACA,gBACAS,EAAgBN,mBAChBM,MAORE,EAAQn4D,UAAU,oBAAqBm4D,EAAQh9C,YAGhC,IAAAm9C,EAAA,EC9DTC,EAAUxjG,QAAQpM,OAAO,mBAS/B4vG,EAAQp9C,WAAa,WACnB,OACE1b,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMR,EAAW,IAAIS,EAAA,GACnB5tG,KAA2C,UAG7C2tG,EAAgBP,oBAAoBD,GACpCQ,EAAgBR,SAAWA,EAE3Bl7D,EAAA,EACEk7D,EACA,UACAQ,EAAgBL,cAAc3tG,KAC5BguG,EAAiBhrB,EAAA,EAAiBjiF,MACpCitG,GAEF17D,EAAA,EACEk7D,EACA,gBACAQ,EAAgBN,mBAChBM,MAORM,EAAQv4D,UAAU,eAAgBu4D,EAAQp9C,YAG3B,IAAAq9C,EAAA,mBC/CTC,EAAU1jG,QAAQpM,OAAO,mBAC7BovG,EAAmBpvG,OAAOK,OAc5ByvG,EAAQt9C,WAAa,SAASM,EAAU1uD,EAAgBuX,EAAS1X,GAC/D,OACE6yC,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMl3E,EAAUh0B,EAAewF,UAAU,kCACnCmmG,EAAU3rG,EAAewF,UAAU,+EAGnC+kG,EAAc,IAAIqB,EAAA,EAA2Br0F,EAAQ,kBAAmBvX,GAC5EiZ,MAAO,IAAI4mE,EAAA,EACXztD,SAAUs8B,oBAA2B16B,EAA3B,SAAA06B,CAA4CnhC,GAAQ,GAC9DwE,YAAa28B,oBAA2Bi9C,EAA3B,SAAAj9C,CAA4CnhC,GAAQ,GACjE0E,UAAWpyB,EAAUY,IAAI,wBAA0BZ,EAAUtD,IAAI,6BAA0B6D,IAG7F8qG,EAAgBP,oBAAoBJ,GACpCW,EAAgBX,YAAcA,EAE9B/6D,EAAA,EACE+6D,EACA,aACAW,EAAgBL,cAAc3tG,KAC5BguG,EAAiBhrB,EAAA,EAAiBniF,SACpCmtG,GAEF17D,EAAA,EACE+6D,EACA,gBACAW,EAAgBN,mBAChBM,MArCRQ,EAAQt9C,uEA4CRs9C,EAAQz4D,UAAU,kBAAmBy4D,EAAQt9C,YAG9B,IAAAy9C,EAAA,oBC3DTC,EAAU9jG,QAAQpM,OAAO,qBAC7BovG,EAAmBpvG,OAAOK,KAC1BmlD,EAAA,EAAgBnlD,OAclB6vG,EAAQ19C,WAAa,SAASM,EAAU1uD,EAAgBuX,EAAS1X,GAC/D,OACE6yC,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMl3E,EAAUh0B,EAAewF,UAAU,iCACnCmmG,EAAU3rG,EAAewF,UAAU,mBAEnCglG,EAAgB,IAAI9E,EAAA,EACxBnuF,EAAQ,kBAAmBA,EAAQ,WACjC0B,MAAO,IAAI4mE,EAAA,EACXztD,SAAUs8B,oBAA2B16B,EAA3B,SAAA06B,CAA4CnhC,GAAQ,GAC9DwE,YAAa28B,oBAA2Bi9C,EAA3B,SAAAj9C,CAA4CnhC,GAAQ,GACjE0E,UAAWpyB,EAAUY,IAAI,wBAA0BZ,EAAUtD,IAAI,6BAA0B6D,EAC3F4xB,SAAUnyB,EAAUY,IAAI,uBAAyBZ,EAAUtD,IAAI,4BAAyB6D,IAG5F8qG,EAAgBP,oBAAoBH,GACpCU,EAAgBV,cAAgBA,EAEhCh7D,EAAA,EACEg7D,EACA,aAIA,SAAC9nF,GAKC,IAAMhH,EACCgH,EAAMG,OAAOpK,QAAQ+D,cACtB+W,EACJ7X,EAAS+xC,gBAAgB,GACrBt6B,EAAU54B,OAAAirG,EAAA,EAAAjrG,CAAWg5B,EAAQ,IACnC7Q,EAAMG,OAAOpK,QAAU,IAAIwzC,EAAA,EAAU94B,GACrC,IAAM7X,EAASoqF,EAAA,EAA6B53C,UACPpyC,EAAS+xC,gBAAgB,IAE9D/qC,EAAMG,OAAOpK,QAAQ7V,IAAI,SAAU0Y,GAEnC4vF,EAAgBL,cAAc3qB,EAAA,EAAiBziF,OAAQilB,IAEzDwoF,GAGF17D,EAAA,EACEg7D,EACA,gBACAU,EAAgBN,mBAChBM,MA1DRY,EAAQ19C,uEAiER09C,EAAQ74D,UAAU,oBAAqB64D,EAAQ19C,YAGhC,IAAA29C,EAAA,WCtFTC,EAAUhkG,QAAQpM,OAAO,qBAC7BovG,EAAmBpvG,OAAOK,KAC1BmlD,EAAA,EAAgBnlD,OAclB+vG,EAAQ59C,WAAa,SAASM,EAAU1uD,EAAgBuX,EAAS1X,GAC/D,OACE6yC,SAAU,IACVa,QAAS,oBAOTZ,KAAM,SAACplB,EAAQzD,EAAS+oB,EAAOq4D,GAE7B,IAAMl3E,EAAUh0B,EAAewF,UAAU,+BACnCmmG,EAAU3rG,EAAewF,UAAU,2EAGnC8kG,EAAgB,IAAI2B,EAAA,EAA6B10F,EAAQ,kBAAmBvX,GAChFiZ,MAAO,IAAI4mE,EAAA,EACXztD,SAAUs8B,oBAA2B16B,EAA3B,SAAA06B,CAA4CnhC,GAAQ,GAC9DwE,YAAa28B,oBAA2Bi9C,EAA3B,SAAAj9C,CAA4CnhC,GAAQ,GACjE0E,UAAWpyB,EAAUY,IAAI,wBAA0BZ,EAAUtD,IAAI,6BAA0B6D,IAG7F8qG,EAAgBP,oBAAoBL,GACpCY,EAAgBZ,cAAgBA,EAEhC96D,EAAA,EACE86D,EACA,aACAY,EAAgBL,cAAc3tG,KAC5BguG,EAAiBhrB,EAAA,EAAiBxiF,aACpCwtG,GAEF17D,EAAA,EACE86D,EACA,gBACAY,EAAgBN,mBAChBM,MArCRc,EAAQ59C,uEA4CR49C,EAAQ/4D,UAAU,oBAAqB+4D,EAAQ59C,YAGhC,IAAA89C,EAAA,EClDTt6B,EAAU5pE,QAAQpM,OAAO,mBAC7BovG,EAAmBpvG,OAAOK,KAC1B43B,EAAc53B,KACdsvG,EAAkBtvG,KAClBwvG,EAAaxvG,KACb4vG,EAAgB5vG,KAChB8vG,EAAkB9vG,KAClBiwG,EAAkBjwG,OA6EpB21E,EAAQxjB,WAAa,WACnB,OACE19B,WAAY,sCACZkiB,OAAO,EACP4E,kBACElmC,OAAU,yBACVuM,SAAY,4BACZ/Y,IAAO,sBACP8U,YAAe,kCAKrBg4D,EAAQ3+B,UAAU,kBAAmB2+B,EAAQxjB,YAG9B5wD,EAAA,mCC9Hf,IAAA6B,EAAA9D,EAAA,GAAAwa,EAAAxa,EAAA,KAAA4wG,EAAA5wG,EAAA,IAAA6wG,EAAA7wG,EAAA,KAAA8wG,EAAA9wG,EAAA,KAAA+wG,EAAA/wG,EAAA,KAAAgxG,EAAAhxG,EAAA,IAAAixG,EAAAjxG,EAAA,GAAAkxG,EAAAlxG,EAAA,IAAAmxG,EAAAnxG,EAAA,GAAAib,EAAAjb,EAAA,IAAAoxG,EAAApxG,EAAA,KAAAqxG,EAAArxG,EAAA,IAiBMI,EAAUqM,QAAQpM,OAAO,qBAC7B0wG,EAAA,EAAoB1wG,OAAOK,KAC3B8Z,EAAA,EAAgB9Z,OA0ClBN,EAAQyyD,WAAa,WACnB,OACE19B,WAAY,8BACZ8mB,kBAAkB,EAClB5E,OACEthC,OAAU,2BACVuM,SAAY,6BACZ+7B,SAAY,6BACZ90C,IAAO,2BAKbnJ,EAAQs3C,UAAU,oBAAqBt3C,EAAQyyD,YAiB/CzyD,EAAQ+7C,YAAc,SAAS13C,EAAgB0uD,EAAUn3C,EAASgW,EAChE+I,EAAUyhB,GAAiB,IAAAx1C,EAAArC,KAM3BA,KAAKoR,OAMLpR,KAAK2d,SAML3d,KAAK05C,SAML15C,KAAK4E,IAML5E,KAAK02B,gBAAkB52B,EAMvBE,KAAK05F,SAAWlrC,EAMhBxuD,KAAK2sG,QAAUt1F,EAMfrX,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAKo4C,iBAAmBP,EAQxB73C,KAAK4sG,aAILv/E,EAAOO,OACL,kBAAMvrB,EAAK+O,QACX,SAACwE,GACCvT,EAAKuqG,aAAaj3F,UAAUC,MA5ElCna,EAAQ+7C,kGAqFR/7C,EAAQ+7C,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKoR,QAAyB,IAAhBpR,KAAKoR,OACnB,IAAMtR,EAAiBE,KAAK02B,gBAGxBwE,SACJ,GAAIl7B,KAAK05C,WAAauyD,EAAA,EAAiBruG,OACnCoC,KAAK05C,WAAauyD,EAAA,EAAiBvuG,YAErCw9B,EAAc,IAAIuxE,EAAA,GAChBpvG,KAA2C,eAExC,GAAI2C,KAAK05C,WAAauyD,EAAA,EAAiBzuG,aAC1CwC,KAAK05C,WAAauyD,EAAA,EAAiBxuG,kBACrC,CACA,IAAMq2B,EAAUh0B,EAAewF,UAAU,iCACnCmmG,EAAU3rG,EAAewF,UAC7B,4EAIF41B,EAAc,IAAIixE,EAAA,EAChBnsG,KAAK2sG,QAAQ,kBACb7sG,GAEEiZ,MAAO,IAAI2zF,EAAA,EACXx6E,SAAUlyB,KAAK05F,SAAL,kBAAgC5lE,EAAhC,SAAA9zB,CAAiDA,KAAKmmC,QAAQ,GACxEtU,YAAa7xB,KAAK05F,SAAL,kBAAgC+R,EAAhC,SAAAzrG,CAAiDA,KAAKmmC,QAAQ,UAG1E,GAAInmC,KAAK05C,WAAauyD,EAAA,EAAiBpuG,SAC1CmC,KAAK05C,WAAauyD,EAAA,EAAiBtuG,cACrC,CACA,IAAMm2B,EAAUh0B,EAAewF,UAAU,+BACnCmmG,EAAU3rG,EAAewF,UAC7B,gFAIF41B,EAAc,IAAIgxE,EAAA,EAChBlsG,KAAK2sG,QAAQ,kBACb7sG,GAEEiZ,MAAO,IAAI2zF,EAAA,EACXx6E,SAAUlyB,KAAK05F,SAAL,kBAAgC5lE,EAAhC,SAAA9zB,CAAiDA,KAAKmmC,QAAQ,GACxEtU,YAAa7xB,KAAK05F,SAAL,kBAAgC+R,EAAhC,SAAAzrG,CAAiDA,KAAKmmC,QAAQ,KAKjFhnC,EAAA,EAAYmE,OAAO43B,GAEnBA,EAAYvlB,UAAU3V,KAAKoR,QAC3BpR,KAAK4sG,aAAe1xE,EACpBl7B,KAAK4E,IAAI0vB,eAAe4G,GAExB,IAAM/M,EAAMm+E,EAAA,EAActsG,MACtBk7B,aAAuBuxE,EAAA,EACzBzsG,KAAKo4C,iBAAiB9Q,eACpBnZ,EACAq+E,EAAA,EACEtxE,EACA,UACAl7B,KAAK6sG,eACL7sG,QAGKk7B,aAAuBixE,EAAA,GAC/BjxE,aAAuBgxE,EAAA,IACxBlsG,KAAKo4C,iBAAiB9Q,eACpBnZ,EACAq+E,EAAA,EACEtxE,EACA,aACAl7B,KAAK6sG,eACL7sG,QAaRvE,EAAQ+7C,YAAYl9C,UAAUuyG,eAAiB,SAASrqF,GACtD,IAAIooF,SAGFA,EAFEpoF,EAAMjK,QAECiK,EAAMjK,QAGNiK,EAAMG,OAAOpK,QAExBpZ,EAAA,EAAYmE,OAAOsnG,GAGnB,IAAIpvF,EAAWovF,EAAOtuF,cAChBjf,EAAOme,EAASxC,UAClBhZ,KAAK05C,SAASl4B,QAAQ,UAAYnkB,EAAKmkB,QAAQ,WACjDhG,EAAW6wF,EAAA,EAAUS,QAAQtxF,IAE/B,IAAMjD,EAAU,IAAIjC,EAAA,EAAUkF,GAC1Bxb,KAAK2d,oBAAoB4uF,EAAA,EAC3BvsG,KAAK2d,SAASvjB,KAAKme,GAEnBvY,KAAK2d,SAAS2O,WAAW/T,IAQ7B9c,EAAQ+7C,YAAYl9C,UAAU8qE,WAAa,WAAW,IAAAr/D,EAAA/F,KACpDA,KAAKg4C,SAAS,WACZ,IAAM7pB,EAAMm+E,EAAA,EAAAvmG,GACZA,EAAKqyC,iBAAiB5Q,iBAAiBrZ,GACvCpoB,EAAK6mG,aAAaj3F,WAAU,GAC5B5P,EAAKnB,IAAIyvB,kBAAkBtuB,EAAK6mG,eAC/B,IAGLnxG,EAAQ+0B,WAAW,8BAA+B/0B,EAAQ+7C,aAG3Cl6C,EAAA,kCCjTf,IAAAyvG,EAAA1xG,EAAA,KAeMI,EAAU,SAASiE,EAAOkhD,GAM9B5gD,KAAK6gD,MAAQnhD,EAMbM,KAAK8gD,SAAWF,EAMhB5gD,KAAKgtG,oFAUPvxG,EAAQnB,UAAUgU,cAAgB,SAASuX,GACzC,IAAK7lB,KAAKgtG,UAAUnnF,GAAK,CACvB,IAAMtiB,EAASvD,KAAK8gD,SAAd,IAA0Bj7B,EAA1B,UACN7lB,KAAKgtG,UAAUnnF,GAAM7lB,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KACvC3D,KAAKitG,qBAAqBjwG,KAAKgD,OAEnC,OAAOA,KAAKgtG,UAAUnnF,IAQxBpqB,EAAQnB,UAAU2yG,qBAAuB,SAAStwD,GAChD,OAAO,IAAIowD,EAAA,GAAyB3mF,KAAKu2B,EAAKjjD,QAOhD+B,EAAQC,OAASoM,QAAQpM,OAAO,wBACjBqM,QAAQ,mBAAoBtM,GAG5B6B,EAAA,kCCtDf,IAAM7B,EAAU,SAASiE,EAAOwtG,GAM9BltG,KAAKK,OAASX,EAMdM,KAAKytC,KAAOy/D,yEAUdzxG,EAAQnB,UAAU6yG,UAAY,SAASl5E,EAAYnP,GAEjD,IAAMhe,EAASge,MAIf,OAHAhe,EAAOrL,EAAQ2xG,MAAMC,GAAKp5E,EAAW,GACrCntB,EAAOrL,EAAQ2xG,MAAM1iC,GAAKz2C,EAAW,GAE9Bj0B,KAAKK,OAAOhE,IAAI2D,KAAKytC,MAC1B3mC,WACCnD,KAAK3D,KAAKstG,iBAAiBtwG,KAAKgD,QASrCvE,EAAQnB,UAAUgzG,iBAAmB,SAAS3wD,GAC5C,OAAOA,EAAKjjD,MAOd+B,EAAQ2xG,OACNC,EAAG,MACH3iC,EAAG,QAOLjvE,EAAQC,OAASoM,QAAQpM,OAAO,iBACjBqM,QAAQ,YAAatM,GAGrB6B,EAAA,oCC3Ef,IAAAiwG,EAAAlyG,EAAA,KAAAmyG,EAAAnyG,EAAA,KAOAkyG,EAAA,EAAME,KAAKliB,YAAY32D,IAAI44E,EAAA,GAIZlwG,EAAA,EAHC,uCCDhB,IAAM7B,EAAUqM,QAAQpM,OAAO,sBAG/BD,EAAQc,MAAM,6BAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,2BACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,mCAGN97C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iCAAkC57C,EAAQ,SAqB/DI,EAAQy7C,WAAa,SAASw2D,GAC5B,OACEl7D,SAAU,IACVE,OACEi7D,OAAQ,oBACR/zF,MAAO,0BAET4W,WAAY,oCACZ8mB,kBAAkB,EAClBC,YAAam2D,IATjBjyG,EAAQy7C,kDAaRz7C,EAAQs3C,UAAU,kBAChBt3C,EAAQy7C,YAQVz7C,EAAQmyG,iBACL,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACpI,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACpI,UAAW,UAAW,OAAQ,YAcjCnyG,EAAQ+7C,YAAc,SAASnqB,EAAQoqB,EAAUlqB,GAO/CvtB,KAAK2tG,OAAS3tG,KAAK2tG,QAAUlyG,EAAQmyG,eAOrC5tG,KAAK4Z,OAdPne,EAAQ+7C,mDAqBR/7C,EAAQ+7C,YAAYl9C,UAAUuzG,SAAW,SAASj0F,GAChD5Z,KAAK4Z,MAAQA,GAGfne,EAAQ+0B,WAAW,4BACjB/0B,EAAQ+7C,aAGKl6C,EAAA,kCChHf,IAAAuzE,EAAAx1E,EAAA,IAAAyyG,EAAAzyG,EAAA,GAYMI,EAAU,aAUhBA,EAAQnB,UAAUyzG,oBAAsB,SAAS3hC,GAC/C,IAAMve,EAASue,EAAIlmB,MAAM,8BACzB,GAAI2H,EAAQ,CACV,IAAM/oD,EAAIo/C,WAAW2J,EAAO,GAAGzoC,QAAQ,IAAM,KACvC9E,EAAI4jC,WAAW2J,EAAO,GAAGzoC,QAAQ,IAAM,KAC7C,IAAK2+B,MAAMj/C,KAAOi/C,MAAMzjC,GACtB,OAAQxb,EAAGwb,GAGf,OAAO,MAYT7kB,EAAQnB,UAAU0zG,kBAAoB,SAASC,GAC7C,IAAIhiB,SAAMza,SACJ+Z,KAaN,OAZA0iB,EAAiBjrG,QAAQ,SAACqV,GAEC,UADzB4zE,EAAO5zE,EAAW61F,eACT7kC,OAAO,EAAG,KACjB4iB,UAAeA,GAGJ,QADbza,EAAOX,EAAA,EAAWob,IAEhBV,EAAYnxF,KAAKo3E,GAEjB1tE,QAAQC,MAAR,kBAAgCkoF,EAAhC,iCAGGV,GAiBT9vF,EAAQnB,UAAU6zG,eAAiB,SAASrxF,EAC1C4C,EAAQ0uF,EAAgBC,GACxB,IAAIvpE,SAeJ,YAdwB5kC,IAApBmuG,IACFA,GAAmBD,IAErBC,EAAgBroG,KAAK,SAACqS,GACpB,IAEE,GADAysB,EAAW+rC,EAAA,EAAiB/zD,EAAazE,EAAY+1F,GACjDN,EAAA,EAA4BpuF,EAAQolB,GACtC,OAAO,EAET,MAAOqgC,IAGTrgC,EAAW,OAENA,GAiBTrpC,EAAQnB,UAAUg0G,4BAA8B,SAC9CxxF,EAAa4C,EAAQ0uF,EAAgBC,GACrC,IAAIvpE,EAAW9kC,KAAKmuG,eAAerxF,EAAa4C,EAAQ0uF,EACtDC,GAKF,OAJiB,OAAbvpE,IACFA,EAAW9kC,KAAKmuG,eAAerxF,EAAY/X,UAAW2a,EACpD0uF,EAAgBC,IAEbvpE,IAOTrpC,EAAQC,OAASoM,QAAQpM,OAAO,0BACjBqM,QAAQ,qBAAsBtM,GAG9B6B,EAAA,kCChIf,IAAAwmE,EAAAzoE,EAAA,IAeMI,EAAU,SAASkE,EAAWD,GAMlCM,KAAKK,OAASX,EAMdM,KAAKytC,KAA+B9tC,EAAUtD,IAAI,qBAElD,IAAMkH,EAAMvD,KAAKytC,KAAK11B,MAAM,KAK5B/X,KAAK8gD,SAAWv9C,EAAI,GAEpB,IAAMye,EAA6B,GAAdze,EAAIrJ,OAAL,IAAwBqJ,EAAI,GAAO,GAKvDvD,KAAKuuG,eAAiBzqC,EAAA,EAAU/gB,kBAAkB/gC,oEASpDvmB,EAAQnB,UAAU0oD,OAAS,SAASwrD,EAAO1nG,GAAQ,IAAAzE,EAAArC,KAC3CyuG,EAAcp0G,OAAOgrB,UAAWrlB,KAAKuuG,eAAgBznG,GAE3D2nG,EAAA,MAAuBD,EAEvB,IAAMjrG,EAASvD,KAAK8gD,SAAd,IAA0BgjB,EAAA,EAAUtgB,kBAAkBirD,GAE5D,OAAO,IAAIC,QAAQ,SAAC1qG,EAASwD,GAC3BnF,EAAKhC,OAAOhE,IAAIkH,GACbI,KAAK,SAAAg5C,GAAA,OAAQ34C,EAAQ24C,EAAA,QACrBgyD,MAAMnnG,OAOb/L,EAAQC,OAASoM,QAAQpM,OAAO,+BACjBqM,QAAQ,0BAA2BtM,GAGnC6B,EAAA,kCCvEf,IAAAsxG,EAAAvzG,EAAA,KAiBMI,EAAU,SAASkE,EAAWG,GAMlCE,KAAK02B,gBAAkB52B,EAOvBE,KAAK6uG,UAAYlvG,EAAUY,IAAI,mBAC7BZ,EAAUtD,IAAI,mBAAqB,QAOrC2D,KAAK8uG,WAAanvG,EAAUY,IAAI,oBAC9BZ,EAAUtD,IAAI,oBAAsB,OAOtC2D,KAAK+uG,gBAAiBpvG,EAAUY,IAAI,yBAClCZ,EAAUtD,IAAI,wBAOhB2D,KAAKgvG,OAASrvG,EAAUY,IAAI,gBAC1BZ,EAAUtD,IAAI,gBAAkB,IAOlC2D,KAAKivG,WAAatvG,EAAUY,IAAI,oBAC9BZ,EAAUtD,IAAI,oBAAsB,IAOtC2D,KAAKmY,UAAYxY,EAAUtD,IAAI,mGAYjCZ,EAAQnB,UAAU40G,YAAc,SAASx1G,EAAM2yF,GAAY,IAAAhqF,EAAArC,KACzD,GAAmB,GAAftG,EAAKQ,QAAoC,GAArBmyF,EAAWnyF,OACjC,MAAO,GAGT,IAAMi1G,EAA0B9iB,EAAWznF,IAAI,SAAAwqG,GAAA,OAAgB/sG,EAAKq0B,gBAAgBpxB,UAAU8pG,EAAarzG,QAErGszG,EAASrvG,KAAKsvG,QAAQH,GACtBI,EAAW71G,EAAKkL,IAAI,SAACS,GACzB,IAAMmqG,EAAYnjB,EAAWznF,IAAI,SAAAwqG,GAAA,OAAgB/pG,EAAO+pG,EAAarzG,QACrE,OAAOsG,EAAKitG,QAAQE,KAGtB,OAAOxvG,KAAK+uG,eAAiBM,EAASE,EAASnoG,KAAK,IAAMmoG,EAASnoG,KAAK,KAS1E3L,EAAQnB,UAAUg1G,QAAU,SAASjqG,GAAQ,IAAAU,EAAA/F,KACrCyvG,EAAsB,IAAIhpD,OAAOzmD,KAAKgvG,OAAQ,KAC9CU,EAAc1vG,KAAKgvG,OAAShvG,KAAKgvG,OAYvC,OAVkB3pG,EAAOT,IAAI,SAACrI,GAC5B,YAAc2D,IAAV3D,GAAiC,OAAVA,GACzBA,KAAWA,EAEJwJ,EAAKipG,OAASzyG,EAAM6oB,QAAQqqF,EAAqBC,GAAe3pG,EAAKipG,QAErE,KAIS5nG,KAAKpH,KAAKivG,YAA9B,MAYFxzG,EAAQnB,UAAU25F,cAAgB,SAASv6F,EAAM2yF,EAAYluE,GAC3D,IAAMm8E,EAAct6F,KAAKkvG,YAAYx1G,EAAM2yF,GAC3CrsF,KAAKmY,UACHmiF,EAAan8E,EADf,oBAC6Cne,KAAK6uG,aAMpDpzG,EAAQC,OAASoM,QAAQpM,OAAO,mBAC9BkzG,EAAA,EAAoB7yG,QAEPgM,QAAQ,kBAAmBtM,GAG3B6B,EAAA,kCCjJf,IAAA6B,EAAA9D,EAAA,GAAAs0G,EAAAt0G,EAAA,KASMI,EAAUqM,QAAQpM,OAAO,oBAuB/BD,EAAQyyD,WAAa,SAASrJ,GAG5B,OACErS,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GACrB,IACM21C,EAAO31C,EAAA,cACP/tC,EAAM8tC,EAAM5kB,MAAMw6D,GACxBnpF,EAAA,EAAYisB,iBAAiBxmB,EAAK+qG,EAAA,GAElC,IAAMC,EAAYj9D,EAAA,mBAClBxzC,EAAA,EAAYmE,YAAqBpD,IAAd0vG,GAEnB,IAAIz+F,SACA0+F,SAEEC,EAAiB,SAAjBA,IACJlrG,EAAImkF,aACJnkF,EAAIokF,aAEAlqD,KAAK8pD,MAAQz3E,EAzBgB,MA0B/B0+F,EAAoBhrD,EAAQokC,sBAAsB6mB,KAMtDlmF,EAAQ+R,GAAG,gBAAiB,WAC1B/2B,EAAImkF,aACJnkF,EAAIokF,eAGNt2C,EAAM9kB,OAAOgiF,EAAW,SAACh6F,EAAQiY,GAC3BjY,GAAUiY,IACZ1c,EAAQ2tB,KAAK8pD,MACb/jC,EAAQkrD,qBAAqBF,GAC7BA,EAAoBhrD,EAAQokC,sBAAsB6mB,SA1C5Dr0G,EAAQyyD,+BAkDRzyD,EAAQs3C,UAAU,gBAAiBt3C,EAAQyyD,YAG5B5wD,EAAA,wDC/Ef,IAAM7B,EAAUqM,QAAQpM,OAAO,8BAC7Bs0G,EAAA,EAAyBt0G,OAAOK,KAChC0pD,EAAA,EAAyB/pD,OAAOK,OA2BlC,SAASk0G,EAA6B1iF,EAAQ0iF,GAC5C,OAAOA,EAA6B1iF,GAxBtC9xB,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,+BAAgC57C,EAAQ,SAI7DI,EAAQc,MAAM,+BAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,6BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,qFA0BN97C,EAAQy7C,YACNqtB,UACE2rC,YAAe,kBAEjB1/E,WAAY,qBACZ+mB,YAAa04D,GAEfx0G,EAAQipE,UAAU,WAAYjpE,EAAQy7C,gBAGhCi5D,aAaJ,SAAAA,EAAY9iF,EAAQq4B,EAAc0qD,EAAiBxwG,EAAI2tB,gGAAQtlB,CAAAjI,KAAAmwG,GAK7DnwG,KAAK6kE,QAAUx3C,EAMfrtB,KAAKqwG,iBAAmBD,EAMxBpwG,KAAKI,IAAMR,EAMXI,KAAKS,cAAgBilD,EAMrB1lD,KAAKkwG,YAMLlwG,KAAKswG,UAMLtwG,KAAK6sE,MAML7sE,KAAK6D,QAML7D,KAAKy+F,WAAaz+F,KAAKS,cAAc4iD,eAMrCrjD,KAAKuwG,kBAAoBvwG,KAAKy+F,WAAWvkG,OAAS81G,EAAA,EAAyBljC,aAC3EpnB,EAAatC,UAAY4sD,EAAA,EAAyBjjC,iBAMlD/sE,KAAKwwG,kBAAmB,EAMxBxwG,KAAKywG,aAAc,EAMnBzwG,KAAK0wG,oBAAqB,EAE1B1wG,KAAKusE,qGAOPA,uBAAc,IAAAlqE,EAAArC,KACZA,KAAKI,IAAIuwG,KAAK3wG,KAAKqwG,iBAAiB9jC,YAAYvsE,KAAKy+F,aAClD96F,KAAK,SAACg5C,GACLt6C,EAAKiuG,UAAY3zD,EAAKjjD,KAAK+yE,UAC3BpqE,EAAKquG,oBAAqB,GACzB,SAAC/zD,GACFt6C,EAAKiuG,UAAYjuG,EAAKuuG,UACtBvuG,EAAKquG,oBAAqB,iBAQhC/jC,wBAAe,IAAA5mE,EAAA/F,KACTA,KAAK6kE,QAAL,aAA6BgsC,QAC/B7wG,KAAKI,IAAIuwG,KAAK3wG,KAAKqwG,iBAAiB1jC,aAAa3sE,KAAKy+F,WAAYz+F,KAAK6sE,MAAO7sE,KAAK6D,UAChFF,KAAK,SAACg5C,GACL52C,EAAKyqG,kBAAmB,GACvB,SAAC7zD,GACF52C,EAAK0qG,aAAc,UAM7Bh1G,EAAQ+0B,WAAW,qBAAsB2/E,GAG1B7yG,EAAA,sDCtLf,IAAM7B,EAAUqM,QAAQpM,OAAO,4CAC7Bo1G,EAAA,EAA0Bp1G,OAAOK,OA2BnC,SAASg1G,EAA2CxjF,EAAQwjF,GAC1D,OAAOA,EAA2CxjF,GAxBpD9xB,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6CAA8C57C,EAAQ,SAI3EI,EAAQc,MAAM,6CAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,2CACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,iHAiBN97C,EAAQ+7C,YAAR,WAYE,SAAAmtB,EAAYt3C,EAAQyO,gGAAiB7zB,CAAAjI,KAAA2kE,GAQnC3kE,KAAKuB,MASLvB,KAAKmmC,OAAS9Y,EAMdrtB,KAAKk8B,aAAeJ,EAAgB72B,WAnCxC,OAAA0/D,EAAA9nC,SAAA,4BAAA8nC,EAAArqE,UA0CE02G,YA1CF,WA2CI,6BAA8B9yC,EAAA,EAAcl+D,KAAKuB,QA3CrDojE,EAAArqE,UAkDE8lF,OAlDF,WAmDIpgF,KAAKuB,MAAMmxD,yBAnDfiS,EAAArqE,UA4DE22G,iBA5DF,SA4DmBtiG,GACfA,EAAWiX,SAAWjX,EAAWiX,SA7DrC++C,EAAArqE,UAsEEs1C,OAtEF,WAuEI,IAAK,IAAI51C,EAAIgG,KAAKuB,MAAMy7B,YAAY9iC,OAAS,EAAWF,GAAH,EAAYA,IAC/DgG,KAAKk8B,aAAa0T,OAAO5vC,KAAKuB,MAAMy7B,YAAYhjC,KAxEtD2qE,EAAArqE,UAiFE6yC,iBAjFF,SAiFmBx+B,GACf3O,KAAKk8B,aAAa0T,OAAOjhC,IAlF7Bg2D,EAAA,GAuFAlpE,EAAQipE,UAAU,0BAChBH,UACEhjE,MAAS,KAEXivB,WAAY/0B,EAAQ+7C,YACpBD,YAAaw5D,IAIAzzG,EAAA,kCC5If,IAAA4zG,EAAA71G,EAAA,KAAA81G,EAAA91G,EAAA,KASMI,EAAUqM,QAAQpM,OAAO,0BAC7Bw1G,EAAA,EAAyBx1G,OAAOK,KAChCo1G,EAAA,EAAwBz1G,OAAOK,OAIlBuB,EAAA,mCCff,SAAAo4B,GAAA,IAAAC,EAAAt6B,EAAA,IAAA+1G,EAAA/1G,EAAA,KAAAg2G,EAAAh2G,EAAA,IAAAi2G,EAAAj2G,EAAA,KAAAk2G,EAAAl2G,EAAA,KAAAm2G,EAAAn2G,EAAA,KAAAo2G,EAAAp2G,EAAA,IAAAq2G,EAAAr2G,EAAA,KAAAs2G,EAAAt2G,EAAA,KAAAu2G,EAAAv2G,EAAA,IAAAw2G,EAAAx2G,EAAA,KAAAy2G,EAAAz2G,EAAA,KAAA02G,EAAA12G,EAAA,KAAA22G,EAAA32G,EAAA,KAAA42G,EAAA52G,EAAA,IAAA62G,EAAA72G,EAAA,GAAA82G,EAAA92G,EAAA,GAAA+2G,EAAA/2G,EAAA,GAAAg3G,EAAAh3G,EAAA,GAAAi3G,EAAAj3G,EAAA,IAAAk3G,EAAAl3G,EAAA,IAAAm3G,EAAAn3G,EAAA,IAAAo3G,EAAAp3G,EAAA,KAAA8b,EAAA9b,EAAA,IAAAq3G,EAAAr3G,EAAA,KAoEMI,EAAU,SAAVA,EAAmBmE,EAAIw2B,EAAU9I,EAAY3tB,EAAWgzG,EAAc7yG,EAAiB+3C,EAC3FthB,EAAkBmvB,GAAc,IAAArjD,EAAArC,KAMhCA,KAAK4uC,GAAKhvC,EAMVI,KAAK0tB,WAAaJ,EAMlBttB,KAAKw2B,UAAYJ,EASjBp2B,KAAK4yG,+BAAiC,KAQtC5yG,KAAK6yG,cAAgBF,EAMrB3yG,KAAKo4C,iBAAmBP,EAMxB73C,KAAKk3B,kBAAoBX,EAMzBv2B,KAAKkqG,cAAgBvqG,EAAUY,IAAI,gBACjCZ,EAAUtD,IAAI,gBAAkB,KAMlC2D,KAAKi3E,wBAA0Bt3E,EAAUY,IAAI,0BAC3CZ,EAAUtD,IAAI,0BAA4B,KAK5C,IAAM+mF,EAAwBzjF,EAAUY,IAAI,yBAC1CZ,EAAUtD,IAAI,yBAA2B,KAM3C2D,KAAK8yG,gBAAkB1vB,EACrBA,EAAsBx2D,oBAAsB,KAM9C5sB,KAAKiqG,eAAiBtqG,EAAUY,IAAI,qBAClCZ,EAAUtD,IAAI,qBAAuB,KAMvC2D,KAAKo8B,aAAez8B,EAAUY,IAAI,eAChCZ,EAAUtD,IAAI,eAAiB,KAMjC,IAAM02G,EAAsBpzG,EAAUY,IAAI,uBACxCZ,EAAUtD,IAAI,0BA+FhB,IA9F4C,IAAxC02G,EAAoBC,iBAEtBhzG,KAAKk3B,kBAAkB6uB,oBAAmB,GAO5C/lD,KAAKizG,6BAA+BF,EAAoBG,0BAMxDlzG,KAAKmzG,+BACHxzG,EAAUY,IAAI,iCACZZ,EAAUtD,IAAI,iCAAmC,KAMrD2D,KAAK42B,WAAaj3B,EAAUY,IAAI,aAAeZ,EAAUtD,IAAI,aAAe,KAM5E2D,KAAKozG,yBAA2BzzG,EAAUY,IAAI,2BAC5CZ,EAAUtD,IAAI,2BAA6B,KAM7C2D,KAAKqzG,iBAAmB1zG,EAAUY,IAAI,mBACpCZ,EAAUtD,IAAI,mBAAqB,KAMrC2D,KAAKszG,cAAgB3zG,EAAUY,IAAI,gBACjCZ,EAAUtD,IAAI,qBAAkB6D,EAMlCF,KAAKu/C,gBAAkB5/C,EAAUY,IAAI,kBACnCZ,EAAUtD,IAAI,kBAAoB,KAQpC2D,KAAKS,cAAgBilD,EAMrB1lD,KAAKuzG,kBAAoB5zG,EAAUY,IAAI,oBACrCZ,EAAUtD,IAAI,oBAAsB,KAMtC2D,KAAK0jF,SAAW/jF,EAAUY,IAAI,WAC5BZ,EAAUtD,IAAI,WAAa,KAM7B2D,KAAKgvC,KAAO,KAMZhvC,KAAKwzG,oBAAsB7zG,EAAUY,IAAI,sBACvCZ,EAAUtD,IAAI,sBAAwB,KAOxC2D,KAAKyzG,mBAAqB,UACkBvzG,IAAxC6yG,EAAoBW,iBAAiC1zG,KAAKwzG,oBAAqB,CACjF,IAAMjoB,EAAcvrF,KAAKwzG,oBAAoBxF,kBAAkB+E,EAAoBW,iBAC/EnoB,EAAYrxF,OAAS,IACvB8F,KAAKyzG,mBAAqBloB,GAQ9BvrF,KAAK2zG,kBAAoB,KAMzB3zG,KAAK4zG,qBAEsC1zG,IAAvC6yG,EAAoBc,eACtB7zG,KAAK4zG,gBAAkBb,EAAoBc,eAE3C7zG,KAAK4zG,iBAAmB,IAAIz8F,EAAA,GAC1BqD,MAAO,IAAIi4F,EAAA,GACT34F,OAAQ,IAAI04F,EAAA,GACV54F,MAAO,2BACPG,MAAO,IAET4C,OAAQ,EACRlC,OAAQ,EACRq5F,QAAS,EACTr4F,MAAO,MAEP,IAAItE,EAAA,GACNqD,MAAO,IAAIi4F,EAAA,GACT34F,OAAQ,IAAI04F,EAAA,GACV54F,MAAO,qBACPG,MAAO,IAET4C,OAAQ,EACRlC,OAAQ,EACRq5F,QAAS,EACTr4F,MAAO,OASbzb,KAAK+zG,YAAc,KAMnB/zG,KAAKg0G,mBAAqB,IAAIrC,EAAA,GAC5Br5F,UAAU,EACV27F,cAAc,EACdC,gBACE/4F,UAAay2F,EAAA,EAA4B3zG,MACzCk2G,YAAevC,EAAA,EAA4BrzG,QAC3C61G,UAAaxC,EAAA,EAA4B3zG,MACzCo2G,SAAYzC,EAAA,EAA4BlzG,KACxC41G,MAAS1C,EAAA,EAA4BzzG,aACrC0rG,SAAY+H,EAAA,EAA4B1zG,UACxCq2G,QAAW3C,EAAA,EAA4BxzG,QACvCrC,KAAQ61G,EAAA,EAA4BvzG,KACpCm2G,YAAe5C,EAAA,EAA4BlzG,KAC3C8a,UAAao4F,EAAA,EAA4BtzG,WACzCob,YAAek4F,EAAA,EAA4BnzG,aAC3Cg2G,YAAe7C,EAAA,EAA4B3zG,MAC3Cqb,YAAes4F,EAAA,EAA4BjzG,QAE7CsrD,eACEluD,KAAQ,SAAAwc,GAAA,OAAWzY,EAAewF,UAAUiT,EAAQ+D,cAActD,YAClEm7F,YAAe,iBAAM,IACrB36F,UAAa,kBAAM,GACnBE,YAAe,kBAAM,MAMrB1Z,KAAKi3E,yBACPo7B,EAAA,EACEryG,KAAKi3E,wBACL,SACAj3E,KAAK00G,oCACL10G,MAIJA,KAAK0tB,WAAWQ,IAAI,uBAAwB,SAAC1L,EAAOgM,EAAUe,GAC5D,IAAMC,KACN,GAAID,EAAYrtB,KAAKy3B,MAAO,CAC1B,IAAM1K,EAAQT,EAASO,WACvBmjF,EAAA,EAAY5uG,OAAiB,OAAV2rB,GAA4B,QAAVA,GACrC,IAAMrJ,EAAoB,OAAVqJ,EAChBT,EAAS8B,mBAAmB,SAAC8U,GAC3B,QAA2BllC,IAAvBklC,EAAKljC,KAAKZ,SAAwB,CACpC,IAAMmmD,EAAQhsD,EAAQk5G,YAAYC,YAAcxvE,EAAKljC,KAAKnG,KAC1DyzB,EAASi4B,GAAS7hC,SAGjB,CACL,IAAMivF,KACNtlF,EAAYe,mBAAmB,SAAC8U,QACHllC,IAAvBklC,EAAKljC,KAAKZ,UAA8C,OAApB8jC,EAAKrW,YAC3C8lF,EAAcz6G,KAAKgrC,EAAKljC,KAAKnG,QAGjCyzB,EAAS/zB,EAAQk5G,YAAYG,kBAAoBvlF,EAAYrtB,KAAKnG,MAAQ84G,EAAcztG,KAAK,KAE/F/E,EAAK60B,kBAAkBiB,YAAY3I,KAErCxvB,KAAK0tB,WAAWQ,IAAI,yBAA0B,SAAC1L,EAAOgM,GACpD,IAAMgB,KACAvU,EAAUuT,EAAS/rB,MAAMklB,aAI/B6H,GAHmBhB,EAASR,OAAO9rB,KAAKy3B,MACtCl+B,EAAQk5G,YAAYI,aAAet5G,EAAQk5G,YAAYK,oBACrDxmF,EAAStsB,KAAKnG,MACIkf,EACtB5Y,EAAK60B,kBAAkBiB,YAAY3I,KAMrC,IAAM7R,EAAW3d,KAAKi1G,cAClBj1G,KAAKkqG,gBACPvsF,EAAS3a,QAAQ,SAACuV,GACZlW,EAAK4nG,gBACP5nG,EAAK4nG,eAAe3xF,SAASC,GAE/BlW,EAAK6yG,gBAAgB38F,KAGvBvY,KAAKkqG,cAAcjsC,OAAOtgD,GAC1B00F,EAAA,EAAgBryG,KAAKkqG,cAAe,MAAOlqG,KAAKm1G,uBAAwBn1G,MACxEqyG,EAAA,EAAgBryG,KAAKkqG,cAAe,SAAUlqG,KAAKo1G,0BAA2Bp1G,OAG5EA,KAAKiqG,gBACPjqG,KAAK0tB,WAAWQ,IAAI,uBAAwB,WAC1CvQ,EAAS3a,QAAQ,SAACuV,GAChBlW,EAAK4nG,eAAe3xF,SAASC,OAK/BvY,KAAKqzG,kBACPrzG,KAAK0tB,WAAWQ,IAAIkjF,EAAA,EAAgBtxD,UAAUC,eAAgB,SAACv9B,EAAOzmB,GACpEsG,EAAKgzG,eAAet5G,KAUxBiE,KAAKs1G,oCAAsC,KAEvCt1G,KAAKo8B,cAAgBp8B,KAAKmzG,gCAE5BnzG,KAAKu1G,2BAA2B5xG,KAAK,WAGnC0uG,EAAA,EACEhwG,EAAK8wG,+BAA+BzjE,oBACpC,MACArtC,EAAKmzG,oCAHPnzG,GAMAgwG,EAAA,EACEhwG,EAAK8wG,+BAA+BzjE,oBACpC,SACArtC,EAAKozG,uCAHPpzG,GAMAgwG,EAAA,EACEhwG,EAAK8wG,+BAA+BljE,qBACpC,MACA5tC,EAAKmzG,oCAHPnzG,GAMAgwG,EAAA,EACEhwG,EAAK8wG,+BAA+BljE,qBACpC,SACA5tC,EAAKozG,uCAHPpzG,GASA,IAAAsK,EAAuBtK,EAAK8wG,+BAA+BrjE,UAA3DljC,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAsE,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAA3DkzC,EAA2DviC,EACpE7K,EAAKqzG,yBAAyBjmE,GAEhC,IAAAngC,EAAwBjN,EAAK8wG,+BAA+B/iE,WAA5D7gC,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAwE,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAApV,OAAA,MAAAuV,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAjT,MAAA,IAA7DyzC,EAA6DvgC,EACtEpN,EAAKqzG,yBAAyB1lE,MAKpChwC,KAAK21G,iSAUPl6G,EAAQnB,UAAUs7G,aAAe,WAC/B,IAAM9wG,EAAI9E,KAAKk3B,kBAAkBqvB,sBAAsB5wB,EAAA,EAAQ8B,eAAexiB,OACxEqL,EAAItgB,KAAKk3B,kBAAkBqvB,sBAAsB5wB,EAAA,EAAQ8B,eAAeviB,OAE9E,IAAK6uC,MAAMj/C,KAAOi/C,MAAMzjC,GAAI,CAC1B,IAAMF,GAAUtb,EAAGwb,GACnB,GAAgC,OAA5BtgB,KAAKyzG,oBAA+BzzG,KAAKwzG,oBAAqB,CAChE,IAAMqC,EAAmB71G,KAAKgvC,KAAKvvB,UAAUgyB,gBACvCqkE,EAAoB91G,KAAKwzG,oBAAoBlF,4BACjDluF,EAAQy1F,EAAiB31F,YAAa21F,EACtC71G,KAAKyzG,oBACP,GAAIqC,EACF,OAAOA,EAGX,OAAO11F,EAET,OAAO,MAST3kB,EAAQnB,UAAUy7G,WAAa,WAC7B,IAAM1rB,EAAOrqF,KAAKk3B,kBAAkBqvB,sBAAsB5wB,EAAA,EAAQ8B,eAAetiB,OACjF,OAAO4uC,MAAMsmC,QAAQnqF,EAAYmqF,GAYnC5uF,EAAQnB,UAAU07G,gBAAkB,WAClC,IAAMC,EAAYj2G,KAAKk3B,kBAAkBsvB,uBAAuB7wB,EAAA,EAAQ8B,eAAe1iB,eACvF,YAAqB7U,IAAd+1G,EAA0Bj2G,KAAKizG,2BAA6BgD,GASrEx6G,EAAQnB,UAAU47G,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoBn2G,KAAKgvC,KAAKvvB,UAAUK,YAE5CoyF,EAAA,EAAY3yF,YAAY62F,GAGpBp2G,KAAK2zG,mBACP3zG,KAAK8yG,gBAAgBrmF,cAAczsB,KAAK2zG,mBAG1C3zG,KAAK2zG,kBAAoB,IAAIrB,EAAA,EAC3B,IAAIC,EAAA,EAAY6D,IAClBp2G,KAAK2zG,kBAAkBr7F,SAAStY,KAAK4zG,iBAGrC5zG,KAAK8yG,gBAAgBxmF,WAAWtsB,KAAK2zG,oBAYvCl4G,EAAQnB,UAAU+7G,cAAgB,WAChC,OAAOr2G,KAAKk3B,kBAAkBovB,sBAAsB3wB,EAAA,EAAQ8B,eAAeziB,cAS7EvZ,EAAQnB,UAAUg8G,cAAgB,SAASC,EAAaJ,GACtD,IAAIK,SAEFA,EADEL,GAGgBn2G,KAAKgvC,KAAKvvB,UAAUK,YAExCoyF,EAAA,EAAY3yF,YAAYi3F,GAExB,IAAMC,EAAM/gF,EAAE,UACZktC,MAAS,wBACTxoD,KAAQm8F,IACP,GAEsB,OAArBv2G,KAAK+zG,aACP/zG,KAAKgvC,KAAK5Z,cAAcp1B,KAAK+zG,aAG/B/zG,KAAK+zG,YAAc,IAAIzC,EAAA,GACrB1nF,QAAS6sF,EACT3xE,SAAU0xE,IAGZx2G,KAAKgvC,KAAK7Z,WAAWn1B,KAAK+zG,cAY5Bt4G,EAAQnB,UAAU26G,YAAc,WAC9B,IAAM3zC,EAAIthE,KAAKk3B,kBAAkBovB,sBAAsB3wB,EAAA,EAAQ8B,eAAe3iB,UAC9E,YAAU5U,IAANohE,GAAyB,KAANA,EACd4wC,EAAA,EAAY5uG,OAAOtD,KAAKg0G,mBAAmBriE,aAAa2vB,QAUnE7lE,EAAQnB,UAAUm9E,cAAgB,SAAS70E,GAGzC,IAHqD,IAAAmD,EAAA/F,KAE/C+8C,EAAO/8C,KAAKS,cAAc6jD,uBAAuB7oD,EAAQk5G,YAAY+B,YAClE18G,EAAI,EAAGA,EAAI+iD,EAAK7iD,OAAQF,IAAK,CACpC,IAAM4W,EAAMmsC,EAAK/iD,GACXuC,EAAQyD,KAAKS,cAAckjD,SAAS/yC,GAC1CshG,EAAA,EAAY5uG,OAAO/G,GACnBqG,EAAWgO,EAAI3T,MAAMxB,EAAQk5G,YAAY+B,WAAWx8G,SAAWqC,EAGjEyD,KAAK0tB,WAAWovC,iBAAiB,kBAAMl6D,GAAY,SAACA,GAClD,IAAMkE,KACN,IAAK,IAAM8J,KAAOhO,EAChBkE,EAAOrL,EAAQk5G,YAAY+B,WAAa9lG,GAAOhO,EAAWgO,GAE5D7K,EAAKtF,cAAcglB,aAAa3e,MAepCrL,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAAK,IAAAiC,EAAA7G,KAEnC4E,IAAQ5E,KAAKgvC,OAIbhvC,KAAKgvC,OACPhvC,KAAK22G,iBACL32G,KAAKgvC,KAAO,MAGVpqC,IACF5E,KAAKgvC,KAAOpqC,EACR5E,KAAKozG,yBACPpzG,KAAKozG,yBAAyBwD,aAAajzG,KAAK,SAAC4U,GAC/C1R,EAAKgwG,aAAajyG,EAAK2T,KAGzBvY,KAAK62G,aAAajyG,EAAK,SAa7BnJ,EAAQnB,UAAUu8G,aAAe,SAASjyG,EAAKkyG,GAAW,IAAAn+E,EAAA34B,KAElDwf,EAAO5a,EAAI6a,UACbW,SAKJ,GAAI02F,GAAaA,EAAUx6F,cAAe,CACxC,IAAMhC,EAAO1V,EAAI0a,UACjB4yF,EAAA,EAAY5uG,OAAOgX,GACnBkF,EAAK6xB,IAAIylE,EAAUx6F,cAAc4D,YAAa5F,OACzC,CAEL,IADkBta,KAAKk3B,kBAAkBsvB,uBAAuBkrD,EAAA,EAAkBqF,iBAAiBC,SACnF,EACd52F,EAASpgB,KAAK41G,iBAEZp2F,EAAKy3F,UAAU72F,GAEjB,IAAMiqE,EAAOrqF,KAAK+1G,kBACL71G,IAATmqF,GACF7qE,EAAK+qE,QAAQF,IAQnBrqF,KAAK4yG,+BAAiCP,EAAA,EACpC7yF,EACA,iBACAxf,KAAK6yG,cAAc,WACjB,IAAMzyF,EAASZ,EAAKM,YACduqE,EAAO7qE,EAAKyqE,UACZvtF,KACNA,EAAOi5B,EAAA,EAAQ8B,eAAexiB,OAAS2G,KAAKmN,MAAM3I,EAAO,IACzD1jB,EAAOi5B,EAAA,EAAQ8B,eAAeviB,OAAS0G,KAAKmN,MAAM3I,EAAO,IACzD1jB,EAAOi5B,EAAA,EAAQ8B,eAAetiB,OAASk1E,EACvC1xD,EAAKzB,kBAAkBiB,YAAYz7B,IAClC,KAAuB,GAC1BsD,MAGEA,KAAKg2G,mBAAqBh2G,KAAK8yG,iBACjC9yG,KAAKk2G,gBAAgB91F,GAIvB,IAAMm2F,EAAcv2G,KAAKq2G,gBACrBE,GACFv2G,KAAKs2G,cAAcC,EAAan2F,GAIlC,IAAM82F,EAAmBl3G,KAAKm3G,uBACL,OAArBD,GAA6Bl3G,KAAKuzG,mBACpCvzG,KAAKuzG,kBAAkBz2E,MAAMo6E,EAAkBtyG,IASnDnJ,EAAQnB,UAAUq8G,eAAiB,WACjCzE,EAAA,EAAY5uG,OACVtD,KAAK4yG,+BAAgC,yBACvCP,EAAA,EAAuBryG,KAAK4yG,gCAC5B5yG,KAAK4yG,+BAAiC,MAcxCn3G,EAAQnB,UAAUknG,mBAAqB,SAASl9F,GAC9C,IAAMyhB,EAAY/lB,KAAKk3B,kBAAkBovB,sBAAsB3wB,EAAA,EAAQ8B,eAAe9iB,UACtF,QAAkBzU,IAAd6lB,EACF,KAAAlW,EAAoBvL,EAApBwL,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA4B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA3V,OAAA,MAAA8V,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAxT,MAAA,IAAjBkG,EAAiBuN,EAC1B,GAAIvN,EAAMpG,IAAI,WAAa0pB,EACzB,OAAOtjB,GAIb,OAAO,MASThH,EAAQnB,UAAUo6G,oCAAsC,WACtD,GAAK10G,KAAKgvC,MAAShvC,KAAKi3E,wBAAxB,CAKA,IACMlxD,EADQ/lB,KAAKi3E,wBAAwB56E,IAAI2D,KAAKgvC,MAC5B3yC,IAAI,SAC5B61G,EAAA,EAAY10F,aAAauI,GAGzB,IAAMrpB,KACNA,EAAOi5B,EAAA,EAAQ8B,eAAe9iB,UAAYoR,EAC1C/lB,KAAKk3B,kBAAkBiB,YAAYz7B,KAYrCjB,EAAQnB,UAAU88G,wBAA0B,WAC1C,GAAKp3G,KAAKu/C,gBAAV,CAIA,IACM83D,EADar3G,KAAKu/C,gBAAgBzoB,SAAS50B,KAAKZ,SACtBsD,IAAI,SAAA1C,GAAA,OAAQA,EAAKnG,OAG3CW,KACNA,EAAOi5B,EAAA,EAAQ8B,eAAeriB,aAAeiiG,EAAajwG,KAAK,KAC/DpH,KAAKk3B,kBAAkBiB,YAAYz7B,KAUrCjB,EAAQnB,UAAUg9G,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAa/1F,QAAQ,SAC1C,OAAwB,GAAjBg2F,GAAsBA,GAAgBD,EAAar9G,OAAS,GAQrEuB,EAAQnB,UAAU+6G,eAAiB,SAASpzG,GAC1C,GAAIA,EAAW,CACb,IAAMs1G,EAAev3G,KAAKS,cAAc2iD,UAAUrrC,MAAM,KACxDm6F,EAAA,EAAY5uG,OAAOi0G,EAAar9G,OAAS,GACK,KAA1Cq9G,EAAaA,EAAar9G,OAAS,IAErCq9G,EAAan8G,OAAOm8G,EAAar9G,OAAS,GAExC8F,KAAKs3G,YAAYC,GACnBA,EAAaA,EAAar9G,OAAS,GAAK+H,EAExCs1G,EAAan9G,KAAK,QAAS6H,GAE7BjC,KAAKS,cAAcikD,QAAQ6yD,EAAanwG,KAAK,QAWjD3L,EAAQnB,UAAUm9G,iBAAmB,WAGnC,IAAMF,EAAev3G,KAAKS,cAAc2iD,UAAUrrC,MAAM,KACxD,GAAI/X,KAAKs3G,YAAYC,GACnB,OAAOG,UAAUH,EAAaA,EAAar9G,OAAS,IAItD,IAAMy9G,EAAK33G,KAAKk3B,kBAAkBovB,sBAAsB,SACxD,GAAIqxD,EACF,OAAOA,EAGT,IAAMC,EAAe53G,KAAKojG,sCAC1B,OAAqB,OAAjBwU,EACKA,EAIL53G,KAAKszG,cACAtzG,KAAKszG,cAGP,MAST73G,EAAQnB,UAAU8oG,oCAAsC,WAEtD,IAAKpjG,KAAK0jF,SACR,OAAO,KAET,IAAM/6B,EAAkB3oD,KAAK0jF,SAAS/6B,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAMivD,EAAejvD,EAAgBkvD,cACrC,GAAID,EAAa19G,OAAS,EACxB,OAAO09G,EAAa,GAGxB,OAAO,MAOTn8G,EAAQnB,UAAUq7G,YAAc,WAAW,IAAA98E,EAAA74B,KACpCA,KAAK42B,YAGV52B,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAMe,EAAY42B,EAAK4+E,mBACvBvF,EAAA,EAAY5uG,OAAqB,OAAdrB,GAEf42B,EAAKw6E,kBACPx6E,EAAKw6E,iBAAiB3zD,aAAa7mB,EAAKw6E,iBAAiB/zD,UAAYr9C,EAAY,IAMnF,IAAIs1B,KACAn2B,SAEE02G,EAAcj/E,EAAKp4B,cAAckjD,SAAShuB,EAAA,EAAQ8B,eAAeriB,kBACnDlV,IAAhB43G,GACF5F,EAAA,EAAY10F,aAAavb,IACzBb,EAAQiwG,EAAA,EAAervG,gBAAgBd,EAAQe,MAE7Cs1B,EAAmBn2B,EAAME,WAG3Bw2G,EAAY//F,MAAM,KAAK/U,QAAQ,SAACgkB,GAC9B,IAAMzlB,EAAQ8vG,EAAA,EAAe1vG,gBAAgBT,EAAQ8lB,GACjDzlB,GACFg2B,EAAiBn9B,KAAKmH,KAKxBs3B,EAAK0mB,iBACP1mB,EAAK0mB,gBAAgBjoB,oBAAoBC,GAG3CsB,EAAKrC,UAAU,WACRqC,EAAK0mB,iBAAoB1mB,EAAK0mB,gBAAgBzoB,WAKnD+B,EAAK0mB,gBAAgBzoB,SAASxG,mBAAmB,SAAC9B,GAChD,IAAIA,EAAShB,OAAb,CAIA,IAAMvS,EAAU4d,EAAK3B,kBAAkBqvB,uBACrC/3B,EAASR,OAAO9rB,KAAKy3B,MACnBl+B,EAAQk5G,YAAYI,aACpBt5G,EAAQk5G,YAAYK,oBACpBxmF,EAAStsB,KAAKnG,MAIlB,QAHgBmE,IAAZ+a,GAAyBuT,EAAS/rB,OACpC+rB,EAAS/rB,MAAM04B,WAAWlgB,GAExBuT,EAASR,OAAO9rB,MAAQssB,EAASR,OAAO9rB,KAAKy3B,YAAmCz5B,GAA1BsuB,EAAStsB,KAAKZ,SAAuB,CAE7F,IAAMy2G,EAASl/E,EAAK3B,kBAAkBsvB,uBACpC/qD,EAAQk5G,YAAYC,YAAcpmF,EAAStsB,KAAKnG,WAEnCmE,IAAX63G,GACFvpF,EAASQ,SAAS+oF,EAAS,KAAO,OAAO,QAEtC,IAAKvpF,EAAStsB,KAAKy3B,OAA2B,GAAlBnL,EAASJ,MAAY,CAEtD,IAAM4pF,EAAcn/E,EAAK3B,kBAAkBovB,sBACzC7qD,EAAQk5G,YAAYG,kBAAoBtmF,EAAStsB,KAAKnG,MAExD,QAAoBmE,IAAhB83G,EAA2B,CAC7B,IAAMC,EAAmBD,EAAYjgG,MAAM,KAC3CyW,EAAS8B,mBAAmB,SAAC9B,GAC3B,QAA+BtuB,IAA3BsuB,EAAStsB,KAAKZ,SAAwB,CACxC,IAAMy2G,EAAS3F,EAAA,EAAiB6F,EAAkBzpF,EAAStsB,KAAKnG,MAChEyyB,EAASQ,SAAS+oF,EAAS,KAAO,OAAO,WAM9Bl/E,EAAK0mB,gBAAgBzoB,SAASx1B,SACtC0B,QAAQ,SAACusB,GACpBA,EAAYe,mBAAmB,SAAC9B,GAC9B,GAA4B,kBAAxBA,EAASO,WAEX,OADA8J,EAAKnL,WAAWiB,WAAW,uBAAwBH,EAAUe,GACtD0iF,EAAA,EAAwB/hF,gBAAgBC,eAgB3D10B,EAAQnB,UAAU66G,uBAAyB,SAAS3yF,GAClD,IAAMjK,EAAUiK,EAAMoH,QACtBsoF,EAAA,EAAY9mF,iBAAiB7S,EAAS+5F,EAAA,GACtCtyG,KAAKk1G,gBAAgB38F,IAQvB9c,EAAQnB,UAAU86G,0BAA4B,SAAS5yF,GACrD,IAAMjK,EAAUiK,EAAMoH,QACtBsoF,EAAA,EAAY9mF,iBAAiB7S,EAAS+5F,EAAA,GACtCtyG,KAAKk4G,mBAAmB3/F,IAU1B9c,EAAQnB,UAAU46G,gBAAkB,SAAS38F,GAC3C,IAAM4V,EAAMgkF,EAAA,EAAc55F,GAC1BvY,KAAKo4C,iBAAiB9Q,eACpBnZ,EACAkkF,EAAA,EAAgB95F,EAAS,SACvBvY,KAAK6yG,cAAc7yG,KAAKm4G,0BAA2B,KAAK,GAAOn4G,QAUrEvE,EAAQnB,UAAU49G,mBAAqB,SAAS3/F,GAC9C,IAAM4V,EAAMgkF,EAAA,EAAc55F,GAC1BvY,KAAKo4C,iBAAiB5Q,iBAAiBrZ,GACvCnuB,KAAKm4G,6BAUP18G,EAAQnB,UAAU69G,0BAA4B,WAC5C,GAAKn4G,KAAKkqG,cAAV,CAGA,IAAMvsF,EAAW3d,KAAKkqG,cAAc/iF,WAC9BztB,EAAOsG,KAAKg0G,mBAAmBr1F,cAAchB,GAE7CjhB,KACNA,EAAOi5B,EAAA,EAAQ8B,eAAe3iB,UAAYpb,EAC1CsG,KAAKk3B,kBAAkBiB,YAAYz7B,KASrCjB,EAAQnB,UAAU68G,qBAAuB,WACvC,IAAMiB,EAAWp4G,KAAKS,cAAckjD,SAAShuB,EAAA,EAAQ8B,eAAepiB,WACpE,IAAK+iG,EACH,OAAO,KAGT,IAAMC,EAAYr4G,KAAKS,cAAcojD,cAAcluB,EAAA,EAAQ8B,eAAeniB,aACpE0wC,EAAYhmD,KAAKS,cAAc6jD,uBAAuB7oD,EAAQk5G,YAAYjqE,KAE1E4yD,KACFQ,SACJ,QAAkB59F,IAAdm4G,EAGkB,QADpBva,EAAc99F,KAAKs4G,mBAAmB78G,EAAQk5G,YAAYjqE,IAAKsb,KAE7Ds3C,EAAaljG,KAAK0jG,QAKpB,IAAK,IAAI9jG,EAAI,EAAGA,EAAIq+G,EAAWr+G,IAET,QADpB8jG,EAAc99F,KAAKs4G,mBAAsB78G,EAAQk5G,YAAYjqE,IAAM1wC,EAArD,IAA2DgsD,KAEvEs3C,EAAaljG,KAAK0jG,GAKxB,GAA2B,GAAvBR,EAAapjG,OACf,OAAO,KAGT,IAAMq+G,EAAoBv4G,KAAKS,cAAckjD,SAAShuB,EAAA,EAAQ8B,eAAeliB,mBAG7E,OACEqnF,QAASwb,EACT5a,eAJ2C,MAAtB+a,GAAmD,UAAtBA,GAKlDjb,aAAcA,IAYlB7hG,EAAQnB,UAAUg+G,mBAAqB,SAASj3E,EAAQ2kB,GAAW,IAAA3sB,EAAAr5B,KAI3DkhD,KAwBN,OAtBA8E,EAAUhjD,QAAQ,SAACw1G,GACjB,GAAIA,GAAY7iF,EAAA,EAAQ8B,eAAepiB,WAAamjG,GAAY7iF,EAAA,EAAQ8B,eAAeliB,mBACnFijG,GAAY7iF,EAAA,EAAQ8B,eAAeniB,aAA2C,GAA5BkjG,EAASh3F,QAAQ6f,GADvE,CAIA,IAAM9kC,EAAQ88B,EAAK54B,cAAckjD,SAAS60D,GAC1C,GAAKj8G,EAAL,CAIA,IAAIW,EAAYX,EACZA,EAAMilB,QAAQ,MAAQ,IACxBtkB,EAAYX,EAAMwb,MAAM,MAG1B,IAAM7S,GACJvI,SAAU67G,EAASpzF,QAAQic,EAAQ,IACnCnkC,UAAWA,GAEbgkD,EAAQ9mD,KAAK8K,OAGPg8C,EAAQhnD,OAAS,GAAMgnD,WAAW,MAY5CzlD,EAAQnB,UAAUi7G,yBAA2B,WAAW,IAAAz7E,EAAA95B,KAEhDg8B,EAAck2E,EAAA,EAAY5uG,OAAOtD,KAAKo8B,cACtCq8E,EAAkBvG,EAAA,EAAY5uG,OAClCtD,KAAKmzG,gCAEDzuG,KAEAg0G,EAAmB14G,KAAKk3B,kBAAkBmvB,gBAC9C1wB,EAAA,EAAQ8B,eAAe7iB,4BACnB+jG,EAAa34G,KAAKk3B,kBAAkBmvB,gBACxC1wB,EAAA,EAAQ8B,eAAe5iB,2BAEzB,GAAI6jG,GAAoBC,EAKtB,IAHA,IAAMtpG,EAAaqpG,EAAiB3gG,MAAMtc,EAAQm9G,eAAeC,MAC3DC,EAAOH,EAAW5gG,MAAMtc,EAAQm9G,eAAeC,MAHnBl7E,EAAA,SAKzB3jC,EAAOmH,GAGd,IAAM43G,EAAwB1pG,EAAWrV,GAEzC,IAAK++G,EACH,cAGF,IAAMC,EAAkBD,EAAsBhhG,MAC5Ctc,EAAQm9G,eAAeK,OACnB11G,EAAMu1G,EAAK9+G,GAEXk/G,EAAczH,EAAA,EAAkB7/F,sBAAsBrO,GAEtD41G,EAAuBr/E,EAAK8U,GAAGhuC,QACrC8D,EAAStK,KAAK++G,EAAqBr4G,SAE/Bo4G,IAAgBzH,EAAA,EAAkBznG,KAAKnC,IACzCm0B,EAAY65B,mBAAmBtyD,GAAKI,KAClC,SAAC+iB,GACCyyF,EAAqBn1G,SACnB0iB,eACAsyF,kBACAE,cACA31G,SAGJ,WAEE41G,EAAqB3xG,QACnBwxG,kBACAE,cACA31G,UAIG21G,IAAgBzH,EAAA,EAAkBznG,KAAKpC,KAChDo0B,EAAYk6B,oBAAoB3yD,GAAKI,KACnC,SAAC+iB,GACCyyF,EAAqBn1G,SACnB0iB,eACAsyF,kBACAE,cACA31G,SAGJ,WAEE41G,EAAqB3xG,QACnBwxG,kBACAE,cACA31G,UAMN41G,EAAqB3xG,QACnBwxG,kBACAE,cACA31G,SA7DGvJ,EAAI,EAAGmH,EAAK23G,EAAK5+G,OAAQF,EAAImH,EAAInH,IAAK,cAAA2jC,EAAtC3jC,GAML,MA6DN,OAAOgG,KAAK4uC,GAAG5pC,IAAIN,GAAUf,KAC3B,SAACy1G,GACC,IAAAlpG,EAAuBkpG,EAAvBjpG,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAAkC,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhW,OAAA,MAAAmW,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAA7T,MAAA,IAAvBqH,EAAuByM,EAIhC,GAAIzM,EAASs1G,cAAgBzH,EAAA,EAAkBznG,KAAKnC,IAClD,KAAA0J,EAAwB3N,EAASo1G,gBAAjCxnG,EAAA3E,MAAAC,QAAAyE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvE,OAAAC,cAAkD,KAAAyE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArX,OAAA,MAAAwX,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApE,QAAAC,KAAA,MAAAsE,EAAAD,EAAAlV,MAAA,IAAvCwpB,EAAuCrU,EAC1CiV,EAAWqV,EAAY05B,uBAC3B9xD,EAAS8iB,aAAT,uBACAX,GAEEY,GACF8xF,EAAgBhoE,wCACd9pB,EACA/iB,EAAS8iB,aACT9iB,EAASL,WAOV,GAAIK,EAASs1G,cAAgBzH,EAAA,EAAkBznG,KAAKpC,KAIzD,KAAA6wD,EAAwB70D,EAASo1G,gBAAjCtgD,EAAA7rD,MAAAC,QAAA2rD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAzrD,OAAAC,cAAkD,KAAA2rD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAv+D,OAAA,MAAA0+D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAtrD,QAAAC,KAAA,MAAAwrD,EAAAD,EAAAp8D,MAAA,IAAvCwpB,EAAuC6yC,EAC1CjyC,EAAWqV,EAAYi6B,wBAC3BryD,EAAS8iB,aAAT,eACAX,GAEEY,GACF8xF,EAAgB5nE,yCACdlqB,EACA/iB,EAAS8iB,aACT9iB,EAASL,SASrB,SAAC+tC,OAWL71C,EAAQnB,UAAUk7G,oCAAsC,SAASrqF,GAC/D,IAAM5pB,EAAQ4pB,EAAIvB,QAClBsoF,EAAA,EAAY9mF,iBAAiB7pB,EAAOiwG,EAAA,GACpCxxG,KAAK01G,yBAAyBn0G,GAC9BvB,KAAKq5G,gCAQP59G,EAAQnB,UAAUo7G,yBAA2B,SAASn0G,GACpD8wG,EAAA,EACE9wG,EAAM+3G,sBACN,MACAt5G,KAAKq5G,6BACLr5G,MAEFqyG,EAAA,EACE9wG,EAAM+3G,sBACN,SACAt5G,KAAKq5G,6BACLr5G,OAWJvE,EAAQnB,UAAUi/G,kBAAoB,SAAS92G,EAAO1G,GACpD,GAAI0G,aAAiBiwG,EAAA,EAAc,CACjC,IAAAr7C,EAAgB50D,EAAMykB,YAAYC,WAAlCmwC,EAAAzqD,MAAAC,QAAAuqD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAArqD,OAAAC,cAA8C,KAAAuqD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAn9D,OAAA,MAAAs9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAlqD,QAAAC,KAAA,MAAAoqD,EAAAD,EAAAh7D,MAAA,IAAnCZ,EAAmC67D,EAE5C,GADA06C,EAAA,EAAY5uG,OAAO3H,GACfqE,KAAKu5G,kBAAkB59G,EAAGI,GAC5B,OAAO,EAGX,OAAO,EAEP,OAAO0G,EAAMpG,IAAI,kBAAoBN,GASzCN,EAAQnB,UAAUm7G,uCAAyC,SAAStqF,GAClE,IAAM5pB,EAAQ4pB,EAAIvB,QAClBsoF,EAAA,EAAY9mF,iBAAiB7pB,EAAOiwG,EAAA,GACpCxxG,KAAKw5G,2BAA2Bj4G,GAChCvB,KAAKq5G,gCAQP59G,EAAQnB,UAAUk/G,2BAA6B,SAASj4G,GACtD8wG,EAAA,EACE9wG,EAAM+3G,sBACN,MACAt5G,KAAKq5G,6BACLr5G,MAEFqyG,EAAA,EACE9wG,EAAM+3G,sBACN,SACAt5G,KAAKq5G,6BACLr5G,OASJvE,EAAQnB,UAAU++G,6BAA+B,WAAW,IAAAh/E,EAAAr6B,KAEtDA,KAAKs1G,qCACPt1G,KAAKw2B,UAAUiC,OAAOz4B,KAAKs1G,qCAG7Bt1G,KAAKs1G,oCAAsCt1G,KAAKw2B,UAAU,WAAM,IAAAijF,EACxDxvF,KACA6uF,KAGN//C,EAAuB1+B,EAAK84E,+BAA+BrjE,UAA3DkpB,EAAAnsD,MAAAC,QAAAisD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA/rD,OAAAC,cAAsE,KAAAisD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA7+D,OAAA,MAAAg/D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA5rD,QAAAC,KAAA,MAAA8rD,EAAAD,EAAA18D,MAAA,IAA3DkzC,EAA2DypB,EAGpE4/C,EAAK1+G,KAAKq1C,EAASlsC,KAGnB,IAAMm2G,KACNx/C,EAA4BzqB,EAASzS,YAArCm9B,EAAAttD,MAAAC,QAAAotD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAltD,OAAAC,cAAkD,KAAAotD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAhgE,OAAA,MAAAmgE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/sD,QAAAC,KAAA,MAAAitD,EAAAD,EAAA79D,MAAA,IAAvCo9G,EAAuCt/C,EAChD63C,EAAA,EAAY9mF,iBAAiBuuF,EAAelI,EAAA,GAK5C,IAAM1rF,EAAY4zF,EAAc/pG,mBAAmB,GACnD8pG,EAAmBt/G,KAAK2rB,GAE1BkE,EAAM7vB,KAAKs/G,EAAmBtyG,KAAK3L,EAAQm9G,eAAeK,QAI5D,IAAA3/C,EAAwBj/B,EAAK84E,+BAA+B/iE,WAA5DmpB,EAAA1sD,MAAAC,QAAAwsD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtsD,OAAAC,cAAwE,KAAAwsD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAp/D,OAAA,MAAAu/D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnsD,QAAAC,KAAA,MAAAqsD,EAAAD,EAAAj9D,MAAA,IAA7DyzC,EAA6DypB,EAGtEq/C,EAAK1+G,KAAK41C,EAAUzsC,KAGpB,IAAMq2G,KACNr/C,EAA6BvqB,EAAUhT,YAAvCw9B,EAAA3tD,MAAAC,QAAAytD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvtD,OAAAC,cAAoD,KAAAytD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAArgE,OAAA,MAAAwgE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAptD,QAAAC,KAAA,MAAAstD,EAAAD,EAAAl+D,MAAA,IAAzCs9G,EAAyCn/C,EAClDw3C,EAAA,EAAY5uG,OAAOu2G,EAAettG,WAClCqtG,EAAoBx/G,KAAKy/G,EAAettG,WAE1C0d,EAAM7vB,KAAKw/G,EAAoBxyG,KAAK3L,EAAQm9G,eAAeK,QAI7D5+E,EAAKnD,kBAAkBiB,cAAvBshF,MACG9jF,EAAA,EAAQ8B,eAAe7iB,4BAA6BqV,EAAM7iB,KACzD3L,EAAQm9G,eAAeC,MAF3BY,EAIG9jF,EAAA,EAAQ8B,eAAe5iB,2BAA4BikG,EAAK1xG,KACvD3L,EAAQm9G,eAAeC,MAL3BY,IAUAp/E,EAAKi7E,oCAAsC,QAS/C75G,EAAQnB,UAAU89B,YAAc,SAASH,GAAQ,IAAA2C,EAAA56B,KACzC+8C,EAAOm1D,EAAA,EAAY5uG,OAAOtD,KAAKS,cAAc2jD,gBACnDwW,EAAkB7d,EAAlB8d,EAAAhuD,MAAAC,QAAA8tD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5tD,OAAAC,cAAwB,KAAA8tD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1gE,OAAA,MAAA6gE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAztD,QAAAC,KAAA,MAAA2tD,EAAAD,EAAAv+D,MAAA,IAAbqU,EAAamqD,EACtB,GAAInqD,EAAIkpG,WAAWr+G,EAAQk5G,YAAYG,mBACrC,KAAMv4G,EAAQqU,EAAIsR,UAAUzmB,EAAQk5G,YAAYG,kBAAkB56G,QAClEmhE,EAAoBpjC,EAApBqjC,EAAAzuD,MAAAC,QAAAuuD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAruD,OAAAC,cAA4B,KAAAuuD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnhE,OAAA,MAAAshE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAluD,QAAAC,KAAA,MAAAouD,EAAAD,EAAAh/D,MAC1B,GAD0Bi/D,EAChBz/D,MAAQQ,EAAO,CACvByD,KAAKk3B,kBAAkBM,YAAY5mB,GACnC,QAIN,GAAIA,EAAIkpG,WAAWr+G,EAAQk5G,YAAYK,oBACrC,KAAMz4G,EAAQqU,EAAIsR,UAAUzmB,EAAQk5G,YAAYK,mBAAmB96G,QACnE6/G,EAAoB9hF,EAApB+hF,EAAAntG,MAAAC,QAAAitG,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA/sG,OAAAC,cAA4B,KAAAitG,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA7/G,OAAA,MAAAggH,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA5sG,QAAAC,KAAA,MAAA8sG,EAAAD,EAAA19G,MAC1B,GAD0B29G,EAChBn+G,MAAQQ,EAAO,CACvByD,KAAKk3B,kBAAkBM,YAAY5mB,GACnC,SAKR5Q,KAAKw2B,UAAU,WACb,GAAKoE,EAAKoU,KAAV,CAGA,IAAMvsC,EAAQm4B,EAAKoU,KAAK/nB,gBACxBirF,EAAA,EAAY5uG,OAAOb,GACnB,IAAAu4D,EAAkBje,EAAlBke,EAAApuD,MAAAC,QAAAkuD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAhuD,OAAAC,cAAwB,KAAAkuD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA9gE,OAAA,MAAAihE,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA7tD,QAAAC,KAAA,MAAA+tD,EAAAD,EAAA3+D,MAAA,IAAbqU,EAAauqD,EACtB,GAAIvqD,EAAIkpG,WAAWr+G,EAAQk5G,YAAYC,aAAc,CACnD,IAAMr4G,EAAQqU,EAAIsR,UAAUzmB,EAAQk5G,YAAYC,YAAY16G,QACvD0gC,EAAK2+E,kBAAkB92G,EAAOlG,IACjCq+B,EAAK1D,kBAAkBM,YAAY5mB,GAGvC,GAAIA,EAAIkpG,WAAWr+G,EAAQk5G,YAAYI,cAAe,CACpD,IAAMx4G,EAAQqU,EAAIsR,UAAUzmB,EAAQk5G,YAAYI,aAAa76G,QACxD0gC,EAAK2+E,kBAAkB92G,EAAOlG,IACjCq+B,EAAK1D,kBAAkBM,YAAY5mB,UAQ7CnV,EAAQC,OAASoM,QAAQpM,OAAO,gBAC9B01G,EAAA,EAAgB11G,OAAOK,KACvBs1G,EAAA,EAAe31G,OAAOK,KACtBw1G,EAAA,EAAiBx1G,KACjBk2G,EAAA,EAAwBv2G,OAAOK,KAC/B81G,EAAA,EAAiB91G,KACjB+1G,EAAA,EAAoBp2G,OAAOK,KAC3Bg2G,EAAA,EAAuBh2G,QAGVgM,QAAQ,eAAgBtM,GAMvCA,EAAQ0+G,2BACN57G,QAAS,WAMX9C,EAAQk5G,aACN+B,WAAY,OACZ9B,YAAa,eACbE,kBAAmB,qBACnBE,mBAAoB,sBACpBD,aAAc,gBACdrqE,IAAK,QAQPjvC,EAAQm9G,gBACNC,KAAM,IACNI,MAAO,KAITx9G,EAAQC,OAAOa,MAAM,0BAKrB,WACE,IAAM69G,KACN,IAAK,IAAMC,KAAQ5+G,EAAQk5G,YACzByF,EAAOhgH,KAAK,IAAIqsD,OAAUhrD,EAAQk5G,YAAY0F,GAAlC,OAEd,IAAK,IAAMC,KAAQ3kF,EAAA,EAAQ8B,eACzB2iF,EAAOhgH,KAAK,IAAIqsD,OAAOhrD,EAAQk5G,YAAY2F,KAE7CtI,EAAA,EAAwBt2G,OAAOa,MAAM,oBAAqB69G,GAR5D,GAYe98G,EAAA,sDCliDf,SAAAo4B,GAAA,IAAAv2B,EAAA9D,EAAA,GAAAojC,EAAApjC,EAAA,KAmBMI,GAnBNJ,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAmBgByM,QAAQpM,OAAO,kBAC7B+iC,EAAA,EAAa/iC,OAAOK,KACpB,aAIFN,EAAQc,MAAM,4BAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,0BACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,kCAGN97C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,gCAAiC57C,EAAQ,SAgB9DI,EAAQy7C,WAAa,SAASqjE,EAA4BnkF,GACxD,OACEsc,OACE4tC,eAAgB,IAChBxvE,KAAM,KAERwmC,kBAAkB,EAClB9mB,WAAY,6CACZgiB,SAAU,KACV+E,YAAagjE,EACb9nE,KAAM,SAACC,EAAO9oB,EAAS+oB,EAAOvN,GAC5BA,EAAKtY,OAEL,IAAMitB,EAAQ3U,EAAK1O,gBAAgBsjB,qBACnCtkB,EAAA,uBAA+BA,EAAA,oBAA4BqkB,IAE3D3U,EAAKo1E,aAAe1yG,QAAQm2D,UAAW74B,EAAKo1E,cAC1C/wD,QAAWrkB,EAAKq1E,eAChB9wD,QAAWvkB,EAAKs1E,eAChBC,QAAW,SAACC,GACNA,GACFllF,EAAE9L,EAAQ,IAAI6yB,KAAK,uBAAuBo+D,WAAW,SAAU,UAAWD,MAKhFx1E,EAAK01E,aAAehzG,QAAQm2D,UAAW74B,EAAK01E,cAC1CrxD,QAAWrkB,EAAKq1E,eAChB9wD,QAAWvkB,EAAKs1E,eAChBC,QAAW,SAACC,GACNA,GACFllF,EAAE9L,EAAQ,IAAI6yB,KAAK,uBAAuBo+D,WAAW,SAAU,UAAWD,MAKhF9yG,QAAQ8hB,QAAQ,QAAQ+R,GAAG,oBAAqB,WAC9C,IAAMo/E,EAAKjzG,QAAQ8hB,QAAQ,sBACvBmxF,GAA4B,UAAtBA,EAAG1sD,IAAI,YACf34B,EAAE9L,EAAQ,IAAI6yB,KAAK,uBAAuBo+D,WAAW,UAIzDzkF,EAAS,WACPtuB,QAAQ8hB,QAAQ,sBAAsB+R,GAAG,YAAa,SAACwpC,GACrDA,EAAE7mB,yBA7CZ7iD,EAAQy7C,4DAoDRz7C,EAAQs3C,UAAU,iBAAkBt3C,EAAQy7C,YAgB5Cz7C,EAAQ+7C,YAAc,SAASnqB,EAAQ1tB,EACrCq7G,EAAUl7G,GAAgB,IAAAuC,EAAArC,KAM1BA,KAAKi7G,UAAYD,EAMjBh7G,KAAK8Q,KAOL9Q,KAAK02B,gBAAkB52B,EAQvBE,KAAK4mF,YAQL5mF,KAAKsgF,eAOLtgF,KAAKy6G,eAMLz6G,KAAK06G,eAOL16G,KAAK86G,cACHI,aAAe,EACfC,YAAc,GAQhBn7G,KAAKw6G,cACHU,aAAe,EACfC,YAAc,GAQhBn7G,KAAKo7G,MAOLp7G,KAAKq7G,MAELhuF,EAAOiuF,aAAa,uBAAwB,wBAAyB,SAACC,EAAUC,GAC9E,IAAMl1B,EAAQi1B,EAAS,GACjBh1B,EAAQg1B,EAAS,IAEnBzzG,QAAQ2zG,OAAOn1B,IAAYjkF,EAAKukF,cAAe9+E,QAAQ2zG,OAAOl1B,IAChElkF,EAAKi+E,gBACHxvE,MACEK,MAAO9O,EAAK44G,UAAUzxD,QAAQ88B,GAC9Bp1E,IAAK7O,EAAK44G,UAAUzxD,QAAQ+8B,SA7FtC9qF,EAAQ+7C,uEAuGR/7C,EAAQ+7C,YAAYl9C,UAAUwyB,KAAO,WAEnC,IAAMi6D,EAAkB/mF,KAAKi7G,UAAUh1E,WAAWjmC,KAAK8Q,MACvD9Q,KAAKy6G,eAAiBz6G,KAAKi7G,UAAU3xD,WAAWy9B,EAAgBt9B,SAChEzpD,KAAK06G,eAAiB16G,KAAKi7G,UAAU3xD,WAAWy9B,EAAgBp9B,SAChE3pD,KAAK4mF,YAAiC,UAAnB5mF,KAAK8Q,KAAKyuB,KAEzBv/B,KAAK4mF,aACPznF,EAAA,EAAYogB,YAAYwnE,EAAgB1hF,QACxCrF,KAAKo7G,MAAQp7G,KAAKi7G,UAAU3xD,WAAWy9B,EAAgB1hF,OAAO,IAC9DrF,KAAKq7G,MAAQr7G,KAAKi7G,UAAU3xD,WAAWy9B,EAAgB1hF,OAAO,MAE9DlG,EAAA,EAAY4b,aAAagsE,EAAgB1hF,QACzCrF,KAAKo7G,MAAQp7G,KAAKi7G,UAAU3xD,WAAWy9B,EAAgB1hF,UAI3D5J,EAAQ+0B,WAAW,2BACjB/0B,EAAQ+7C,aAGKl6C,EAAA,yDCtPf,IAAAkjD,EAAAnlD,EAAA,IAGMI,GAYNA,gBAA0B,SAAS6U,EAAWjT,GAmB5C,MAjBE,8DACYsuE,KAAKtuE,KACjBiT,EAAUjT,KAAOmjD,EAAA,EAAwBxhD,SACrC,aAAa2sE,KAAKtuE,GACpBiT,EAAUopC,SAAW,QACZ,6BAA6BiyB,KAAKtuE,GAC3CiT,EAAUopC,SAAW,aACZ,4BAA4BiyB,KAAKtuE,GAC1CiT,EAAUopC,SAAW,UACZ,kBAAkBiyB,KAAKtuE,GAChCiT,EAAUopC,SAAW,aACZ,uCAAuCiyB,KAAKtuE,GACrDiT,EAAUopC,SAAW,kBACZ,sCAAsCiyB,KAAKtuE,KACpDiT,EAAUopC,SAAW,mBAGhBppC,EAAUjT,QAAUiT,EAAUopC,WAI1Bp8C,EAAA,kCCnCf,IAAM7B,aAaJ,SAAAA,EAAYiE,EAAOkhD,gGAAc34C,CAAAjI,KAAAvE,GAQ/BuE,KAAK6gD,MAAQnhD,EAMbM,KAAK8gD,SAAWF,EAMhB5gD,KAAKgtG,aAjCH,OAAAvxG,EAAAohC,SAAA,wBAAAphC,EAAAnB,UAyCJ07E,mBAzCI,SAyCernE,EAAY2B,GAC7B,IAAMorG,EAAe/sG,EAAWkX,GAA1B,IAAgCvV,EAChCvU,EAAO4S,EAAW5S,KACxB,IAAKiE,KAAKgtG,UAAU0O,GAAY,CAC9B,IAAMn4G,EAASvD,KAAK8gD,SAAd,IAA0B/kD,EAA1B,WAAyCuU,EAC/CtQ,KAAKgtG,UAAU0O,GAAa17G,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KAC9C3D,KAAK27G,0BAA0B3+G,KAAKgD,OAExC,OAAOA,KAAKgtG,UAAU0O,IAjDpBjgH,EAAAnB,UA0DJqhH,0BA1DI,SA0DsBh/D,GAGxB,OADEA,EAAKjjD,KACKojF,OA7DVrhF,KAsENA,EAAQC,OAASoM,QAAQpM,OAAO,4BAChCD,EAAQC,OAAOqM,QAAQ,wBAAyBtM,GAGjC6B,EAAA,kCCnEf,IAAM7B,EAAU,SAASmE,EAAIF,EAAOklF,GAClC,IAAI4V,SAAYtiC,SAGhBl4D,KAAK47G,gBAAkB,SAASC,GAC9B,QAASA,EAAW,MAGtB77G,KAAK87G,YAAc,SAASxhB,GAC1B,MAAO,0CAA0CzoF,KAAKyoF,IAGxDt6F,KAAK+7G,aAAe,SAASzhB,GAC3B,MAAO,gBAAgBzoF,KAAKyoF,IAG9Bt6F,KAAK0xC,MAAQ,SAAS4oD,GACpB,MAAO,OAAOzoF,KAAKyoF,IAAgB,UAAUzoF,KAAKyoF,IAGpDt6F,KAAK4xC,MAAQ,SAAS0oD,GACpB,MAAO,OAAOzoF,KAAKyoF,IAAgB,UAAUzoF,KAAKyoF,IAOpDt6F,KAAKomB,KAAO,SAAS6qB,GACnB,IAAMrwC,EAAQhB,EAAGgB,QAqBjB,OApBI45F,GAAcA,EAAWwhB,aAAevhB,WAAWwhB,SACrDzhB,EAAW0hB,SAEb1hB,EAAa,IAAIC,YACNC,OAAS,SAASvvE,GAC3BvqB,EAAMoD,QAAQmnB,EAAIE,OAAOtwB,SAE3By/F,EAAW2hB,QAAU,SAAShxF,GAC5B,IAAMi7B,EAAMj7B,EAAIE,OAAOtnB,MACvBD,QAAQC,MAAM,wBAAyBqiD,GACvCxlD,EAAM4G,QACJ3D,QAAuB,IAAZuiD,EAAI6lC,KAAarH,EAAQ,sBAAwBA,EAAQ,eACpEw3B,OAAUh2D,EAAIviD,WAGlB22F,EAAW6hB,WAAa,SAASlxF,GAC/BvqB,EAAM44B,OAAOrO,IAGfqvE,EAAWG,WAAW1pD,GACfrwC,EAAME,SAQfd,KAAKs8G,KAAO,SAAS/4G,EAAKg5G,GAEpBrkD,GACFA,EAASl0D,UAEXk0D,EAAWqkD,GAAe38G,EAAGgB,QAG7B,IAAMA,EAAQhB,EAAGgB,QAYjB,OAXAlB,EAAMrD,IAAIkH,GACRs+C,QAASqW,EAASp3D,UACjB6C,KAAK,SAACC,GACPhD,EAAMoD,QAAQJ,EAASlK,OACtB,SAAC0iH,GACFt4G,QAAQC,MAAM,0BAA2Bq4G,GACzCx7G,EAAM4G,QACJ3D,QAAW+gF,EAAQ,iBACnBw3B,OAAUA,MAGPx7G,EAAME,iFAIjBrF,EAAQC,OAASoM,QAAQpM,OAAO,gBAEjBqM,QAAQ,WAAYtM,GAGpB6B,EAAA,qCCjGf,SAAAo4B,GAAA,IAAA8mF,EAAAnhH,EAAA,KAAAohH,EAAAphH,EAAA,KAAAqhH,EAAArhH,EAAA,KAAAshH,EAAAthH,EAAA,KAAAuhH,EAAAvhH,EAAA,KAAAwhH,EAAAxhH,EAAA,KAAAyhH,EAAAzhH,EAAA,KAAA0hH,EAAA1hH,EAAA,KAAA2hH,EAAA3hH,EAAA,KAAA4hH,EAAA5hH,EAAA,KAAA6hH,EAAA7hH,EAAA,IAAA8hH,EAAA9hH,EAAA,KAAA+hH,EAAA/hH,EAAA,KAAAgiH,EAAAhiH,EAAA,GAAAiiH,EAAAjiH,EAAA,IAAAkiH,EAAAliH,EAAA,IAAAmiH,EAAAniH,EAAA,IAAAoiH,EAAApiH,EAAA,KAAAqiH,EAAAriH,EAAA,KAAAsiH,EAAAtiH,EAAA,KAAAuiH,EAAAviH,EAAA,KAAAwiH,EAAAxiH,EAAA,KAAAyiH,EAAAziH,EAAA,KAAA0iH,EAAA1iH,EAAA,IAAA2iH,EAAA3iH,EAAA,IAAA4iH,EAAA5iH,EAAA,IAAA6iH,EAAA7iH,EAAA,IAAA8iH,EAAA9iH,EAAA,IAAA+iH,EAAA/iH,EAAA,KAgDMI,EAAU,SAAS4V,EAAQgc,EAAQ1tB,GAAW,IAAA0C,EAAArC,KAE5Cq+G,GACJhmG,WAAYilG,EAAA,WAAmBjsG,EAAOiuF,MAAQ,SAEhDie,EAAA,EAAac,EAAYhtG,EAAOitG,mBAEhC,IAAMhb,EAAQkZ,EAAA,EAAoCliH,UAAU+oG,kBAM5DrjG,KAAK4E,IAAM,IAAI64G,EAAA,GACb7vC,WAAYv8D,EAAOktG,cACnBj6G,UACAkb,KAAM,IAAIk+F,EAAA,EAAOW,GACjBG,SAAUntG,EAAOotG,cACf,IAAId,EAAA,GACFtyF,OAAQ8G,SAASusF,eAAe,eAElC,IAAId,EAAA,GACFe,eAAgB,GAChBC,gBAAiB,KAEnB,IAAIf,EAAA,GACFt4G,MAAO+9F,EACPub,SAAU,MAGdnV,aAAcr4F,EAAOytG,iBAAmBhB,EAAA,GACtCiB,aAAa,EACbC,oBAAoB,IAEtBC,yBAAyB,EACzBC,2BAA2B,IAO7Bl/G,KAAKm/G,aAAc,EAMnBn/G,KAAKo/G,aAAc,EAMnBp/G,KAAKq/G,iBAAkB,EAMvBr/G,KAAKs/G,mBAAoB,EAMzBt/G,KAAKu/G,sBAAuB,EAM5Bv/G,KAAKw/G,wBAAyB,EAM9Bx/G,KAAKy/G,sBAAwB,IAAItB,EAAA,GAC/B/jG,KAAM,IAAIgkG,EAAA,GACR1jG,KAAM,IAAIujG,EAAA,GAAarkG,MAAO,YAC9BiF,KAAM,0BACNlE,SAAU,GACVb,OAAQ,IAAIokG,EAAA,GAAetkG,MAAO,UAAWG,MAAO,IACpDK,KAAM,QAQVpa,KAAK0/G,wBAAyB,EAE9B,IAAM9wD,EAAOl5B,EAAE,QAGfk5B,EAAK+wD,SACHr6C,UAAW,OACXs6C,QAAS,QACTC,SAAU,4BAIZjxD,EAAKjzB,GAAG,yBAA0B,WAChCizB,EAAK+wD,QAAQ,WACb/wD,EAAKkxD,IAAI,4BAOX,IAAM9V,EAAerqG,EAAUtD,IAAI,gBAMnC2D,KAAK+/G,iBAAmBpgH,EAAUtD,IAAI,yBACnCuwB,oBACH5sB,KAAK+/G,iBAAiB9vD,YAAY+5C,GAElC,IAAM7hE,EAAoBxoC,EAAUtD,IAAI,qBAMxC2D,KAAKggH,uBAAyB,IAAIjC,EAAA,GAChCv4F,OAAQ,IAAIw4F,EAAA,GACV3xE,OAAO,EACP1uB,SAAU,IAAI6/F,EAAA,IAEhBzkG,MAAO,SAACR,EAAS0U,GAAV,OAAyBkb,EAAkBjsB,oBAAoB3D,MAGxEvY,KAAKggH,uBAAuBjzF,OAAO/sB,KAAK4E,KAMxC,IAAMkzC,EAAsBn4C,EAAUtD,IAAI,uBAEpC4jH,EAAsB,IAAI/C,EAAA,EAAqBl9G,KAAM,qBAC3D83C,EAAoB1R,aAAa,WAAY65E,GAAqB,GAElE,IAAMC,EAA2B,IAAIhD,EAAA,EACnCl9G,KACA,0BAEF83C,EAAoB1R,aAAa,WAAY85E,GAA0B,GAMvElgH,KAAKmgH,sBACH/1B,QAAQ,GAOVpqF,KAAKogH,YAAc,KAEnB5D,EAAA,EAAoChiH,KAAKwF,KAAMqR,EAAQgc,EAAQ1tB,GAG/D0tB,EAAOO,OAAO,kBAAMvrB,EAAKukD,QAAQwC,UAAU,SAACxzC,GAC3B,OAAXA,GAAmBvT,EAAK88G,cAC1B98G,EAAK88G,aAAc,0FAKzB9B,EAAA,EAAgB5hH,EAAS+gH,EAAA,IAEzB/gH,EAAQC,OAASoM,QAAQpM,OAAO,sCAC9B8gH,EAAA,EAAoC9gH,OAAOK,KAC3C0gH,EAAA,EAAwB1gH,KACxB2gH,EAAA,EAAiB3gH,KACjB4gH,EAAA,EAAiB5gH,KACjB6gH,EAAA,EAA2B7gH,KAC3B8gH,EAAA,EAAkB9gH,KAClB+gH,EAAA,EAAiB/gH,KACjBghH,EAAA,EAAmBhhH,KACnBihH,EAAA,EAAiBjhH,KACjBkhH,EAAA,EAAiBlhH,KACjBohH,EAAA,EAA4BphH,KAC5BqhH,EAAA,EAAgBrhH,QAGHy0B,WACb,4BACA/0B,GAEFA,EAAQC,OAAOa,MAAM,aAAa,GAElCd,EAAQC,OAAOa,MAAM,oBACnBggC,MAAS,KAGX9gC,EAAQC,OAAOa,MAAM,uBAAwB,GAC7Cd,EAAQC,OAAOa,MAAM,sBAAuB,GAG7Be,EAAA,+ICpPTo0E,EAAU5pE,QAAQpM,OAAO,qBAC7B2kH,EAAA,EAAuB3kH,OAAOK,OAuChC21E,EAAQxjB,WAAa,WACnB,OACE1b,SAAU,IACVE,OAAO,EACPliB,WAAY,wCACZ8mB,kBACE1yC,IAAO,wBACP2mF,YAAe,gCACfhpF,SAAY,8BAQdkwC,KAAM,SAACC,EAAO9oB,EAAS+oB,EAAOniB,GAC5BA,EAAW1D,UAKjB4kD,EAAQ3+B,UAAU,oBAChB2+B,EAAQxjB,YAeVwjB,EAAQl6B,YAAc,SAASgX,EAAUp4B,EAAU/I,EAAQizF,GAMzDtgH,KAAK4E,IAML5E,KAAKurF,YAMLvrF,KAAKuC,SAMLvC,KAAK8gE,SAML9gE,KAAKugH,UAAY/xD,EAMjBxuD,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK6kE,QAAUx3C,EAMfrtB,KAAKwgH,WAAaF,EAElBx4G,QAAQ8hB,QAAQ,QAAQ+R,GAAG,YAAa37B,KAAKygH,YAAYzjH,KAAKgD,QAlDhE0xE,EAAQl6B,iEAwDRk6B,EAAQl6B,YAAYl9C,UAAUwyB,KAAO,WACnC9sB,KAAK0gH,kBAEL,IAAMpjE,EAASt9C,KAAK4E,IAAI26D,mBACxBz2B,EAAA,EAAY0U,cAAcF,GAE1BhO,EAAA,EAAgBgO,EAAQ,cACtBt9C,KAAK09C,sBAAuB19C,OAOhC0xE,EAAQl6B,YAAYl9C,UAAUojD,sBAAwB,SAASl7B,GAAO,IAAAngB,EAAArC,KACpEA,KAAK6kE,QAAQjxB,OAAO,WAClB,IAAM+J,EAAQt7C,EAAKuC,IAAIs5C,cAAc17B,GAC/ByR,EAAa5xB,EAAKuC,IAAIu5C,uBAAuBR,GACnDt7C,EAAKs+G,YAAY1sF,GACjBzR,EAAM67B,iBACNh8C,EAAKo+G,cACLp+G,EAAKu+G,cAGLv+G,EAAK21C,SAAS,WACZ31C,EAAKy+D,SAAS9sC,YAAYC,QAKhCy9C,EAAQl6B,YAAYl9C,UAAUqmH,YAAc,SAAS1sF,GACnD,IAAMye,EAAQ1yC,KAAK6kE,QAAQpW,MAAK,GAChCzuD,KAAKugH,UAAUvgH,KAAK6gH,SAApB7gH,CAA8B0yC,GAE9B,IAAMouE,EAAgB9gH,KAAK4E,IAAI6a,UAAUgyB,gBAAgBylB,UACzDl3D,KAAKurF,YAAYvoF,QAAQ,SAACwuE,GACxB,IAAM/8C,EAAQssF,EAAA,EAAiB9sF,EAAY6sF,EAA7B,QAAoDtvC,GAClE9+B,WAAe8+B,GAAU/8C,EACzBie,WAAe8+B,EAAf,YAAiC/8C,EAAM,GACvCie,WAAe8+B,EAAf,aAAkC/8C,EAAM,KAG1C,IAAMusF,EAAmB,SAASrkE,GAChClT,EAAA,EAAaiJ,EAAOiK,GAChB38C,KAAKuC,UACPknC,EAAA,EAAaiJ,EAAO1yC,KAAKuC,SAAS/H,KAAKwF,KAAMi0B,EAAY0oB,KAE3D3/C,KAAKgD,MAIPA,KAAKwgH,WAAWrT,UAAUl5E,GAAYtwB,KACpCq9G,EAJqB,SAASrkE,GAC9B74C,QAAQC,MAAM,mCAYlB2tE,EAAQl6B,YAAYl9C,UAAUomH,gBAAkB,WAE9C,IAAMp7C,EAAYnzC,SAASC,cAAc,OACzCkzC,EAAU3wC,UAAUC,IAAI,WACxB0wC,EAAU3wC,UAAUC,IAAI,UACxB0wC,EAAU3wC,UAAUC,IAAI,sBACxB9sB,QAAQ8hB,QAAQ07C,GAAWjX,IAAI,WAAY,YAC3C,IAAMi1C,EAAQnxE,SAASC,cAAc,OACrCkxE,EAAM3uE,UAAUC,IAAI,SACpB0wC,EAAUvxC,YAAYuvE,GACtBtjG,KAAK6gH,SAAW1uF,SAASC,cAAc,OACvCpyB,KAAK6gH,SAASI,aAAa,4BAA6B,IACxDjhH,KAAK6gH,SAASlsF,UAAUC,IAAI,mBAC5B0wC,EAAUvxC,YAAY/zB,KAAK6gH,UAE3B7gH,KAAK8gE,SAAW,IAAIogD,EAAA,GAClBt3F,QAAS07C,EACT9vC,WAAW,EACX2rF,SAAS,EACTC,kBACE/gG,SAAU,KAEZ6U,YAAa,eAEfl1B,KAAK4E,IAAIuwB,WAAWn1B,KAAK8gE,WAG3B4Q,EAAQl6B,YAAYl9C,UAAUsmH,YAAc,WAC1C,IAAMh3F,EAAiC5pB,KAAK8gE,SAAS2C,aACrD37D,QAAQ8hB,QAAQA,GAASykC,IAAI,UAAW,UAG1CqjB,EAAQl6B,YAAYl9C,UAAUmmH,YAAc,WAC1C,IAAM72F,EAAiC5pB,KAAK8gE,SAAS2C,aACrD37D,QAAQ8hB,QAAQA,GAASykC,IAAI,UAAW,SAG1CqjB,EAAQlhD,WAAW,8BAA+BkhD,EAAQl6B,aA+B1Dk6B,EAAQ2vC,kBAAoB,SAC1BC,GACA,OACE9uE,SAAU,IACVE,OAAO,EACP6E,YAAa+pE,IALjB5vC,EAAQ2vC,kEASR3vC,EAAQ3+B,UAAU,2BAA4B2+B,EAAQ2vC,mBAGvC,IAAA38C,EAAA,ECtRT68C,UAAUz5G,QAAQpM,OAAO,2BAC7BgpE,EAA2B3oE,QAIduB,EAAA,qDCDAkkH,GANbhkH,YAAa,aACbI,MAAO,QACPC,QAAS,uKCwCL4jH,EAAU,SAAVhmH,EAAmBimH,GAEvBC,EAAA,EAAoBnnH,KAAKwF,MAEzB,IAAMgI,OAA0B9H,IAAhBwhH,EAA4BA,KAM5C1hH,KAAK4hH,eAAiC1hH,IAArB8H,EAAQ65G,SACvB75G,EAAQ65G,SAAWpmH,EAAQqmH,UAM7B9hH,KAAK+hH,mBAAyC7hH,IAAzB8H,EAAQisG,cAC3BjsG,EAAQisG,aAMVj0G,KAAKgiH,yBAA6C9hH,IAAvB8H,EAAQoV,WACjCpV,EAAQoV,WAAa3hB,EAAQwmH,2BAM/BjiH,KAAKkiH,eAAiChiH,IAArB8H,EAAQsQ,UAAyBtQ,EAAQsQ,SAM1DtY,KAAKmiH,OAAS,EAMdniH,KAAKoiH,OAAS,EAMd3mH,EAAQ4mH,uBAAgDniH,IAA3B8H,EAAQksG,gBAAkClsG,EAAQksG,eAM/El0G,KAAKsiH,oBAA2CpiH,IAA1B8H,EAAQiiD,cAA8BjiD,EAAQiiD,kBAItE/X,EAAA,EAAgBuvE,EAASE,EAAA,GAOzBF,EAAQc,aACNj2D,WAAck1D,EAA+BhkH,YAC7CwuD,MAASw1D,EAA+B5jH,MACxC0nG,QAAWkc,EAA+B3jH,QAC1C2kH,gBAAmBhB,EAA+BhkH,YAClDilH,WAAcjB,EAA+B5jH,MAC7C8kH,aAAgBlB,EAA+B3jH,SAOjD4jH,EAAQY,qBAMRZ,EAAQnnH,UAAUqoH,YAMlBlB,EAAQnnH,UAAUq3C,aAMlB8vE,EAAQnnH,UAAUixB,aAMlBk2F,EAAQnnH,UAAUknD,aAMlBigE,EAAQnnH,UAAUqkB,cAMlB8iG,EAAQnnH,UAAU2wB,cAUlBw2F,EAAQmB,QACJ,mEAOJnB,EAAQK,UAAY,GAUpBL,EAAQQ,2BAA6B,SAAS1pG,GAC5C,OAAOA,EAAQ8E,iBAUjBokG,EAAQoB,oBAAsB,SAASC,GACrC,IAAIC,EAAYD,GAAO,EAIvB,OAHIA,EAAM,IACRC,GAAcA,GAETtB,EAAQuB,cAAcD,IAU/BtB,EAAQuB,cAAgB,SAASF,GAE/B,IADA,IAAIG,EAAgB,GACbH,GAAO,IACZG,GAAiBxB,EAAQmB,QAAQxgF,OAC/B,GAAc,GAAN0gF,GACVA,IAAQ,EAGV,OADAG,GAAiBxB,EAAQmB,QAAQxgF,OAAO0gF,IAc1CrB,EAAQM,cAAgB,SAAStpG,EAAQyqG,EAAcC,GACrD,IAAMC,EAAY3B,EAAQc,YAAYW,GACtCp6E,EAAA,EAAYxlC,YAAqBpD,IAAdkjH,GACnB,IAAK,IAAIppH,EAAI,EAAGA,EAAIye,EAAOve,SAAUF,EAAG,CACtC,IAAM+e,EAAQN,EAAOze,GACfw0E,EAAYz1D,EAAMsqG,UAClBC,EAAavqG,EAAMwqG,WACnBC,EAAczqG,EAAM0qG,YACpBC,EAAY3qG,EAAM4qG,UACpBP,GAAa5B,EAA+B3jH,QAC5B,OAAd2wE,GACFizC,EAAQmC,oBACNp1C,EAAWg1C,EAAaL,GAEnBC,GAAa5B,EAA+BhkH,YACjC,OAAhBgmH,GACF/B,EAAQoC,iBAAiBL,EAAaL,GAE/BC,GAAa5B,EAA+B5jH,OAClC,OAAf0lH,GACF7B,EAAQqC,kBAAkBR,EAAYH,GAGxB,OAAdO,GACFjC,EAAQsC,iBAAiBL,EAAWP,KAa1C1B,EAAQoC,iBAAmB,SAASL,EAAaL,GAC/C1B,EAAQuC,mBAAmBR,EAAaL,IAW1C1B,EAAQqC,kBAAoB,SAASR,EAAYH,GAC/C,GAAIG,aAAsB/2D,EAAA,EAAe,CACvC,IAAM9xC,EAAS6oG,EAAW/vF,YACtB4vF,EAAcjpH,OAAS,GACzBipH,EAAc/oH,KAAK,KAErB+oH,EAAc/oH,KAAKmoB,kCAAkC9H,IACrD,IAAM+zD,EAAY80C,EAAWD,UACX,OAAd70C,GACFizC,EAAQwC,iBAAiBz1C,EAAW20C,GAEtC,IAAMK,EAAcF,EAAWG,YACX,OAAhBD,GACF/B,EAAQuC,mBAAmBR,EAAaL,KAe9C1B,EAAQmC,oBAAsB,SAASp1C,EAAWg1C,EAAaL,GAC7D1B,EAAQwC,iBAAiBz1C,EAAW20C,GAChB,OAAhBK,GACF/B,EAAQuC,mBAAmBR,EAAaL,IAc5C1B,EAAQwC,iBAAmB,SAASz1C,EAAW20C,EAAee,GAC5D,IAAMjxG,OAAoC/S,IAArBgkH,EACnBA,EAAmB,YACf/oG,EAAYqzD,EAAU21C,WAC5B,GAAkB,OAAdhpG,EAAoB,CACtB2tB,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQqO,GAAY,+BAC7C,IAAMipG,EAAgBxqG,EAAA,EAAgBuB,GACtC2tB,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQs3G,GAAgB,+BACjD,IAAMC,EAAe/a,EAAA,EAAUgb,cAAcF,GACzCjB,EAAcjpH,OAAS,GACzBipH,EAAc/oH,KAAK,KAErB+oH,EAAc/oH,KACZmoB,mBAAsBtP,EAAtB,IAAsCoxG,MAY5C5C,EAAQuC,mBAAqB,SAASR,EAAaL,GACjD,IAAM1O,EAAc+O,EAAYW,WAChC,GAAoB,OAAhB1P,EAAsB,CACxB3rE,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQ2nG,IACjC,IAAM8P,EAAkB3qG,EAAA,EAAgB66F,GACxC3rE,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQy3G,GAAkB,iCACnD,IAAMC,EAAiBlb,EAAA,EAAUgb,cAAcC,GAC3CpB,EAAcjpH,OAAS,GACzBipH,EAAc/oH,KAAK,KAErB+oH,EAAc/oH,KAAKmoB,kCAAkCiiG,IAEvD,IAAMlrG,EAAckqG,EAAYiB,gBACZvkH,IAAhBoZ,IACE6pG,EAAcjpH,OAAS,GACzBipH,EAAc/oH,KAAK,KAErB+oH,EAAc/oH,KAAKmoB,kCAAkCjJ,MAYzDmoG,EAAQsC,iBAAmB,SAASL,EAAWP,GAC7C,IAAMuB,EAAYhB,EAAUiB,UAC5B,QAAkBzkH,IAAdwkH,EAAyB,CAC3B,IAAM7lG,EAAO6lG,EAAU3sG,MAAM,KACzB8G,EAAK3kB,QAAU,IACbipH,EAAcjpH,OAAS,GACzBipH,EAAc/oH,KAAK,KAErB+oH,EAAc/oH,KAAKmoB,+BAA+B1D,EAAK,MAG3D,IAAM2vD,EAAYk1C,EAAUL,UACV,OAAd70C,GACFizC,EAAQwC,iBACNz1C,EAAW20C,EAAe,cAahC1B,EAAQmD,wBAA0B,SAASxqG,GACzC0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IACtCkgB,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,GACvC,IAAM2qH,EAAkB7kH,KAAK8kH,mBAAmB1qG,GAC1CoZ,EAAa,IAAI84B,EAAA,EAAiB,MAExC,OADA94B,EAAWuxF,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAChDrxF,GAYTiuF,EAAQyD,6BAA+B,SAAS9qG,GAC9C0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IAKtC,IAHA,IAAI2qH,KACEM,KACAC,GAHNhrG,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,IAGd6d,MAAM,KACtB/d,EAAI,EAAGmH,EAAKikH,EAAYlrH,OAAQF,EAAImH,IAAMnH,EACjD6qH,EAAkB7kH,KAAK8kH,mBAAmBM,EAAYprH,GAAI6qH,GAC1DM,EAAKnrH,GAAK6qH,EAAgB3qH,OAE5B,IAAMmrH,EAAkB,IAAI7C,EAAA,EAAsB,MAGlD,OAFA6C,EAAgBN,mBACdC,EAAA,EAAqBC,GAAIJ,EAAiBM,GACrCE,GAYT5D,EAAQ6D,mBAAqB,SAASlrG,GACpC0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IACtCkgB,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,GACvC,IAAM2qH,EAAkB7kH,KAAK8kH,mBAAmB1qG,GAChD0uB,EAAA,EAAYxlC,OAAkC,IAA3BuhH,EAAgB3qH,QACnC,IAAMy5B,EAAQ,IAAIq4B,EAAA,EAAY,MAE9B,OADAr4B,EAAMoxF,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAC3ClxF,GAYT8tF,EAAQ8D,wBAA0B,SAASnrG,GACzC0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IACtCkgB,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,GACvC,IAAM2qH,EAAkB7kH,KAAK8kH,mBAAmB1qG,GAC1CorG,EAAa,IAAI/C,EAAA,EAAiB,MAExC,OADA+C,EAAWT,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAChDW,GAYT/D,EAAQgE,qBAAuB,SAASrrG,GACtC0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IAKtC,IAHA,IAAI2qH,KACEM,KACAzgB,GAHNtqF,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,IAGpB6d,MAAM,KAChB/d,EAAI,EAAGmH,EAAKujG,EAAMxqG,OAAQF,EAAImH,IAAMnH,EAAG,CAE9C,IAAIkX,GADJ2zG,EAAkB7kH,KAAK8kH,mBAAmBpgB,EAAM1qG,GAAI6qH,IAC1B3qH,OAChB,IAANF,GACF6qH,EAAgB3zG,KAAS2zG,EAAgB,GACzCA,EAAgB3zG,KAAS2zG,EAAgB,KAEzCA,EAAgB3zG,KAAS2zG,EAAgBM,EAAKnrH,EAAI,IAClD6qH,EAAgB3zG,KAAS2zG,EAAgBM,EAAKnrH,EAAI,GAAK,IAEzDmrH,EAAKnrH,GAAKkX,EAEZ,IAAM+hB,EAAU,IAAIqyE,EAAA,EAAc,MAElC,OADAryE,EAAQ8xF,mBAAmBC,EAAA,EAAqBC,GAAIJ,EAAiBM,GAC9DlyF,GAYTwuF,EAAQiE,0BAA4B,SAAStrG,GAC3C0uB,EAAA,EAAYxlC,OAAgC,OAAzB8W,EAAK8H,UAAU,EAAG,IACrC4mB,EAAA,EAAYxlC,OAAgC,KAAzB8W,EAAKA,EAAKlgB,OAAS,IAKtC,IAHA,IAAI2qH,KACEc,KACAC,GAHNxrG,EAAOA,EAAK8H,UAAU,EAAG9H,EAAKlgB,OAAS,IAGjB6d,MAAM,MACnB/d,EAAI,EAAGmH,EAAKykH,EAAS1rH,OAAQF,EAAImH,IAAMnH,EAG9C,IAFA,IAAM0qG,EAAQkhB,EAAS5rH,GAAG+d,MAAM,KAC1BotG,EAAOQ,EAAM3rH,MACVkB,EAAI,EAAGmG,EAAKqjG,EAAMxqG,OAAQgB,EAAImG,IAAMnG,EAAG,CAE9C,IAAIgW,GADJ2zG,EAAkB7kH,KAAK8kH,mBAAmBpgB,EAAMxpG,GAAI2pH,IAC1B3qH,OAChB,IAANgB,GACF2pH,EAAgB3zG,KAAS2zG,EAAgB,GACzCA,EAAgB3zG,KAAS2zG,EAAgB,KAEzCA,EAAgB3zG,KAAS2zG,EAAgBM,EAAKjqH,EAAI,IAClD2pH,EAAgB3zG,KAAS2zG,EAAgBM,EAAKjqH,EAAI,GAAK,IAEzDiqH,EAAKjqH,GAAKgW,EAGd,IAAM20G,EAAe,IAAInD,EAAA,EAAmB,MAG5C,OAFAmD,EAAad,mBACXC,EAAA,EAAqBC,GAAIJ,EAAiBc,GACrCE,GAcTpE,EAAQqE,mBAAqB,SAAS1rG,EAAM7B,GAC1C,GAAY,IAAR6B,EAAJ,CAGA,IAAMgD,EAAaqkG,EAAQsE,oBAAoB3rG,EAAM7B,GAC/C4C,EAAYiC,EAAA,UACZi3F,EAAWj3F,EAAA,SACXg3F,EAAYh3F,EAAA,UACZo3F,EAAcp3F,EAAA,YACdq3F,EAAcr3F,EAAA,YACd9D,EAAc8D,EAAA,YAEhBoxD,EAAY,UACEtuE,IAAdib,IACFqzD,EAAY,IAAIoR,EAAA,GACdhmE,MAA4CuB,KAGhD,IAAIqoG,EAAc,UACEtjH,IAAhBu0G,QAA6Cv0G,IAAhBoZ,IAC/BkqG,EAAc,IAAItyB,EAAA,GAChBt3E,MAA4C66F,EAC5C16F,MAA8BT,KAGlC,IAAIgqG,EAAa,UACGpjH,IAAhBs0G,IACF8O,EAAa,IAAI/2D,EAAA,GACf9xC,OAA+B+5F,EAC/B95F,KAAM8zD,EACN10D,OAAQ0pG,IAEVh1C,EAAYg1C,EAAc,MAE5B,IAAIE,EAAY,UACCxjH,IAAbm0G,QAAwCn0G,IAAdk0G,IAC5BsP,EAAY,IAAI57E,EAAA,GACdjpB,KAASw1F,EAAT,cACA35F,KAAM,IAAIklE,EAAA,GACRhmE,MAA4Cw6F,OAIlD,IAAMr7F,EAAQ,IAAI4mE,EAAA,GAChBjlE,KAAM8zD,EACNh0D,MAAO8oG,EACPxpG,OAAQ0pG,EACRppG,KAAMspG,IAERnrG,EAAQD,SAASS,KAYnB0oG,EAAQuE,oBAAsB,SAAS5rG,EAAM7B,GAE3C,IAAM6E,EAAaqkG,EAAQsE,oBAAoB3rG,EAAM7B,GAC/CiD,EAAWjD,EAAQ+D,cAsBzB,GAnBId,aAAoBwwC,EAAA,EAClB5uC,EAAA,SACAA,EAAWgnF,EAAA,EAA4BhmG,iBAClCgf,EAAA,mBACAA,EAAA,mBAEAA,EAAA,iBACAA,EAAA,kBAGFA,EAAA,UAEH5B,aAAoB8wC,EAAA,WACflvC,EAAA,iBACAA,EAAA,cAKPA,EAAA,SAAwB,CAC1B,IAAIi3F,EAAWnwD,WAAW9mC,EAAA,WACoB,IAA1CA,EAAA,SAAuBoE,QAAQ,QACjC6yF,EAAWz4F,KAAKmN,MAAMsrF,EAAW,WAEnCj3F,EAAA,SAAyBi3F,EAI3B,IAAM91F,KACN,IAAK,IAAM3N,KAAOwM,EAAY,CAC5B,IAAM7gB,EAAQ6gB,EAAWxM,GACrB6wG,EAAQY,kBAAkBzxG,GAC5B2N,EAAMkjG,EAAQY,kBAAkBzxG,IAAQrU,EAExCgiB,EAAM3N,GAAOrU,EAIjBgc,EAAQ6lB,cAAc7f,IAWxBkjG,EAAQwE,WAAa,SAASr1G,EAAKrU,GACjC,IAAM2pH,GACJ9hB,EAAA,EAA4BpmG,MAC5BomG,EAAA,EAA4B7lG,QAC5B6lG,EAAA,EAA4B1lG,KAC5B0lG,EAAA,EAA4BzlG,OAC5B,cACA,eAEIwnH,GACJ/hB,EAAA,EAA4BlmG,UAC5BkmG,EAAA,EAA4BjmG,aAC5BimG,EAAA,EAA4BhmG,QAC5BgmG,EAAA,EAA4B3lG,aAC5B2lG,EAAA,EAA4B9lG,WAC5B,WACA,cACA,UACA,cACA,aAGF,OAAIyE,EAAA,EAAiBmjH,EAAet1G,IAC1BrU,EACCwG,EAAA,EAAiBojH,EAAgBv1G,GACxB,SAAVrU,EAEDA,GAgBXklH,EAAQsE,oBAAsB,SAAS3rG,EAAM7B,GAI3C,IAHA,IAAM6tG,EAAQhsG,EAAKrC,MAAM,KACnBqF,KAEGpjB,EAAI,EAAGA,EAAIosH,EAAMlsH,SAAUF,EAAG,CACrC,IACMqsH,EADOhkG,mBAAmB+jG,EAAMpsH,IAClB+d,MAAM,KAC1B+wB,EAAA,EAAYxlC,OAAyB,IAAlB+iH,EAAOnsH,QAC1B,IAAM0W,EAAMy1G,EAAO,GACbx2F,EAAMw2F,EAAO,GAEnBjpG,EAAWxM,GAAO6wG,EAAQwE,WAAWr1G,EAAKif,GAG5C,OAAOzS,GAYTqkG,EAAQ6E,yBAA2B,SAAS9qG,GAC1CstB,EAAA,EAAY1d,iBAAiB5P,EAAU8wC,EAAA,GACvC,IAAMu4D,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YAClBv1G,EAAM2zG,EAAgB3qH,OAC5B,WAAY8F,KAAK0mH,mBAAmB7B,EAAiB2B,EAAQ,EAAGt1G,GAAhE,KAYFuwG,EAAQkF,8BAAgC,SAASnrG,GAC/CstB,EAAA,EAAY1d,iBAAiB5P,EAAUgnG,EAAA,GAOvC,IANA,IAAM2C,EAAO3pG,EAASorG,UAChBC,EAAkB1B,EAAKjrH,OACvB2qH,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YACpBxxF,EAAS,EACP6xF,GAAa,MACV9sH,EAAI,EAAGA,EAAI6sH,IAAmB7sH,EAAG,CACxC,IAAMkX,EAAMi0G,EAAKnrH,GACXogB,EAAOpa,KAAK0mH,mBAAmB7B,EAAiB2B,EAAQvxF,EAAQ/jB,GAC5D,IAANlX,GACF8sH,EAAU1sH,KAAK,KAEjB0sH,EAAU1sH,KAAKggB,GACf6a,EAAS/jB,EAGX,OADA41G,EAAU1sH,KAAK,KACR0sH,EAAU1/G,KAAK,KAYxBq6G,EAAQsF,oBAAsB,SAASvrG,GACrCstB,EAAA,EAAY1d,iBAAiB5P,EAAUwwC,EAAA,GACvC,IAAM64D,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YAClBv1G,EAAM2zG,EAAgB3qH,OAC5B,WAAY8F,KAAK0mH,mBAAmB7B,EAAiB2B,EAAQ,EAAGt1G,GAAhE,KAYFuwG,EAAQuF,yBAA2B,SAASxrG,GAC1CstB,EAAA,EAAY1d,iBAAiB5P,EAAUinG,EAAA,GACvC,IAAMoC,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YAClBv1G,EAAM2zG,EAAgB3qH,OAC5B,WAAY8F,KAAK0mH,mBAAmB7B,EAAiB2B,EAAQ,EAAGt1G,GAAhE,KAeFuwG,EAAQwF,aAAe,SAASpC,EAAiB2B,EAAQvxF,EAAQkwF,EAAM2B,GAErE,IADA,IAAMI,EAAkB/B,EAAKjrH,OACpBF,EAAI,EAAGA,EAAIktH,IAAmBltH,EAAG,CAExC,IAAMkX,EAAMi0G,EAAKnrH,GAAKwsH,EAChBpsG,EAAOpa,KAAK0mH,mBAAmB7B,EAAiB2B,EAAQvxF,EAAQ/jB,GAC5D,IAANlX,GACF8sH,EAAU1sH,KAAK,KAEjB0sH,EAAU1sH,KAAKggB,GACf6a,EAASkwF,EAAKnrH,GAEhB,OAAOi7B,GAYTwsF,EAAQ0F,sBAAwB,SAAS3rG,GACvCstB,EAAA,EAAY1d,iBAAiB5P,EAAU8pF,EAAA,GACvC,IAAMuf,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YAClBtB,EAAO3pG,EAASorG,UAEhBE,GAAa,MAInB,OAHArF,EAAQwF,aAAazsH,KAAKwF,KACxB6kH,EAAiB2B,EAHJ,EAGoBrB,EAAM2B,GACzCA,EAAU1sH,KAAK,KACR0sH,EAAU1/G,KAAK,KAYxBq6G,EAAQ2F,2BAA6B,SAAS5rG,GAC5CstB,EAAA,EAAY1d,iBAAiB5P,EAAUknG,EAAA,GAOvC,IANA,IAAMmC,EAAkBrpG,EAAS+qG,qBAC3BC,EAAShrG,EAASirG,YAClBd,EAAQnqG,EAAS6rG,WACjBC,EAAe3B,EAAMzrH,OACvB+6B,EAAS,EACP6xF,GAAa,KACV9sH,EAAI,EAAGA,EAAIstH,IAAgBttH,EAAG,CACrC,IAAMmrH,EAAOQ,EAAM3rH,GACnB8sH,EAAU1sH,KAAK,KACf66B,EAASwsF,EAAQwF,aAAazsH,KAAKwF,KACjC6kH,EAAiB2B,EAAQvxF,EAAQkwF,EAAM2B,GACzCA,EAAU1sH,KAAK,KAEjB,OAAO0sH,EAAU1/G,KAAK,KASxBq6G,EAAQ8F,mBACNv7C,EAAKy1C,EAAQ8D,wBACbz6C,EAAK22C,EAAQyD,6BACbn6C,EAAK02C,EAAQiE,0BACb/pH,EAAK8lH,EAAQmD,wBACbhoH,EAAK6kH,EAAQ6D,mBACb76C,EAAKg3C,EAAQgE,sBASfhE,EAAQ+F,mBACNhF,gBAAmBf,EAAQkF,8BAC3BlE,WAAchB,EAAQuF,yBACtBtE,aAAgBjB,EAAQ2F,2BACxB96D,WAAcm1D,EAAQ6E,yBACtBt6D,MAASy1D,EAAQsF,oBACjBzhB,QAAWmc,EAAQ0F,uBAcrB1F,EAAQnnH,UAAUwqH,mBAAqB,SAAS1qG,EAAMqtG,GAMpD,IALA,IAAMr0D,EAAMh5C,EAAKlgB,OACbssB,EAAQ,EACNq+F,OAA0C3kH,IAAxBunH,EACtBA,KACEztH,EAAI6qH,EAAgB3qH,OACjBssB,EAAQ4sC,GAAK,CAClB,IAAIxxC,SACAjnB,EAAQ,EACRI,EAAS,EACb,GAEEA,IAAe,IADf6mB,EAAI6/F,EAAQmB,QAAQphG,QAAQpH,EAAKgoB,OAAO5b,SAChB7rB,EACxBA,GAAS,QACFinB,GAAK,IACd,IAAM0pC,EAAgB,EAATvwD,IAAgBA,GAAU,GAAMA,GAAU,EACvDiF,KAAKmiH,QAAU72D,EACf3wD,EAAQ,EACRI,EAAS,EACT,GAEEA,IAAe,IADf6mB,EAAI6/F,EAAQmB,QAAQphG,QAAQpH,EAAKgoB,OAAO5b,SAChB7rB,EACxBA,GAAS,QACFinB,GAAK,IACd,IAAM2pC,EAAgB,EAATxwD,IAAgBA,GAAU,GAAMA,GAAU,EACvDiF,KAAKoiH,QAAU72D,EACfs5D,EAAgB7qH,KAAOgG,KAAKmiH,OAASniH,KAAK4hH,UAC1CiD,EAAgB7qH,KAAOgG,KAAKoiH,OAASpiH,KAAK4hH,UAE5C,OAAOiD,GAeTpD,EAAQnnH,UAAUosH,mBAAqB,SAAS7B,EAAiB2B,EAAQvxF,EAAQ/jB,GAE/E,IADA,IAAIw2G,EAAqB,GAChB1tH,EAAIi7B,EAAQj7B,EAAIkX,EAAKlX,GAAKwsH,EAAQ,CACzC,IAAI1hH,EAAI+/G,EAAgB7qH,GACpBsmB,EAAIukG,EAAgB7qH,EAAI,GAC5B8K,EAAI8W,KAAK6kB,MAAM37B,EAAI9E,KAAK4hH,WACxBthG,EAAI1E,KAAK6kB,MAAMngB,EAAItgB,KAAK4hH,WACxB,IAAMt2D,EAAKxmD,EAAI9E,KAAKmiH,OACd52D,EAAKjrC,EAAItgB,KAAKoiH,OACpBpiH,KAAKmiH,OAASr9G,EACd9E,KAAKoiH,OAAS9hG,EACdonG,GAAsBjG,EAAQoB,oBAAoBv3D,GAC9Cm2D,EAAQoB,oBAAoBt3D,GAElC,OAAOm8D,GAYTjG,EAAQnnH,UAAUqtH,oBAAsB,SAASvtG,EAAMsnG,GACrD54E,EAAA,EAAYxlC,OAAO8W,EAAKlgB,OAAS,GACjC4uC,EAAA,EAAYxlC,OAAmB,MAAZ8W,EAAK,IACxB0uB,EAAA,EAAYxlC,OAAiC,MAA1B8W,EAAKA,EAAKlgB,OAAS,IACtC,IAAI0tH,EAAaxtG,EAAKoH,QAAQ,KACxBqmG,EAAeD,GAAc,EAC9BxtG,EAAK8H,UAAU,EAAG0lG,GADF,IACmBxtG,EAClCoB,EAAWxb,KAAK8nH,qBAAqBD,EAAcnG,GACnDnpG,EAAU,IAAIwzC,EAAA,EAAUvwC,GAC9B,GAAIosG,GAAc,EAAG,CACnB,IAAMG,EAA0B3tG,EAAK8H,UACnC0lG,EAAa,EAAGxtG,EAAKlgB,OAAS,GAE1B8tH,GADNJ,EAAaG,EAAwBvmG,QAAQ,OACR,EACnCumG,EAAwB7lG,UAAU,EAAG0lG,GACrCG,EACF,GAAsB,IAAlBC,EAEF,IADA,IAAM5B,EAAQ4B,EAAejwG,MAAM,KAC1B/d,EAAI,EAAGA,EAAIosH,EAAMlsH,SAAUF,EAAG,CACrC,IACMqsH,EADOhkG,mBAAmB+jG,EAAMpsH,IAClB+d,MAAM,KAC1B+wB,EAAA,EAAYxlC,OAAyB,IAAlB+iH,EAAOnsH,QAC1B,IAAI0W,EAAMy1G,EAAO,GACX9pH,EAAQ8pH,EAAO,IAChBrmH,KAAKkiH,WAAaT,EAAQY,kBAAkBzxG,KAC/CA,EAAM6wG,EAAQY,kBAAkBzxG,IAElC2H,EAAQ7V,IAAIkO,EAAK6wG,EAAQwE,WAAWr1G,EAAKrU,IAG7C,GAAIqrH,GAAc,EAAG,CACnB,IAAMK,EAAaF,EAAwB7lG,UAAU0lG,EAAa,GAC9D5nH,KAAKkiH,UACPT,EAAQqE,mBAAmBmC,EAAY1vG,GAEvCkpG,EAAQuE,oBAAoBiC,EAAY1vG,IAI9C,OAAOA,GAYTkpG,EAAQnnH,UAAU4tH,qBAAuB,SAAS9tG,EAAMsnG,GAAa,IAAAr/G,EAAArC,KACnE8oC,EAAA,EAAYxlC,OAAmB,MAAZ8W,EAAK,IACxBpa,KAAKmiH,OAAS,EACdniH,KAAKoiH,OAAS,EAEd,IAAMzkG,KAEN,IADAvD,EAAOA,EAAK8H,UAAU,GACf9H,EAAKlgB,OAAS,GAAG,CACtB,IAAMssB,EAAQpM,EAAKoH,QAAQ,KAC3BsnB,EAAA,EAAYxlC,OAAOkjB,GAAS,GAC5B,IAAMjO,EAAUvY,KAAK2nH,oBACnBvtG,EAAK8H,UAAU,EAAGsE,EAAQ,GAAIk7F,GAChC/jG,EAASvjB,KAAKme,GACd6B,EAAOA,EAAK8H,UAAUsE,EAAQ,GAYhC,OARA7I,EAAS3a,QAAQ,SAACuV,GAChB,IAAK,IAAM3H,KAAOvO,EAAKigH,eAAgB,CACrC,IAAM3lH,EAAW8kH,EAAQY,kBAAkBzxG,QACb1Q,IAA1BqY,EAAQlc,IAAIM,IACd4b,EAAQ7V,IAAI/F,EAAU0F,EAAKigH,eAAe1xG,GAAKpW,KAAK,KAAM+d,OAIzDoF,GAYT8jG,EAAQnnH,UAAUwtH,qBAAuB,SAAS1tG,EAAMsnG,GACtD,IAAMyG,EAAiB1G,EAAQ8F,kBAAkBntG,EAAK,IAEtD,OADA0uB,EAAA,EAAYxlC,YAA0BpD,IAAnBioH,GACZA,EAAe3tH,KAAKwF,KAAMoa,IAYnCqnG,EAAQnnH,UAAU8tH,iBAAmB,SAAS7vG,EAASmpG,GACrD,IAAoC2G,KAIhCC,EAAkB,GAChB9sG,EAAWjD,EAAQ+D,cACrBd,IACF8sG,EAAkBtoH,KAAKuoH,kBAAkB/sG,EAAUkmG,IAGjD4G,EAAgBpuH,OAAS,IAE3B4uC,EAAA,EAAYxlC,OAAuD,MAAhDglH,EAAgBA,EAAgBpuH,OAAS,IAC5DouH,EAAkBA,EAAgBpmG,UAAU,EAAGomG,EAAgBpuH,OAAS,GACxEmuH,EAAajuH,KAAKkuH,IAKpB,IAAoCE,KAC9BC,EAAezoH,KAAKgiH,oBAAoBzpG,GAC9C,IAAK,IAAM3H,KAAO63G,EAAc,CAC9B,IAAMlsH,EAAQksH,EAAa73G,GAC3B,QAAc1Q,IAAV3D,GAAiC,OAAVA,GAAkBqU,IAAQ2H,EAAQ+E,kBAAmB,CAC7C,IAA7BkrG,EAAkBtuH,QACpBsuH,EAAkBpuH,KAAK,KAEzB,IAAMsuH,EAAUnmG,mBACX3R,EAAIwU,QAAQ,UAAW,KADZ,IAEZ7oB,EAAMwlB,WAAWqD,QAAQ,UAAW,MACxCojG,EAAkBpuH,KAAKsuH,IAW3B,GAPIF,EAAkBtuH,OAAS,IAC7BmuH,EAAajuH,KAAK,KAClByS,MAAMvS,UAAUF,KAAKS,MAAMwtH,EAAcG,IAKvCxoH,KAAK+hH,cAAe,CACtB,IAAMl1F,EAAgBtU,EAAQowG,mBAC9B,QAAsBzoH,IAAlB2sB,EAA6B,CAC/B,IAAIpU,EAASoU,EAAcryB,KAAK+d,EAAS,GACzC,GAAe,OAAXE,EAAiB,CACnB,IAAM0qG,KACN1qG,EAAS5L,MAAMC,QAAQ2L,GAAUA,GAAUA,GAC3CgpG,EAAQM,cACNtpG,EAAQ+C,EAASxC,UAAWmqG,GAC1BA,EAAcjpH,OAAS,IACzBmuH,EAAajuH,KAAK,KAClByS,MAAMvS,UAAUF,KAAKS,MAAMwtH,EAAclF,MASjD,OADAkF,EAAajuH,KAAK,KACXiuH,EAAajhH,KAAK,KAY3Bq6G,EAAQnnH,UAAUsuH,kBAAoB,SAASjrG,EAAU+jG,GACvD1hH,KAAKmiH,OAAS,EACdniH,KAAKoiH,OAAS,EACd,IAAM0E,KACN,GAAInpG,EAASzjB,OAAS,EAAG,CACvB4sH,EAAU1sH,KAAK,KACf,IAAK,IAAIJ,EAAI,EAAGmH,EAAKwc,EAASzjB,OAAQF,EAAImH,IAAMnH,EAC9C8sH,EAAU1sH,KAAK4F,KAAKooH,iBAAiBzqG,EAAS3jB,GAAI0nH,IAGtD,OAAOoF,EAAU1/G,KAAK,KAYxBq6G,EAAQnnH,UAAUiuH,kBAAoB,SAAS/sG,EAAUkmG,GACvD,IAAMmH,EAAiBpH,EAAQ+F,kBAC7BhsG,EAASxC,WACX8vB,EAAA,EAAYxlC,YAA0BpD,IAAnB2oH,GACnB,IAAMC,EACDC,EAAA,EAAqCvtG,GAAU,EAAMkmG,GAC1D,OAAOmH,EAAeruH,KAAKwF,KAAM8oH,IAIpBxrH,EAAA,+EC3rCT0rH,EAAUlhH,QAAQpM,OAAO,sCAC7ButH,EAAA,EAA+BltH,KAC/Bu+E,EAAA,EAAwB5+E,OAAOK,KAC/B64E,EAAA,EAAel5E,OAAOK,OAIxBitH,EAAQjyE,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,2CAA4C57C,EAAQ,SA8BzE2tH,EAAQ9xE,WAAa,WACnB,OACE1mB,WAAY,8CACZkiB,OACEthC,OAAU,gCACVxM,IAAO,6BACP+3B,UAAa,oCACb0a,YAAe,iCAEjBC,kBAAkB,EAClBC,YAAa,6CAKjByxE,EAAQj2E,UAAU,yBAA0Bi2E,EAAQ9xE,YAcpD8xE,EAAQxxE,YAAc,SAASnqB,EAAQ+I,EAAUE,EAAW8oB,GAAgB,IAAA/8C,EAAArC,KAQ1EA,KAAKoR,QAAyB,IAAhBpR,KAAKoR,OAEnBic,EAAOO,OACL,kBAAMvrB,EAAK+O,QACXpR,KAAK8/E,oBAAoB9iF,KAAKgD,OAOhCA,KAAK4E,IAML5E,KAAK28B,UAML38B,KAAKq3C,YASLr3C,KAAKmmC,OAAS9Y,EAMdrtB,KAAKw2B,UAAYJ,EAMjBp2B,KAAK42B,WAAaN,EAMlBt2B,KAAKu/C,gBAAkBH,EA2BvBp/C,KAAKkpH,4BAA8B77F,EAAOyvC,iBAAiB,WACzD,GAAI1d,EAAetoB,SACjB,OAAOsoB,EAAetoB,SAASx1B,UAxBH,SAAS/E,GAAO,IAAAwJ,EAAA/F,KAG9CA,KAAKw2B,UAAU,WACb,GAAIj6B,EAAO,CACT,IAAM4sH,EAAYpjH,EAAKqjH,kBAEvBD,EAAUjvH,OAAS,EACnB6L,EAAKw5C,gBAAgBzoB,SAASxG,mBAAmB,SAAC9B,GAC5CA,EAAStsB,KAAKgE,WAChB4iC,EAAA,EAAYxlC,OAAoC,IAA7BkrB,EAASltB,SAASpH,QACrCivH,EAAU/uH,KAAKo0B,QAIpB,IAWsBxxB,KAAKgD,OAWhCA,KAAKm3C,OAAQ,EAObn3C,KAAKopH,qBAOLppH,KAAKqpH,yBAA2B,KAEhCh8F,EAAOO,OACL,kBAAMvrB,EAAKgnH,0BACX,SAACv2E,EAAU5F,GACT7qC,EAAK80C,OAAQ,EACb90C,EAAK4sB,MAAQg6F,EAAA,EAA+BtuE,MAAMM,OAatDj7C,KAAKivB,MAAQg6F,EAAA,EAA+BtuE,MAAMM,KAElD5tB,EAAOO,OACL,kBAAMvrB,EAAK4sB,OACX,SAAC6jB,EAAU5F,GACL4F,IAAam2E,EAAA,EAA+BtuE,MAAMG,sBAClDhI,IAAam2E,EAAA,EAA+BtuE,MAAMK,qBACpD34C,EAAKgnH,yBAA2B,MAE9Bv2E,IAAam2E,EAAA,EAA+BtuE,MAAMK,qBACpD34C,EAAK+O,QAAS,KAKpBic,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QApJlDgpH,EAAQxxE,uEA+JRwxE,EAAQxxE,YAAYl9C,UAAUgvH,YAAc,WAC1CtpH,KAAKivB,MAAQg6F,EAAA,EAA+BtuE,MAAMC,sBAUpDouE,EAAQxxE,YAAYl9C,UAAUwlF,oBAAsB,SAAS1uE,GAAQ,IAAAvK,EAAA7G,KAC9DoR,IACEpR,KAAKm3C,MAQRn3C,KAAKw2B,UAAU,WACb3vB,EAAKuK,QAAS,EACdvK,EAAKyiH,gBATPtpH,KAAKspH,gBAmBXN,EAAQxxE,YAAYl9C,UAAUkgD,eAAiB,WAC7Cx6C,KAAKkpH,+BAIPF,EAAQx4F,WAAW,mCAAoCw4F,EAAQxxE,aAGhD,IAAA+xE,EAAA,6BC5QThI,EAAUz5G,QAAQpM,OAAO,oBAC7B8tH,EAAA,EAAsB9tH,OAAOK,KAC7BktH,EAAA,EAA+BltH,KAC/BwtH,EAAuCxtH,KACvCo6E,EAAA,EAA6Bz6E,OAAOK,KACpC+uF,EAAA,EAAmBpvF,OAAOK,KAC1B0tH,EAAA,EAAwB/tH,OAAOK,OAIlBuB,EAAA,wHCNTosH,EAAU,WAId1pH,KAAK2pH,cAAgB,IAAIC,EAAA,GAkB3BF,EAAQG,kBACNv9D,YAZFo9D,EAAQI,gBACNtsH,YAAa,aACbI,MAAO,QACPC,QAAS,YAS4BL,YACrCwuD,MAAS09D,EAAQI,eAAelsH,MAChC0nG,QAAWokB,EAAQI,eAAejsH,QAClC2kH,gBAAmBkH,EAAQI,eAAetsH,YAC1CilH,WAAciH,EAAQI,eAAelsH,MACrC8kH,aAAgBgH,EAAQI,eAAejsH,SASzC6rH,EAAQpvH,UAAUyvH,kBAAoB,SAASzjD,EAAK7jE,EAAOwqB,GACzD,IAAMzH,EAAS/iB,EAAM+mB,YACrBsf,EAAA,EAAY1d,iBAAiB5F,EAAQ8mB,EAAA,GASrC,IAPA,IAAM3uB,EAAW6H,EAAOyvF,cAEoB+U,KACtCC,GACJC,QAAS,GAGFlwH,EAAI,EAAGmH,EAAKwc,EAASzjB,OAAQF,EAAImH,IAAMnH,EAAG,CACjD,IAAMmwH,EAAkBxsG,EAAS3jB,GAE7BowH,EAAY,KACZv9F,EAAgBs9F,EAAgBxB,wBACdzoH,IAAlB2sB,EACFu9F,EAAYv9F,EAAcryB,KAAK2vH,EAAiBl9F,QAG1B/sB,KADtB2sB,EAAgBpqB,EAAMkmH,sBAEpByB,EAAYv9F,EAAcryB,KAAKiI,EAAO0nH,EAAiBl9F,IAG3D,IAAMo9F,EAAqBrqH,KAAK2pH,cAAcW,mBAAmBH,GAI3D1xG,EAAwB,OAAd2xG,GAAuBv9G,MAAMC,QAAQs9G,GAA4BA,GAAbA,GAGpE,GAFAthF,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQ2L,IAElB,OAAXA,GAAmBA,EAAOve,OAAS,EAErC,IADA,IAAIqwH,GAAyB,EACpBrvH,EAAI,EAAGmG,EAAKoX,EAAOve,OAAQgB,EAAImG,IAAMnG,EAAG,CAC/C,IAAM6d,EAAQN,EAAOvd,GACjBsgB,EAAWzC,EAAMuD,cACjBkuG,SACJ,GAAKhvG,EAWE,CACL,IAAIivG,EAAgBN,EAAgB5rG,QACpCksG,EAAcj/F,YAAYhQ,GAC1BgvG,EAAiBxqH,KAAK2pH,cAAcW,mBAAmBG,GACvDjvG,EAAWivG,EAAcnuG,cACzBmuG,EAAgB,KAChBT,EAAgB5vH,KAAKowH,OAjBR,CAIb,GAHAA,EAAiBH,IACjB7uG,EAAW2uG,EAAgB7tG,eAGzB,SAEGiuG,IACHP,EAAgB5vH,KAAKowH,GACrBD,GAAyB,GAW7B,IAAMrH,EAAe1nG,EAASxC,UACI,OAA9BwxG,EAAeptG,aACjBotG,EAAeptG,eAGjB,IAAMstG,iBAAkCxvH,EAClCyvH,EAAaz4E,EAAA,EAAcn5B,GAAOgJ,WAAlC,IAAgDmhG,EACtDljH,KAAK4qH,kBAAkBX,EAAoB/G,EAAcnqG,EAAO4xG,EAASD,GACzEF,EAAeptG,WAAWstG,GAAoBC,GAUpD,GAAIX,EAAgB9vH,OAAS,EAAG,CAC9B,IAIMwC,GACJmuH,SAJAxtH,KAAM,oBACNsgB,SAAUqsG,GAIV/uG,QAASxY,EAAMklB,aACf5O,MAAOkxG,EACP5sH,KAAM,WAERipE,EAAIlsE,KAAKsC,KAYbgtH,EAAQpvH,UAAUswH,kBAAoB,SAASluH,EAAQwmH,EAAcnqG,EAAO4xG,EAASD,GACnF,GAAMxH,KAAgBwG,EAAQG,iBAA9B,CAIA,IAAMzG,EAAYsG,EAAQG,iBAAiB3G,GACrCtyG,MAAU85G,EAAV,OAAiCC,EAAjC,KACN,KAAI/5G,KAAOlU,GAAX,CAIA,IAAMouH,GACJC,gBAEFruH,EAAOkU,GAAOk6G,EACd,IAAMt8C,EAAYz1D,EAAMsqG,UAClBC,EAAavqG,EAAMwqG,WACnBC,EAAczqG,EAAM0qG,YACpBC,EAAY3qG,EAAM4qG,UACpBP,IAAcsG,EAAQI,eAAejsH,QACrB,OAAd2wE,GACFxuE,KAAKgrH,yBACHF,EAAYC,YAAav8C,EAAWg1C,GAE/BJ,IAAcsG,EAAQI,eAAetsH,YAC1B,OAAhBgmH,GACFxjH,KAAKirH,sBAAsBH,EAAYC,YAAavH,GAE7CJ,IAAcsG,EAAQI,eAAelsH,OAC3B,OAAf0lH,GACFtjH,KAAKkrH,uBAAuBJ,EAAYC,YAAazH,GAGvC,OAAdI,GACF1jH,KAAKmrH,gBAAgBL,EAAYC,YAAarH,MAUlDgG,EAAQpvH,UAAU8wH,sBAAwB,SAASC,EAAY78C,GAC7D,IAAIrzD,EAAYqzD,EAAU21C,WACR,OAAdhpG,IACF2tB,EAAA,EAAYxlC,OAA4B,iBAAd6X,GAA0BtO,MAAMC,QAAQqO,IAClEA,EAAYvB,EAAA,EAAgBuB,GAC5B2tB,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQqO,GAAY,+BAC7CkwG,EAAWlwG,UAAYmuF,EAAA,EAAUgb,cAAcnpG,GAC/CkwG,EAAWlX,YAAch5F,EAAU,KAWvCuuG,EAAQpvH,UAAU2wH,sBAAwB,SAASF,EAAavH,GAC9D,IAAM6H,GACJhuH,KAAM,QAER2C,KAAKsrH,wBAAwBD,EAAY7H,GACzCuH,EAAY3wH,KAAKixH,IAUnB3B,EAAQpvH,UAAU4wH,uBAAyB,SAASH,EAAazH,GAC/D,IAAI+H,SACJ,GAAI/H,aAAsB/2D,EAAA,EAAe,EACvC8+D,GACEhuH,KAAM,UAEGm3G,YAAc8O,EAAW/vF,YACpC,IAAMi7C,EAAY80C,EAAWD,UACX,OAAd70C,GACFxuE,KAAKorH,sBAAsBC,EAAY78C,GAEzC,IAAMg1C,EAAcF,EAAWG,YACX,OAAhBD,GACFxjH,KAAKsrH,wBAAwBD,EAAY7H,QAEtC,GAAIF,aAAsBiI,EAAA,EAAa,CAC5C,IAAMv5E,EAAMsxE,EAAWkI,SACvB,QAAYtrH,IAAR8xC,EAAmB,CACrBq5E,GACEhuH,KAAM,QACNouH,gBAAiBz5E,GAEnB,IAAM/2B,EAAUqoG,EAAW37F,aACX,OAAZ1M,IACFowG,EAAWK,eAAiBzwG,GAE9B,IAAMX,EAAOgpG,EAAWhkG,UACxB,GAAa,OAAThF,EAAe,CACjB,IAAIulB,EAAQyjF,EAAW/1C,WACnBxpB,MAAMlkB,KACRA,EAAQ,GAEVwrF,EAAWM,aAAerxG,EAAK,GAAKulB,EACpCwrF,EAAWO,cAAgBtxG,EAAK,GAAKulB,EAEvC,IAAIjhB,EAAW0kG,EAAWuI,cACtB9nE,MAAMnlC,KACRA,EAAW,GAEbysG,EAAWzsG,SAAWktG,EAAA,EAAiBltG,SAEpC,GAAI0kG,aAAsByI,EAAA,EAAqB,CAKpD,IAAMpvG,EAA+C2mG,EAAY0I,YACjE,GAAe,OAAXrvG,EAAiB,CACnB0uG,GACEhuH,KAAM,SAEO,IAAXsf,EACF0uG,EAAWY,YAAc,SACL,IAAXtvG,EACT0uG,EAAWY,YAAc,WACL,IAAXtvG,EACT0uG,EAAWY,YAAc,OACL,IAAXtvG,IACT0uG,EAAWY,YAAc,SAE3B,IAAMC,EAAY5I,EAAWhkG,UACX,OAAd4sG,IACFb,EAAWM,aAAeO,EAAU,GACpCb,EAAWO,cAAgBM,EAAU,IAEvC,IAAMC,EAAgB7I,EAAWuI,cAC5B9nE,MAAMooE,IAAoC,IAAlBA,IAC3Bd,EAAWzsG,SAAWktG,EAAA,EAAiBK,IAEzC,IAAMC,EAAe9I,EAAW37F,aACX,OAAjBykG,IACFf,EAAWK,eAAiBU,GAE9B,IAAMC,EAAc/I,EAAWG,YACX,OAAhB4I,GACFrsH,KAAKsrH,wBAAwBD,EAAYgB,GAE3C,IAAMC,EAAYhJ,EAAWD,UACX,OAAdiJ,GACFtsH,KAAKorH,sBAAsBC,EAAYiB,SAI1BpsH,IAAfmrH,GACFN,EAAY3wH,KAAKixH,IAYrB3B,EAAQpvH,UAAU0wH,yBAA2B,SAASD,EAAav8C,EAAWg1C,GAC5E,IAAM6H,GACJhuH,KAAM,WAER2C,KAAKorH,sBAAsBC,EAAY78C,GACnB,OAAhBg1C,GACFxjH,KAAKsrH,wBAAwBD,EAAY7H,GAE3CuH,EAAY3wH,KAAKixH,IAUnB3B,EAAQpvH,UAAUgxH,wBAA0B,SAASD,EAAY7H,GAC/D,IAAM/O,EAAc+O,EAAYW,WAChC,GAAoB,OAAhB1P,EAAsB,CACxB3rE,EAAA,EAAYxlC,OAA8B,iBAAhBmxG,GAA4B5nG,MAAMC,QAAQ2nG,IACpE,IAAM8P,EAAkB3qG,EAAA,EAAgB66F,GACxC3rE,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQy3G,GAAkB,iCACnD8G,EAAW5W,YAAcnL,EAAA,EAAUgb,cAAcC,GACjD8G,EAAWkB,cAAgBhI,EAAgB,GAE7C,IAAMiI,EAAkBhJ,EAAYiJ,cACZ,OAApBD,IACFnB,EAAWmB,gBAAkBA,EAAgBplH,KAAK,MAEpD,IAAMkS,EAAckqG,EAAYiB,gBACZvkH,IAAhBoZ,IACF+xG,EAAW/xG,YAAcA,GAELkqG,EAAYkJ,eAEhCrB,EAAWsB,cAAgBnJ,EAAYkJ,eAW3ChD,EAAQpvH,UAAU6wH,gBAAkB,SAASJ,EAAarH,GACxD,IAAM2H,GACJhuH,KAAM,QAEFkI,EAAQm+G,EAAUC,UACxB,QAAczjH,IAAVqF,EAAqB,CACvB8lH,EAAW9lH,MAAQA,EACnB,IAAIqnH,EAAS,IACTC,EAAS,IAEPC,EAAcpJ,EAAUqJ,eAEV,SAAhBD,GAA0C,UAAhBA,EAC5BF,EAAS,IACgB,UAAhBE,GAA2C,QAAhBA,IACpCF,EAAS,KAGX,IAAMI,EAAiBtJ,EAAUuJ,kBAEV,WAAnBD,EACFH,EAAS,IACmB,QAAnBG,IACTH,EAAS,KAEXxB,EAAW6B,WAAX,GAA2BN,EAASC,EAEpC,IAAMM,EAAgBzJ,EAAUmI,mBACV3rH,IAAlBitH,IAEF9B,EAAW8B,eAAiC,IAAhBA,EAAsBvxG,KAAKE,IAAIiG,WAE3DspG,EAAW6B,WAAa,MAG1B,IAAMxI,EAAYhB,EAAUiB,UAC5B,QAAkBzkH,IAAdwkH,EAAyB,CAC3B,IAAM7lG,EAAO6lG,EAAU3sG,MAAM,KACzB8G,EAAK3kB,QAAU,IACjBmxH,EAAW+B,WAAavuG,EAAK,GAC7BwsG,EAAWhX,SAAWx1F,EAAK,GAC3BwsG,EAAWgC,WAAaxuG,EAAKzjB,OAAO,GAAGgM,KAAK,MAIhD,IAAMo8G,EAAcE,EAAUD,YAC9B,GAAoB,OAAhBD,EAAsB,CACxB,IAAM/O,EAAc+O,EAAYW,WAChCr7E,EAAA,EAAYxlC,OAA8B,iBAAhBmxG,GAA4B5nG,MAAMC,QAAQ2nG,IACpE,IAAM8P,EAAkB3qG,EAAA,EAAgB66F,GACxC3rE,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQy3G,GAAkB,iCACnD8G,EAAWiC,UAAYhkB,EAAA,EAAUgb,cAAcC,GAC/C8G,EAAWkC,YAAchJ,EAAgB,GACzC,IAAMxqG,EAAQypG,EAAYiB,gBACZvkH,IAAV6Z,IAEFsxG,EAAWmC,WAAazzG,EAAQ,GAIpC,IAAMy0D,EAAYk1C,EAAUL,UAC5B,GAAkB,OAAd70C,EAAoB,CACtB,IAAMrzD,EAAYqzD,EAAU21C,WAC5Br7E,EAAA,EAAYxlC,OAA4B,iBAAd6X,GAA0BtO,MAAMC,QAAQqO,IAClE,IAAMipG,EAAgBxqG,EAAA,EAAgBuB,GACtC2tB,EAAA,EAAYxlC,OAAOuJ,MAAMC,QAAQs3G,GAAgB,+BACjDiH,EAAWjX,UAAY9K,EAAA,EAAUgb,cAAcF,QAInBlkH,IAA1BmrH,EAAW6B,aACb7B,EAAWoC,aAAe/J,EAAUgK,aAGpCrC,EAAWsC,cAAgBjK,EAAUkK,cAGvC7C,EAAY3wH,KAAKixH,KAKN,IAAAwC,EAAA,gGCzYTC,EAAU,SAASvqH,EAAK7D,EAAOI,EAAgBD,GAKnDG,KAAKytC,KAAOlqC,EAMZvD,KAAKK,OAASX,EAMdM,KAAK02B,gBAAkB52B,EAMvBE,KAAKguC,iBAAmBnuC,EAMxBG,KAAK+tH,eAAiB,IAAIF,EAM1B7tH,KAAKguH,mBAAoB,gEAW3BF,EAAQxzH,UAAUm+B,OAAS,SAASw1F,EAAKC,GACvC,IAAMC,OAAgCjuH,IAAnBguH,EAA+BA,KAE5C3qH,EAASvD,KAAKytC,KAAd,WAA6BwgF,EAEnC,OAAOjuH,KAAKK,OAAL,OAAsBkD,EAAK4qH,IAepCL,EAAQxzH,UAAU8zH,WAAa,SAC7BxpH,EAAKi7B,EAAOwuF,EAAKC,EAAQ9gH,EAAQ+gH,GAEjC,IAAMC,GACJH,IAAKA,EACLzvG,SAAyB2vG,EAAA,UAG3BvuH,KAAKyuH,WAAW7pH,EAAKi7B,EAAO2uF,GAE5B,IAAMjgH,GACJ3J,IAAK4pH,GAaP,OAXA/kF,EAAA,EAAal7B,EAAYggH,IAKvBhgH,aACAf,SACAusC,KALW/5C,KAAK02B,gBAAgBg4F,gBAMhCJ,WAaJR,EAAQxzH,UAAUm0H,WAAa,SAAS7pH,EAAKi7B,EAAOnjC,GAAQ,IAAA2F,EAAArC,KACpDwf,EAAO5a,EAAI6a,UACXkvG,EAAanvG,EAAKM,YAClBsuF,EAAiB5uF,EAAKiyB,gBACtBm9E,EAAiBpvG,EAAK2J,gBACtB0lG,EAAenyH,EAAOkiB,UAAYktG,EAAA,EAAiBtsG,EAAKqsG,eAE9D/iF,EAAA,EAAYxlC,YAAsBpD,IAAfyuH,GACnB7lF,EAAA,EAAYxlC,YAA0BpD,IAAnBkuG,GAEnB1xG,EAAO0jB,OAASuuG,EAChBjyH,EAAO2b,WAAa+1F,EAAel3C,UACnCx6D,EAAOkiB,SAAWiwG,EAClBnyH,EAAOmjC,MAAQA,EACfnjC,EAAO4H,UAEP,IAAMwqH,EAAgBlqH,EAAIqiB,gBAC1B6hB,EAAA,EAAYxlC,OAAOwrH,GACnB9uH,KAAKguH,qBAAgE,IAA1Cc,EAAczyH,IAAI,qBAC7C,IAAIiI,EAAStE,KAAKguC,iBAAiB1mB,cAAcwnG,GAGjD/rH,EAAA,EAAmBuB,EAAQ,SAACyqH,EAASC,GAAV,OAAsBD,EAAQE,YAAcD,EAAQC,eAC/E3qH,EAASA,EAAOrH,QAAQ8H,WAEjB/B,QAAQ,SAACP,GACVA,EAAMwmB,eACR6f,EAAA,EAAYxlC,YAA0BpD,IAAnB0uH,GACnBvsH,EAAK6sH,YAAYxyH,EAAO4H,OAAQ7B,EAAOmsH,OAW7Cd,EAAQxzH,UAAU40H,YAAc,SAAS5oD,EAAK7jE,EAAOwqB,GAC/CxqB,aAAiBo3E,EAAA,EACnB75E,KAAKmvH,kBAAkB7oD,EAAK7jE,GACnBA,aAAiBu3E,EAAA,EAC1Bh6E,KAAKovH,iBAAiB9oD,EAAK7jE,GAClBA,aAAiB4sH,EAAA,GAC1BrvH,KAAK+tH,eAAehE,kBAAkBzjD,EAAK7jE,EAAOwqB,IAUtD6gG,EAAQxzH,UAAU60H,kBAAoB,SAAS7oD,EAAK7jE,GAClDqmC,EAAA,EAAY1d,iBAAiB3oB,EAAOo3E,EAAA,GACrBp3E,EAAM+mB,sBACCqwC,EAAA,GACpB75D,KAAKsvH,qBAAqBhpD,EAAK7jE,IAUnCqrH,EAAQxzH,UAAUg1H,qBAAuB,SAAShpD,EAAK7jE,GACrD,IAAM+iB,EAAS/iB,EAAM+mB,YAErBsf,EAAA,EAAY1d,iBAAiB3oB,EAAOo3E,EAAA,GACpC/wC,EAAA,EAAY1d,iBAAiB5F,EAAQq0C,EAAA,GAErC,IAAMt2D,EAAMiiB,EAAO+pG,cACPrvH,IAARqD,GACFvD,KAAKwvH,gBACHlpD,EAAK7jE,EAAOc,EAAKiiB,EAAOiE,cAY9BqkG,EAAQxzH,UAAUk1H,gBAAkB,SAASlpD,EAAK7jE,EAAOc,EAAKuD,GACxDvD,EAAIu2G,WAAW,QACjBv2G,EAAMzG,OAAOqlD,SAASI,SAAYh/C,GAEpC,IAAMksH,EAAU,IAAIC,IAAInsH,GAClBosH,GAAgBjnG,aAAe,GACrC,GAAI+mG,EAAQG,aACV,KAAAjjH,EAAsB8iH,EAAQG,aAA9BhjH,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA4C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAAA,IAAjCqtB,EAAiC1c,EAC1CyiH,EAAa/lG,EAAQ,IAAMA,EAAQ,IAGvC,IAAK,IAAMhZ,KAAO9J,EAAQ,CACxB,IAAMvK,EAAQuK,EAAO8J,GAEP,OAAVrU,QAA4B2D,IAAV3D,IACpBozH,EAAa/+G,GAAOrU,UAGjBozH,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,QAEP,IAAMjzH,GACJmzH,QAAS/B,EAAQgC,gBAAgBL,EAAQ/nB,OAAS+nB,EAAQ5sE,UAC1DktE,YAAa,WAAYjpH,EAASA,EAAA,OAAmB,YACrDxC,OAAQwC,EAAA,OAAiBiR,MAAM,KAC/B43G,aAAcA,EACdrqG,WAAYxe,EAAA,WACZzJ,KAAM,MACN4d,QAASjb,KAAKgwH,uBAAuBvtH,GACrCynH,QAASpjH,EAAA,QACTmpH,eAAgBjwH,KAAKguH,mBAEvB1nD,EAAIlsE,KAAKsC,IASXoxH,EAAQgC,gBAAkB,SAASvsH,GACjC,IAAMknE,EAAIt4C,SAASC,cAAc,KAEjC,OADAq4C,EAAEylD,KAAOC,UAAU5sH,GACZm0G,UAAUjtC,EAAEylD,OASrBpC,EAAQxzH,UAAU80H,iBAAmB,SAAS9oD,EAAK7jE,GACjDqmC,EAAA,EAAY1d,iBAAiB3oB,EAAOu3E,EAAA,GACpC,IAAMx0D,EAAS/iB,EAAM+mB,YACjBhE,aAAkB5d,EAAA,EACpB5H,KAAKowH,qBAAqB9pD,EAAK7jE,GACtB+iB,aAAkBivD,EAAA,GAC3Bz0E,KAAKqwH,oBAAoB/pD,EAAK7jE,IAUlCqrH,EAAQxzH,UAAU81H,qBAAuB,SAAS9pD,EAAK7jE,GACrDqmC,EAAA,EAAY1d,iBAAiB3oB,EAAOu3E,EAAA,GACpC,IAAMx0D,EAAS/iB,EAAM+mB,YACrBsf,EAAA,EAAY1d,iBAAiB5F,EAAQ5d,EAAA,GAErC,IAAMyQ,EAAamN,EAAOisB,gBACpB6+E,EAAW9qG,EAAO+qG,cACxBznF,EAAA,EAAY1d,iBAAiBklG,EAAUE,EAAA,GAMvC,IALA,IAAMC,EAAYH,EAASI,eAGrBC,KAEG32H,EAAI,EAAGmH,EAAKsvH,EAAUv2H,OAAQF,EAAImH,IAAMnH,EAAG,CAClD,IAAM42H,EAAYN,EAASO,iBAAiB72H,GAC5C22H,EAASv2H,MACP02H,WAAYL,EAAUz2H,GACtB+2H,iBAAkBT,EAASnnG,cAAcnvB,GACrCqe,EAAW24G,mBAAqB,MACpCC,SAAUC,EAAA,EAAcZ,EAASa,YAAYn3H,IAC7Co3H,cAAed,EAASe,UAAUr3H,GAClCs3H,YACEV,EAAUW,KAAOX,EAAUY,KAC3BZ,EAAUa,KAAOb,EAAUc,QAKjC,IAAM9uH,EAAa4iB,EAAOmsG,gBACpBC,EAAgBv3H,OAAO0iD,KAAKn6C,GAE5BlG,GACJmzH,QAAS7vH,KAAK6xH,YAAYrsG,GAC1B5iB,WAAYgvH,EACZE,gBAAiBlvH,EACjBmtH,YAAavqG,EAAOusG,YACpBtvH,MAAO+iB,EAAOmH,WACdgkG,SAAUA,EACVltH,UAAW+hB,EAAOwsG,eAClB/2G,QAASjb,KAAKgwH,uBAAuBvtH,GACrCwvH,gBAAiBzsG,EAAO0sG,qBACxBn5G,MAAOyM,EAAO9M,WACdrb,KAAM,OACN6sH,QAAS1kG,EAAO2sG,cAGlB7rD,EAAIlsE,KAAKsC,IASXoxH,EAAQxzH,UAAU+1H,oBAAsB,SAAS/pD,EAAK7jE,GACpD,IAAM+iB,EAAS/iB,EAAM+mB,YAErBsf,EAAA,EAAY1d,iBAAiB3oB,EAAOu3E,EAAA,GACpClxC,EAAA,EAAY1d,iBAAiB5F,EAAQivD,EAAA,GAErCz0E,KAAKwvH,gBACHlpD,EAAK7jE,EAAO+iB,EAAO4sG,UAAU,GAAI5sG,EAAOiE,cAU5CqkG,EAAQxzH,UAAUu3H,YAAc,SAASrsG,GACvC,IAAMszF,EAAOtzF,EAAO4sG,UAEpB,OADAtpF,EAAA,EAAYxlC,OAAOw1G,EAAK5+G,OAAS,GAC1B4zH,EAAQgC,gBAAgBhX,EAAK,KAStCgV,EAAQxzH,UAAU01H,uBAAyB,SAASvtH,GAClD,YAAsCvC,IAAlCuC,EAAMpG,IAAI,oBACLoG,EAAMpG,IAAI,oBAEZoG,EAAMklB,cAUfmmG,EAAQxzH,UAAU+3H,aAAe,SAASC,EAAWpE,GACnD,IAAM1gH,EAAS8kH,EAAU9kH,QAAU,MAC7BjK,EAASvD,KAAKytC,KAAd,WAA6BjgC,EAC7B2gH,GACJ7sE,SACEC,eAAgB,oCAKpB,OAFA9X,EAAA,EAAa0kF,OACQjuH,IAAnBguH,EAA+BA,MAC1BluH,KAAKK,OAAOghD,KAAK99C,EAAK+uH,EAAWnE,IAW1CL,EAAQxzH,UAAUi4H,UAAY,SAAStE,EAAKC,GAC1C,IAAMC,OAAgCjuH,IAAnBguH,EAA+BA,KAE5C3qH,EAASvD,KAAKytC,KAAd,WAA6BwgF,EAA7B,QACN,OAAOjuH,KAAKK,OAAOhE,IAAIkH,EAAK4qH,IAU9BL,EAAQxzH,UAAUk4H,aAAe,SAASvE,GACxC,OAAUjuH,KAAKytC,KAAf,WAA8BwgF,GAShCH,EAAQxzH,UAAUm4H,gBAAkB,SAASvE,GAC3C,IAAMC,OACejuH,IAAnBguH,EAA+BA,GAC7BhnH,iBAAiB,GAEf3D,EAASvD,KAAKytC,KAAd,qBACN,OAAOztC,KAAKK,OAAOhE,IAAIkH,EAAK4qH,KAa9BL,EAAQ4E,0BAA4B,SAAShzH,EAAOI,EAAgBD,GAClE,gBAIW0D,GACP,OAAO,IAAIuqH,EAAQvqH,EAAK7D,EAAOI,EAAgBD,4DAQrDiuH,EAAQpyH,OAASoM,QAAQpM,OAAO,aAC9By2C,EAAA,EAAmBz2C,OAAOK,QAEbgM,QAAQ,mBAAoB+lH,GAC3CA,EAAQpyH,OAAOumD,QAAQ,kBAAmB6rE,EAAQ4E,2BAGnCp1H,EAAA,6EC3eTq1H,EAAU7qH,QAAQpM,OAAO,0BAC7Bk3H,EAAA,EAA6B72H,KAC7BgwC,EAAA,EAAsBrwC,OAAOK,OAI/B42H,EAAQ57E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,oCAAqC57C,EAAQ,SAmBlEs3H,EAAQzkE,WAAa,WACnB,OACE19B,WAAY,sCACZkiB,OACEn6B,QAAW,2BAEb++B,kBAAkB,EAClBC,YAAa,sCAKjBo7E,EAAQ5/E,UAAU,kBAChB4/E,EAAQzkE,YAYVykE,EAAQn7E,YAAc,SAASnqB,EAAQ8a,GAAmB,IAAA9lC,EAAArC,KAMxDA,KAAKuY,QAMLvY,KAAKmmC,OAAS9Y,EAMdrtB,KAAKiqG,eAAiB9hE,EAMtBnoC,KAAK4Z,WAAQ1Z,EAMbF,KAAKuF,WAAQrF,EAMbF,KAAK8e,aAAU5e,EAEfmtB,EAAOO,OACL,kBAAMvrB,EAAKuX,OACX5Z,KAAK6yH,gBAAgB71H,KAAKgD,OAO5BA,KAAK6+D,wBAML7+D,KAAK3C,KAELgwB,EAAOO,OACL,kBAAMvrB,EAAKkW,SACXvY,KAAK8yH,kBAAkB91H,KAAKgD,QAzDhC2yH,EAAQn7E,mDAqERm7E,EAAQn7E,YAAYl9C,UAAUw4H,kBAAoB,SAChDl0E,EAAY2oD,GAEZ,IAAMxqD,EAAO/8C,KAAK6+D,qBAWlB,GATI0oC,IACFxqD,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EACd8F,KAAK3C,UAAO6C,EACZF,KAAK4Z,WAAQ1Z,EACbF,KAAK8e,aAAU5e,EACfF,KAAKuF,WAAQrF,GAGX0+C,EAAY,EAEZwlD,EAAA,EAA4BpmG,MAC5BomG,EAAA,EAA4BnmG,MAC5BmmG,EAAA,EAA4B/lG,KAC5B+lG,EAAA,EAA4B9lG,WAC5B8lG,EAAA,EAA4B7lG,QAC5B6lG,EAAA,EAA4B3lG,aAC5B2lG,EAAA,EAA4B1lG,KAC5B0lG,EAAA,EAA4BzlG,QAC5BqE,QAAQ,SAAS+vH,GACjBh2E,EAAK3iD,KACHk1C,EAAA,EACEsP,EADF,UAEYm0E,EACV/yH,KAAK84C,qBACL94C,QAGHA,MAEH,IAAMwb,EAAWojC,EAAWtiC,cAC5BwsB,EAAA,EAAYxlC,OAAOkY,EAAU,8BAE7BuhC,EAAK3iD,KACHk1C,EAAA,EACE9zB,EACA,SACAxb,KAAKkrB,sBACLlrB,OAIJA,KAAK3C,KAAO2C,KAAKiqG,eAAejxF,QAAQ4lC,GACxC5+C,KAAK4Z,MAAQ5Z,KAAKiqG,eAAe1sF,iBAAiBqhC,GAClD5+C,KAAK8e,QAAU9e,KAAKiqG,eAAehwF,WAAW2kC,KASlD+zE,EAAQn7E,YAAYl9C,UAAUu4H,gBAAkB,SAC9CG,GACIhzH,KAAKuY,SAAWy6G,IACGhzH,KAAKuY,QAAQlc,IAAI+nG,EAAA,EAA4BnmG,SAC7C+0H,GACnBhzH,KAAKuY,QAAQ7V,IAAI0hG,EAAA,EAA4BnmG,MAAO+0H,KAW1DL,EAAQn7E,YAAYl9C,UAAU24H,YAAc,SAAS12H,GACnD,OAAOusC,EAAA,EAAY/tB,aAAa/a,KAAKkzH,gBAAgB9uB,EAAA,EAA4BpmG,MAAOzB,KAS1Fo2H,EAAQn7E,YAAYl9C,UAAU64H,WAAa,SAAS52H,GAClD,OAAOusC,EAAA,EAAYtrB,aAAaxd,KAAKkzH,gBAAgB9uB,EAAA,EAA4B/lG,KAAM9B,KASzFo2H,EAAQn7E,YAAYl9C,UAAU84H,gBAAkB,SAAS72H,GACvD,OAAOusC,EAAA,EAAYrrB,cAAczd,KAAKkzH,gBAAgB9uB,EAAA,EAA4B9lG,WAAY/B,KAQhGo2H,EAAQn7E,YAAYl9C,UAAU+4H,cAAgB,SAAS92H,GACrD,OAAOusC,EAAA,EAAY/tB,aAAa/a,KAAKkzH,gBAAgB9uB,EAAA,EAA4B7lG,QAAShC,KAU5Fo2H,EAAQn7E,YAAYl9C,UAAUg5H,kBAAoB,SAAS/2H,GACzD,OAAOusC,EAAA,EAAYrrB,cAAczd,KAAKkzH,gBAAgB9uB,EAAA,EAA4B3lG,aAAclC,KASlGo2H,EAAQn7E,YAAYl9C,UAAUi5H,WAAa,SAASh3H,GAClD,OAAOusC,EAAA,EAAY/tB,aAAa/a,KAAKkzH,gBAAgB9uB,EAAA,EAA4B1lG,KAAMnC,KASzFo2H,EAAQn7E,YAAYl9C,UAAUk5H,aAAe,SAASj3H,GACpD,OAAOusC,EAAA,EAAY/tB,aAAa/a,KAAKkzH,gBAAgB9uB,EAAA,EAA4BzlG,OAAQpC,KAW3Fo2H,EAAQn7E,YAAYl9C,UAAU44H,gBAAkB,SAAStiH,EAAKrU,GAI5D,YAHc2D,IAAV3D,GACFyD,KAAKuY,QAAQ7V,IAAIkO,EAAKrU,GAEqByD,KAAKuY,QAAQlc,IAAIuU,IAOhE+hH,EAAQn7E,YAAYl9C,UAAUw+C,qBAAuB,WACnD,IAAMvgC,EAAUvY,KAAKuY,QAEhBA,GAILvY,KAAKiqG,eAAe3xF,SAASC,GAAS,IAOxCo6G,EAAQn7E,YAAYl9C,UAAU4wB,sBAAwB,WACpD4d,EAAA,EAAYxlC,OAAOtD,KAAKuY,SACxBvY,KAAK8e,QAAU9e,KAAKiqG,eAAehwF,WAAWja,KAAKuY,SAE/BvY,KAAKiqG,eAAetwF,uBAAuB3Z,KAAKuY,UAElEvY,KAAK84C,uBAGP94C,KAAKmmC,OAAOyN,UAId++E,EAAQniG,WAAW,4BACjBmiG,EAAQn7E,aAGK,IAAAi8E,EAAA,kJCzRTC,UAAU5rH,QAAQpM,OAAO,2BAC7B+3H,EAAgC13H,KAChC43H,EAAA,EAAmC53H,KACnC2/F,EAAA,EAAqB3/F,KACrB2oE,EAAA,EAAkB3oE,KAClBgwC,EAAA,EAAsBrwC,OAAOK,KAC7BiiF,EAAA,EAAwBtiF,OAAOK,QAIjC23H,EAAQ38E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoC57C,EAAQ,SAsBjEq4H,EAAQx8E,WAAa,WACnB,OACE1mB,WAAY,qCACZkiB,OACEthC,OAAU,wBACVxM,IAAO,qBACP8U,YAAe,+BAEjB49B,kBAAkB,EAClBC,YAAa,qCAKjBm8E,EAAQ3gF,UAAU,iBAChB2gF,EAAQx8E,YAiBVw8E,EAAQl8E,YAAc,SAASnqB,EAAQ+I,EAAUt2B,EAC/CqoC,EAAmB6hE,EAAclyD,GAAqB,IAAAz1C,EAAArC,KAMtDA,KAAK4E,IAML5E,KAAKoR,YAEelR,IAAhBF,KAAKoR,SACPpR,KAAKoR,QAAS,GAOhBpR,KAAKo/E,YAAa,EAMlBp/E,KAAKq/E,iBAAmB,IAAIC,EAAA,EAAqBt/E,KAAM,cAMvDA,KAAK44C,iBAAkB,EAMvB54C,KAAK4zH,kBAAoB,KAMzB5zH,KAAK64C,sBAAwB,IAAIymC,EAAA,EAAqBt/E,KAAM,mBAM5DA,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAKiqG,eAAiB9hE,EAMtBnoC,KAAK2d,SAAWqsF,EAMhBhqG,KAAKq4C,qBAAuBP,EAM5B93C,KAAK6zH,gBAAkB,KAMvB7zH,KAAKw/E,iBAAmB,IAAIrzC,EAAA,EAO5BnsC,KAAKg5C,cAAgB,IAAI7M,EAAA,EAMzBnsC,KAAKi5C,QAAU,IAAIwmC,EAAA,GACjB9hE,SAAU3d,KAAKw/E,iBACfzmE,MAAOovB,EAAkBvvB,gBAAe,KAE1C5Y,KAAKg5C,cAAc5+C,KAAK4F,KAAKi5C,SAM7Bj5C,KAAKm5C,MAAQ,KAMbn5C,KAAKk5C,mBAAqB,IAAIomC,EAAA,EAAqBt/E,KAAKi5C,QAAS,UAMjEj5C,KAAKs5C,WAAa,IAAIumC,EAAA,GACpBliE,SAAU3d,KAAKw/E,iBACfzmE,MAAO,IAAI4mE,EAAA,GACTvlE,KAAM,IAAI0tB,EAAA,GACR1tB,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIklE,EAAA,GACRhmE,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKs5C,YAM7Bt5C,KAAKu5C,QAAU,IAAImmC,EAAA,GACjB/hE,SAAU3d,KAAKw/E,iBACfzmE,MAAO,IAAI4mE,EAAA,GACTvlE,KAAM,IAAI0tB,EAAA,GACR1tB,KAAM,IACNyE,KAAM,0BACNnE,KAAM,IAAIklE,EAAA,GACRhmE,MAAO,kBAKf5Z,KAAKg5C,cAAc5+C,KAAK4F,KAAKu5C,SAE7Bv5C,KAAKs6C,0BAMLt6C,KAAKw5C,mBAAqB,IAAI8lC,EAAA,EAAqBt/E,KAAKu5C,QAAS,UAMjEv5C,KAAKy5C,sBAAwB,IAAI6lC,EAAA,EAAqBt/E,KAAKs5C,WAAY,UAMvEt5C,KAAKqnC,iBASLrnC,KAAK8zH,0BAA2B,EAEhCzmG,EAAOO,OACL,kBAAMvrB,EAAK+O,QACXpR,KAAK8/E,oBAAoB9iF,KAAKgD,OAGhCqtB,EAAOO,OACL,kBAAMvrB,EAAK+8E,YACX,SAAChuE,GACKA,IACF/O,EAAKwxH,gBAAkB,QAK7BxmG,EAAOO,OACL,kBAAMvrB,EAAKwxH,iBACX,SAACj1E,EAAY2oD,GACXllG,EAAKm9E,iBAAiB9yD,QAClB66E,IACFllG,EAAK4nG,eAAe3xF,SAASivF,GAC7BllG,EAAKq8C,2BAEHE,GACFv8C,EAAK4nG,eAAe3xF,SAASsmC,GAAY,GACzCv8C,EAAKm9E,iBAAiBplF,KAAKwkD,GAC3Bv8C,EAAKm8C,wBACDn8C,EAAKyxH,2BACPzxH,EAAK4nG,eAAe9qF,gBAAgBy/B,EAAYv8C,EAAKuC,KACrDvC,EAAKyxH,0BAA2B,IAEzBzxH,EAAK82C,QACd92C,EAAKuC,IAAIwwB,cAAc/yB,EAAK82C,OAC5B92C,EAAK82C,MAAQ,QAKnB9rB,EAAOO,OACL,kBAAMvrB,EAAKu2C,iBACX54C,KAAK06C,6BAA6B19C,KAAKgD,OAOzCA,KAAK+zH,aAAe3vB,EAAA,EAA4B/lG,KAKhD2B,KAAK02B,gBAAkB52B,GA5OzB4zH,EAAQl8E,oHAoPRk8E,EAAQl8E,YAAYl9C,UAAUggD,wBAA0B,WACtDt6C,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1BA,EAAYvlB,WAAU,GACtBorE,EAAA,EAAiB7lD,YAAYA,MASjCw4F,EAAQl8E,YAAYl9C,UAAUkkD,sBAAwB,WAAW,IAAAz4C,EAAA/F,KAC/DA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Bn1B,EAAKnB,IAAI0vB,eAAe4G,MAS5Bw4F,EAAQl8E,YAAYl9C,UAAUokD,wBAA0B,WAAW,IAAA73C,EAAA7G,KACjEA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Br0B,EAAKjC,IAAIyvB,kBAAkB6G,MAW/Bw4F,EAAQl8E,YAAYl9C,UAAUwlF,oBAAsB,SAAS1uE,GAE3D,IAAM2rC,EAAO/8C,KAAKqnC,cACZ2sF,GAAW,QAAS9hF,EAAA,EAAclyC,OAAOoH,KAAK,KAC9C61C,GAAY,SAAU/K,EAAA,EAAclyC,OAAOoH,KAAK,KAChD81C,EAAUl9C,KAAKq4C,qBAEjBjnC,GAGF2rC,EAAK3iD,KACHk1C,EAAA,EAAgBtvC,KAAK2d,SAAU,MAAO3d,KAAKq/D,mBAAoBr/D,MAC/DsvC,EAAA,EAAgBtvC,KAAK2d,SAAU,SAAU3d,KAAKs/D,sBAAuBt/D,OAGvE+8C,EAAK3iD,KAAKk1C,EAAA,EAAgBtvC,KAAKs5C,WAC7B,eACAt5C,KAAKo9C,oBAAqBp9C,OAE5B+8C,EAAK3iD,KAAKk1C,EAAA,EAAgBtvC,KAAKu5C,QAAS,YAAav5C,KAAKq9C,iBAAkBr9C,OAE5Ek9C,EAAQ9W,aAAa4tF,EAASh0H,KAAKq/E,kBAAkB,GACrDniC,EAAQ9W,aAAa4tF,EAASh0H,KAAK64C,uBAAuB,GAE1DqE,EAAQ9W,aAAa6W,EAAUj9C,KAAKq/E,kBAAkB,GACtDniC,EAAQ9W,aAAa6W,EAAUj9C,KAAKk5C,oBAAoB,GACxDgE,EAAQ9W,aAAa6W,EAAUj9C,KAAKy5C,uBAAuB,GAC3DyD,EAAQ9W,aAAa6W,EAAUj9C,KAAKw5C,oBAAoB,GAExDx5C,KAAK44C,iBAAkB,EACvB54C,KAAKi5C,QAAQtjC,WAAU,KAIvBonC,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EAEdgjD,EAAQnW,eAAeitF,EAASh0H,KAAKq/E,kBACrCniC,EAAQnW,eAAeitF,EAASh0H,KAAK64C,uBAErCqE,EAAQnW,eAAekW,EAAUj9C,KAAKq/E,kBACtCniC,EAAQnW,eAAekW,EAAUj9C,KAAKk5C,oBACtCgE,EAAQnW,eAAekW,EAAUj9C,KAAKy5C,uBACtCyD,EAAQnW,eAAekW,EAAUj9C,KAAKw5C,oBAEtCx5C,KAAKo/E,YAAa,EAClBp/E,KAAKi5C,QAAQtjC,WAAU,GACvB3V,KAAK44C,iBAAkB,EACvB54C,KAAK6zH,gBAAkB,KAEnB7zH,KAAKm5C,QACPn5C,KAAK4E,IAAIwwB,cAAcp1B,KAAKm5C,OAC5Bn5C,KAAKm5C,MAAQ,QAcnBu6E,EAAQl8E,YAAYl9C,UAAU25H,sBAAwB,SAAS17G,GAC7DvY,KAAK8zH,0BAA2B,EAChC9zH,KAAK6zH,gBAAkBt7G,EACvBvY,KAAKo/E,YAAa,GAQpBs0C,EAAQl8E,YAAYl9C,UAAU45H,iBAAmB,WAC/C,OAAOl0H,KAAK2d,SAASwJ,YAOvBusG,EAAQl8E,YAAYl9C,UAAU65H,cAAgB,WAC5C,IACMzwG,EADiB1jB,KAAK02B,gBACDpxB,UACzB,kDACEg3C,QAAQ54B,IACV1jB,KAAK2d,SAAS+O,SASlBgnG,EAAQl8E,YAAYl9C,UAAUmyB,cAAgB,SAASlU,GACrD,IACMmL,EADiB1jB,KAAK02B,gBACDpxB,UACzB,sDACEg3C,QAAQ54B,IACV1jB,KAAK2d,SAASiyB,OAAOr3B,IASzBm7G,EAAQl8E,YAAYl9C,UAAU+kE,mBAAqB,SAASl0C,GAAK,IAAAwN,EAAA34B,KAE/DA,KAAKg4C,SAAS,WACZrf,EAAKk7F,gBAA6C1oG,EAAIvB,QACtD+O,EAAKymD,YAAa,EAClBzmD,EAAKwN,OAAOyN,YAShB8/E,EAAQl8E,YAAYl9C,UAAUglE,sBAAwB,SAASn0C,GAC7DnrB,KAAK6zH,gBAAkB,MASzBH,EAAQl8E,YAAYl9C,UAAUogD,6BAA+B,SAC3DtpC,GAEA,IAAMksC,EAASt9C,KAAK4E,IAAI24C,cACxBzU,EAAA,EAAY0U,cAAcF,GAEtBlsC,GACFk+B,EAAA,EAAgBtvC,KAAK4E,IAAK,QACxB5E,KAAKy9C,gBAAiBz9C,MAExBsvC,EAAA,EAAgBgO,EAAQ,cACtBt9C,KAAK09C,sBAAuB19C,MAE9BsvC,EAAA,EAAgBgO,EAAQ,aACtBt9C,KAAKo0H,qBAAsBp0H,MAE7BsvC,EAAA,EAAgBgO,EAAQ,YACtBt9C,KAAKq0H,mBAAoBr0H,MAE3BsvC,EAAA,EAAgBgO,EAAQ,WACtBt9C,KAAKq0H,mBAAoBr0H,QAG3BsvC,EAAA,EAAkBtvC,KAAK4E,IAAK,QAC1B5E,KAAKy9C,gBAAiBz9C,MAExBsvC,EAAA,EAAkBgO,EAAQ,cACxBt9C,KAAK09C,sBAAuB19C,MAE9BsvC,EAAA,EAAkBgO,EAAQ,aACxBt9C,KAAKo0H,qBAAsBp0H,MAE7BsvC,EAAA,EAAkBgO,EAAQ,YACxBt9C,KAAKq0H,mBAAoBr0H,MAE3BsvC,EAAA,EAAkBgO,EAAQ,WACxBt9C,KAAKq0H,mBAAoBr0H,QAS/B0zH,EAAQl8E,YAAYl9C,UAAUmjD,gBAAkB,SAAStyB,GAAK,IAAA0N,EAAA74B,KAEtD29C,EAAQxyB,EAAIwyB,MAEdplC,EAAUvY,KAAK4E,IAAIg5C,sBACrBD,EACA,SAACplC,GACC,IAAIslC,GAAM,EAIV,OAHI96C,EAAA,EAAiB81B,EAAKlb,SAASwJ,WAAY5O,KAC7CslC,EAAMtlC,GAEDslC,IAGPC,aAAc,KAIlBvlC,EAAUA,GAAoB,QAGdvY,KAAK6zH,kBAIrB7zH,KAAK6zH,gBAAkBt7G,EAEvBvY,KAAKmmC,OAAOyN,WAQd8/E,EAAQl8E,YAAYl9C,UAAU85H,qBAAuB,SAASjpG,GAAK,IAAAkO,EAAAr5B,KACjEA,KAAK4zH,kBAAoBU,WAAW,WAClCj7F,EAAKqkB,sBAAsBvyB,IAC1B,MAQLuoG,EAAQl8E,YAAYl9C,UAAU+5H,mBAAqB,SAASlpG,GAC1DopG,aAAav0H,KAAK4zH,oBAQpBF,EAAQl8E,YAAYl9C,UAAUojD,sBAAwB,SAASvyB,GAAK,IAAA2O,EAAA95B,KAC5DF,EAAiBE,KAAK02B,gBACtBinB,EAAQ39C,KAAK4E,IAAIs5C,cAAc/yB,GAC/B8I,EAAaj0B,KAAK4E,IAAIu5C,uBAAuBR,GAE/CplC,EAAUvY,KAAK4E,IAAIg5C,sBACrBD,EACA,SAACplC,GACC,IAAIslC,GAAM,EAIV,OAHI96C,EAAA,EAAiB+2B,EAAKnc,SAASwJ,WAAY5O,KAC7CslC,EAAMtlC,GAEDslC,IAGPC,aAAc,IAOlB,GAHAvlC,EAAUA,GAAoB,KAGjB,CACX,IAAI6gC,KAEE/7C,EAAO2C,KAAKiqG,eAAejxF,QAAQT,GACrClb,GAAQ2iF,EAAA,EAAiBziF,QACzBF,GAAQ2iF,EAAA,EAAiBxiF,aACzBH,GAAQ2iF,EAAA,EAAiBniF,SACzBR,GAAQ2iF,EAAA,EAAiBliF,YAC3Bs7C,EAAUA,EAAQp8B,SAChBq8B,IAAK,eACL9zC,MAAOzF,EAAewF,UAAU,QAChCvJ,KAAM,SAENs9C,IAAK,qBACL9zC,MAAOzF,EAAewF,UAAU,UAChCvJ,KAAM,aAIVq9C,EAAUA,EAAQp8B,SAChBq8B,IAAK,gBACL9zC,MAAOzF,EAAewF,UAAU,UAChCvJ,KAAM,YAGRiE,KAAKm5C,MAAQ,IAAIioC,EAAA,GACfhoC,YAGF9J,EAAA,EAAgBtvC,KAAKm5C,MAAO,cAC1Bn5C,KAAKm9C,uBAAwBn9C,MAC/BA,KAAK4E,IAAIuwB,WAAWn1B,KAAKm5C,OAEzBn5C,KAAKm5C,MAAMiF,KAAKnqB,GAEhB9I,EAAIkzB,iBACJlzB,EAAImzB,kBAIF/lC,IAAYvY,KAAK6zH,kBAIrB7zH,KAAKi5C,QAAQtjC,WAAU,GAEvB3V,KAAK6zH,gBAAkBt7G,EAEvBvY,KAAKmmC,OAAOyN,WAQd8/E,EAAQl8E,YAAYl9C,UAAU6iD,uBAAyB,SAAShyB,GAC9D,IAAM6zB,EAAS7zB,EAAIxI,OAAOq8B,OAE1B,OAAQA,GACN,IAAK,SACHlW,EAAA,EAAYxlC,OACVtD,KAAK6zH,gBAAiB,qCACxB7zH,KAAKysB,cAAczsB,KAAK6zH,iBACxB7zH,KAAKmmC,OAAOyN,SACZ,MACF,IAAK,OACH5zC,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,SACZ,MACF,IAAK,SACH5zC,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,SACZ,MACF,QAEE9vC,QAAQ48B,IAAR,oBAAgCse,KAUtC00E,EAAQl8E,YAAYl9C,UAAU8iD,oBAAsB,SAASjyB,GAC3DnrB,KAAKs5C,WAAW3jC,WAAU,GAC1B3V,KAAKmmC,OAAOyN,UAQd8/E,EAAQl8E,YAAYl9C,UAAU+iD,iBAAmB,SAASlyB,GACxDnrB,KAAKu5C,QAAQ5jC,WAAU,GACvB3V,KAAKmmC,OAAOyN,UAId8/E,EAAQljG,WAAW,2BACjBkjG,EAAQl8E,aAGK,IAAAg9E,EAAA,ECvuBTjT,EAAUz5G,QAAQpM,OAAO,oBAC7B84H,EAA+Bz4H,KAC/B03H,EAAgC13H,OAInBuB,EAAA,sECAf,IAAMm3H,EAAU3sH,QAAQpM,OAAO,iCAC7Bg/E,EAAA,EAAwCh/E,OAAOK,KAC/Co/E,EAAA,EAAiBz/E,OAAOK,OA2B1B,SAAS24H,EAAyCnnG,EAAQmnG,GACxD,OAAOA,EAAyCnnG,GAxBlDknG,EAAQ19E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6CAA8C57C,EAAQ,SAI3Eo5H,EAAQl4H,MAAM,2CAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,yCACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,+GAkBNk9E,EAAQj9E,YAAR,WAYE,SAAAmtB,EAAYgwD,gGAA+B1sH,CAAAjI,KAAA2kE,GASzC3kE,KAAK0mB,aAOL1mB,KAAKyC,MAQLzC,KAAKuD,IASLvD,KAAKmzG,+BAAiCwhB,EA7C1C,OAAAhwD,EAAA9nC,SAAA,iCAAA8nC,EAAArqE,UAoDEs6H,uBApDF,SAoDyBnyH,GACrBzC,KAAKmzG,+BAA+B1iE,wCAClChuC,EACAzC,KAAK0mB,aACL1mB,KAAKuD,MAxDXohE,EAAArqE,UAiEEu6H,OAjEF,SAiESpyH,GACL,OAAOyvC,EAAA,EAAczvC,IAlEzBkiE,EAAA,GAuEA8vD,EAAQ/vD,UAAU,iCAChBH,UACE79C,aAAgB,IAChBjkB,MAAS,IACTc,IAAO,KAETitB,WAAYikG,EAAQj9E,YACpBD,YAAam9E,IAIA,IAAAI,EAAA,EC1Hf,IAAMC,EAAUjtH,QAAQpM,OAAO,8BAC7Bg/E,EAAA,EAAwCh/E,OAAOK,KAC/Co/E,EAAA,EAAiBz/E,OAAOK,OA2B1B,SAASi5H,EAAqCznG,EAAQynG,GACpD,OAAOA,EAAqCznG,GAxB9CwnG,EAAQh+E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,+CAAgD57C,EAAQ,SAI7E05H,EAAQx4H,MAAM,uCAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,qCACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,6GAkBNw9E,EAAQv9E,YAAR,WAYE,SAAAmtB,EAAYgwD,gGAA+BM,CAAAj1H,KAAA2kE,GASzC3kE,KAAK0mB,aAOL1mB,KAAKsE,OAQLtE,KAAKuD,IASLvD,KAAKmzG,+BAAiCwhB,EA7C1C,OAAAhwD,EAAA9nC,SAAA,iCAAA8nC,EAAArqE,UAoDEs6H,uBApDF,SAoDyBnyH,GACLzC,KAAKmzG,+BACbtiE,yCACNpuC,EACAzC,KAAK0mB,aACL1mB,KAAKuD,MAzDXohE,EAAArqE,UAkEEu6H,OAlEF,SAkESpyH,GACL,OAAOyvC,EAAA,EAAczvC,IAnEzBkiE,EAAA,GAwEAowD,EAAQrwD,UAAU,8BAChBH,UACE79C,aAAgB,IAChBpiB,OAAU,IACVf,IAAO,KAETitB,WAAYukG,EAAQv9E,YACpBD,YAAay9E,IAIA,IAAAE,EAAA,+QCnHf,IAAMC,EAAUrtH,QAAQpM,OAAO,uBAC7Bg/E,EAAA,EAAwCh/E,OAAOK,KAC/C+4H,EAAyC/4H,KACzCm5H,EAA0Cn5H,KAC1CugE,EAAA,EAAiB5gE,OAAOK,OA2B1B,SAASq5H,EAA+B7nG,EAAQ6nG,GAC9C,OAAOA,EAA+B7nG,GAxBxC4nG,EAAQp+E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,uCAAwC57C,EAAQ,SAIrE85H,EAAQ54H,MAAM,iCAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,+BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,+FAkBN49E,EAAQ39E,YAAR,WAkBE,SAAAmtB,EAAYltB,EAAUpgC,EAAS1X,EAAW0tB,EAAQ+I,EAChDu+F,EAA+B34F,GAAa,IAAA35B,EAAArC,kGAAAq1H,CAAAr1H,KAAA2kE,GAQ5C3kE,KAAK4E,IASL5E,KAAK+3C,SAAWN,EAMhBz3C,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAKmzG,+BAAiCwhB,EAMtC30H,KAAKo8B,aAAeJ,EASpBh8B,KAAKixC,KAMLjxC,KAAKuD,IASLvD,KAAKs1H,WAAa79E,EAASgF,KAAK,oBAMhCz8C,KAAKu1H,UAAW,EAMhBv1H,KAAKw1H,iBAAmB,KAMxBx1H,KAAKu/B,KAAO41F,EAAQ39E,YAAYi+E,KAAKC,OAMrC11H,KAAK21H,OACHR,EAAQ39E,YAAYi+E,KAAKG,MACzBT,EAAQ39E,YAAYi+E,KAAKC,QAO3B11H,KAAKo9B,SAAU,EAMfp9B,KAAK0X,kBACHL,EAAQ,kBAOVrX,KAAK61H,gBAAkB,KAOvB71H,KAAK81H,iBAAmB,KAMxB91H,KAAK+1H,eAEL,IAAMC,EAAUr2H,EAAUY,IAAI,yBAE1BZ,EAAUtD,IAAI,8BACZ6D,EAEN,GAAI81H,EAAS,CACX,IAAMC,EAAaD,EAAQpxH,IAAI,SAAAT,GAAA,OAAUA,EAAA,MACzCnE,KAAK+1H,eAAiB,IAAIG,YAYxBC,eAAgB,SAACC,GACfttF,EAAA,EAAYtrB,aAAa44G,GACzB,IAAMC,EAA0BH,WAAWI,WAAWC,WACpDH,GACFttF,EAAA,EAAYxlC,OAAO+yH,GACnB,IAAMG,KACN7pH,EAAqC0pH,EAArCzpH,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA8D,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAzS,OAAA,MAAAgT,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAxQ,MAE5D,IAF4D,IAAnDk6H,EAAmDvpH,EACxDlT,EAAI,EACAA,EAAI,EAAKy8H,EAAuBv8H,QACtCs8H,EAAgBp8H,KACdq8H,EAAuBptD,OACrBrvE,EACAy8H,EAAuBv8H,SAG3BF,IAGJ,OAAOw8H,GAETE,eAAgBR,WAAWI,WAAWC,WACtCI,UAAU,EACVC,MAAOX,IAKXj2H,KAAKs1H,WAAW35F,GAAG,SAAU,WAC3Bt5B,EAAK4uC,KAAO5uC,EAAKizH,WAAW,GAAG16B,OAASv4F,EAAKizH,WAAW,GAAG16B,MAAM,GAC/Dv4F,EAAKizH,WAAW,GAAG16B,MAAM,QAAK16F,EAChCmC,EAAK8jC,OAAOyN,WAnMlB,OAAA+wB,EAAA9nC,SAAA,oGAAA8nC,EAAArqE,UA0MEw/C,QA1MF,WA0MY,IAAA/zC,EAAA/F,KACRA,KAAKmzG,+BAA+BvuG,IAAM5E,KAAK4E,IAG3C5E,KAAK+1H,gBAGP/1H,KAAKg4C,SAAS,WACZlP,EAAA,EAAYxlC,OAAOyC,EAAKgwH,gBACxB,IAAMc,EAAY9wH,EAAKgyC,SAAS0E,KAAK,mBAC/Bq6E,EAAc/wH,EAAKgyC,SAAS0E,KAAK,2CACvCo6E,EAAUE,WACRC,MAAM,EACNC,WAAW,EACXC,UAAW,IAEXn7H,KAAM,MACNypB,OAAQzf,EAAKgwH,eAAeoB,cAC3Bn6H,KAAK,mBAAoB,SAACo6H,EAAIC,GAC/BtxH,EAAKiyC,SAAS,WACZjyC,EAAKxC,IAAM8zH,EACXtxH,EAAKogC,OAAOyN,SACZkjF,EAAYQ,eAhOxB3yD,EAAArqE,UA2OEi9H,OA3OF,WA4OIv3H,KAAKu1H,UAAW,EAChBv1H,KAAK+3C,SAAS0E,KAAK,+BAA+BC,SA7OtDioB,EAAArqE,UAoPEk9H,QApPF,WAoPY,IAAA3wH,EAAA7G,KACFuD,EAAMulC,EAAA,EAAYtrB,aAAaxd,KAAKuD,KACpC21G,EAAc9qE,EAAA,EAAkBx8B,sBAAsBrO,GAE5DvD,KAAKy3H,gBACDve,IAAgB9qE,EAAA,EAAkBpkC,KAAKnC,IACzC7H,KAAKo8B,aAAay5B,mBAAmBtyD,GAAKI,KACxC,SAACkyH,GACChvH,EAAKgvH,gBAAkBA,EACvBhvH,EAAK6wH,gBAEP,WAEE7wH,EAAK6wH,cAAa,KAGbxe,IAAgB9qE,EAAA,EAAkBpkC,KAAKpC,KAChD5H,KAAKo8B,aAAa85B,oBAAoB3yD,GAAKI,KACzC,SAACmyH,GACCjvH,EAAKivH,iBAAmBA,EACxBjvH,EAAK6wH,gBAEP,WAEE7wH,EAAK6wH,cAAa,KAKtB13H,KAAKg4C,SAAS,WACZnxC,EAAK6wH,cAAa,MAlR1B/yD,EAAArqE,UA2REgiH,KA3RF,WA2RS,IAAA3jF,EAAA34B,KACCixC,EAAOnI,EAAA,EAAYxlC,OAAOtD,KAAKixC,MACrCjxC,KAAKmzG,+BAA+BniE,+BAA+BC,EAAM,SAAC/tB,GACnEA,IACHyV,EAAK48F,UAAW,MA/RxB5wD,EAAArqE,UA0TEm9H,cA1TF,WA2TIz3H,KAAKo9B,SAAU,EACfp9B,KAAKu1H,UAAW,EAGhBv1H,KAAK61H,gBAAkB,KACvB71H,KAAK81H,iBAAmB,MAhU5BnxD,EAAArqE,UAwUEo9H,aAxUF,WAwUqC,IAAA7+F,EAAA74B,KAAtB23H,EAAsBxoH,UAAAjV,OAAA,QAAAgG,IAAAiP,UAAA,IAAAA,UAAA,GACjCnP,KAAKo9B,SAAU,EACXu6F,IACF33H,KAAKu1H,UAAW,EACZv1H,KAAKw1H,kBACPx1H,KAAKg4C,SAASvf,OAAOz4B,KAAKw1H,kBAE5Bx1H,KAAKw1H,iBAAmBx1H,KAAKg4C,SAAS,WACpCnf,EAAK08F,UAAW,EAChB18F,EAAK28F,iBAAmB,MACvB,OAlVT3kH,EAAA8zD,IAAA/zD,IAAA,kBAAAvU,IAAA,WAySI,IAAIu7H,EAAc,GAEZ3mF,EAAOjxC,KAAKixC,KAClB,QAAa/wC,IAAT+wC,EAAoB,CACtB,IAAM4qE,EAAW77G,KAAK0X,kBAAkBu5B,EAAK32B,KAAM,KACnDs9G,EAAiB3mF,EAAKl1C,KAAtB,KAA+B8/G,EAGjC,OAAO+b,MAjTXjzD,EAAA,GA2VAwwD,EAAQ39E,YAAYi+E,MAClBG,MAAO,QACPF,OAAQ,UAIVP,EAAQzwD,UAAU,uBAChBH,UACE3/D,IAAO,KAET4rB,WAAY2kG,EAAQ39E,YACpBD,YAAa69E,IAIA,IAAAyC,EAAA,ECtZTtW,UAAUz5G,QAAQpM,OAAO,mBAC7Bm8H,EAAmC97H,KACnC+4H,EAAyC/4H,KACzCm5H,EAA0Cn5H,QAI7BuB,EAAA,kCCMf,IAAMw6H,EAAU,SAAVr8H,IACJ,OACE+2C,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GAErB,IAAMolF,EAAuBplF,EAAA,WACvBqlF,EACGtlF,EAAM5kB,MAAMiqG,GAEfE,EAAwBtlF,EAAA,mBAIxBzzB,EAFGwzB,EAAM5kB,MAAMmqG,GAEUh7H,QAC/BiiB,EAAKrG,QAAQm/G,GAEbpuG,EAAQmtG,UAARl8H,MAAA+uB,EAAqB1K,GAErB,IAAMg5G,EAAyBvlF,EAAA,oBACzBwlF,EAEGzlF,EAAM5kB,MAAMoqG,GAKfE,EAAqB38H,EAAQ48H,gBACjCF,GAEFvuG,EAAQ+R,GAAG,iBAAkB,WAC3B+W,EAAMkB,OAAO,WACXwkF,EAAmBh6E,WAIvBx0B,EAAQ+R,GAAG,kBAAmB,WAC5B+W,EAAMkB,OAAO,WACXwkF,EAAmBn8E,YAIvBryB,EAAQ+R,GAAG,yBAMT,SAACnZ,EAAO60G,EAAYiB,GAClB5lF,EAAMkB,OAAO,WACXwkF,EAAmBG,aAAa/1G,EAAO60G,EAAYiB,OAIzD1uG,EAAQ+R,GAAG,mBAMT,SAACnZ,EAAO60G,EAAYiB,GAClB5lF,EAAMkB,OAAO,WACXwkF,EAAmBrjD,OAAOvyD,EAAO60G,EAAYiB,OAInD1uG,EAAQ+R,GAAG,yBAMT,SAACnZ,EAAO60G,EAAYiB,GAClB5lF,EAAMkB,OAAO,WACXwkF,EAAmBI,aAAah2G,EAAO60G,EAAYiB,OAIzD1uG,EAAQ+R,GAAG,yBAMT,SAACnZ,EAAO81G,EAAS9pB,GACf97D,EAAMkB,OAAO,WACX,IAAM6kF,EAAQ7uG,EAAQlwB,KAAK,gBAAb,yBACd0+H,EAAmBM,cAAcl2G,EAAOgsF,EAAOiqB,UAgB3DX,EAAQO,gBAAkB,SAAS37H,GA4BjC,YAzBewD,IAAXxD,GAEA0hD,KADmB,aAEnBnC,MAFmB,aAGnBs8E,aAHmB,aAInBG,cAJmB,aAKnB3jD,OALmB,aAMnByjD,aANmB,eAUnBp6E,UAAsBl+C,IAAhBxD,EAAO0hD,KACX1hD,EAAO0hD,KAAO,aAChBnC,WAAwB/7C,IAAjBxD,EAAOu/C,MACZv/C,EAAOu/C,MAAQ,aACjBs8E,kBAAsCr4H,IAAxBxD,EAAO67H,aACnB77H,EAAO67H,aAAe,aACxBG,mBAAwCx4H,IAAzBxD,EAAOg8H,cACpBh8H,EAAOg8H,cAAgB,aACzB3jD,YAA0B70E,IAAlBxD,EAAOq4E,OACbr4E,EAAOq4E,OAAS,aAClByjD,kBAAsCt4H,IAAxBxD,EAAO87H,aACnB97H,EAAO87H,aAAe,gBAU9BV,EAAQp8H,OAASoM,QAAQpM,OAAO,2BAIjBq3C,UAAU,aAAc+kF,GAGxB,IAAAa,EAAA,mBCzJTC,UAAU,SAASr1H,EAAKs1H,EAAYC,EACxCC,EAAoBrX,EAAasX,GACjC,IAAMrP,EAAgB,IAAIC,EAAA,EACpBqP,GACJC,QACE31H,MACA41H,QAFM,SAEE3qB,EAAO4qB,GAEb,OADAA,EAAS71H,IAAM61H,EAAS71H,IAAI6hB,QAAQ,SAAUopF,GACvC4qB,GAETlmG,UANM,SAMImmG,GAER,IAAIC,EACCD,EAQL,YAPmBn5H,IAAf24H,IACFS,GACEj8H,KAAM,oBACNsgB,SAAU27G,EAAkB37G,SAASzY,OAAO2zH,KAIzClP,EAAch4E,aAAa2nF,GAChC56G,kBAAmBo6G,EACnBr6G,eAAgBs6G,MAMtB5C,eAAgB,aAChBO,eAAgBR,WAAWI,WAAWC,YAIlCvuH,EAAUyhC,EAAA,KAAiBi4E,OAC3B6X,EAAgB9vF,EAAA,KAAiBuvF,OAWvC,OATIhxH,EAAQkxH,SAEVzvF,EAAA,EAAa8vF,EAAevxH,EAAQkxH,eAC7BlxH,EAAQkxH,QAGjBzvF,EAAA,EAAawvF,EAAmBjxH,GAChCyhC,EAAA,EAAawvF,EAAkBC,OAAQK,GAEhC,IAAIrD,WAAW+C,MAOxBL,EAAQl9H,OAASoM,QAAQpM,OAAO,yCAEjBa,MACb,oCACAq8H,GA2Ca,IAAAY,EAAA,mCCtGTC,EAAU,SAAS/X,GACvB,IAAM15G,EAAU05G,MAEVgY,EAAmBloD,EAAA,EAAWmoD,EAAA,GAC9B9jB,EAAmB7tG,EAAQ6tG,iBAiC3BojB,GACJC,QACE31H,IAAK,4FACL41H,QAAS,SAAC3qB,EAAO4qB,GASf,OARAA,EAAS71H,IAAM61H,EAAS71H,IAAI6hB,QAAQ,SAAUopF,QACxBtuG,IAAlB8H,EAAQu0B,QACV68F,EAAS71H,KAAT,UAA0ByE,EAAQu0B,YAEZr8B,IAApB8H,EAAQ4xH,UACVR,EAAS71H,KAAT,YAA4ByE,EAAQ4xH,cAGV15H,IAApB8H,EAAQmxH,QACdnxH,EAAQmxH,QAAQ3qB,EAAO4qB,GAAYA,GAEvClmG,UAAW,SAAiDmmG,GA4B1D,OA3BiBA,EAAeQ,QAAQj1H,IAAI,SAA+C7J,GACzF,IAAM43C,EAAQ53C,EAAO43C,MAGfhf,EAAQ,IAAIq4B,EAAA,GAAarZ,EAAMryB,EAAGqyB,EAAM7tC,IAC1Ck8C,EAhDM,SAACA,GACjB,IACMkF,EADQ,kCACMylB,KAAK3qB,GACzB,OAAc,OAAVkF,GAEAhC,WAAWgC,EAAM,IACjBhC,WAAWgC,EAAM,IACjBhC,WAAWgC,EAAM,IACjBhC,WAAWgC,EAAM,KAGZ,KAqCQ4zE,CAAUnnF,EAAMonF,oBACF75H,IAArB21G,IACFliF,EAAMT,UAAUwmG,EAAkB7jB,GACrB,OAAT70D,IACFA,EAAOwwB,EAAA,EAAuBxwB,EAAM04E,EAAkB7jB,KAI1DljE,EAAA,SAAoBhf,EACpBgf,EAAA,KAAgBqO,EAGhB,IAAMz7C,EAAQotC,EAAMptC,MACpBotC,EAAA,cA9Ce,SAAAptC,GAAA,OAASA,EAAM6f,QAAQ,aAAc,IA8C3B40G,CAAez0H,GACxCotC,EAAA,aA7CY,SAACptC,GACnB,IACM2gD,EADQ,iBACMylB,KAAKpmE,GACzB,OAAc,OAAV2gD,EACKA,EAAM,GAEN3gD,EAuCqB00H,CAAY10H,GAEpC,IAAMgT,EAAU,IAAIwzC,EAAA,EAAUpZ,GAG9B,OAFAp6B,EAAQ8iC,MAAM1I,EAAMoG,WAEbxgC,MAQb49G,eAAgB,aAChBO,eAAgBR,WAAWI,WAAWC,YAIlC2D,EAAYzwF,EAAA,KAAiBzhC,EAAQA,aACrCuxH,EAAgB9vF,EAAA,KAAiBzhC,EAAQuxH,mBAW/C,OATIW,EAAUhB,SAEZzvF,EAAA,EAAa8vF,EAAeW,EAAUhB,eAC/BgB,EAAUhB,QAGnBzvF,EAAA,EAAawvF,EAAmBiB,GAChCzwF,EAAA,EAAawvF,EAAkBC,OAAQK,GAEhC,IAAIrD,WAAW+C,KAOxBQ,EAAQ/9H,OAASoM,QAAQpM,OAAO,0CAEjBa,MACb,qCACAk9H,GAyBa,IAAAU,EAAA,ECnJT5Y,EAAUz5G,QAAQpM,OAAO,oBAC7Bi9H,EAA0Bj9H,OAAOK,KACjCy9H,EAAkC99H,OAAOK,KACzCo+H,EAAyCz+H,OAAOK,OAInCuB,EAAA,oMCLT88H,GACJC,SAAAC,EAAA,EACA56G,OAAA46G,EAAA,EACAC,WAAAC,EAAA,EACAC,SAAAD,EAAA,EACAE,YAAAC,EAAA,EACAtmC,MAAAumC,EAAA,EACA7lD,OAAA6lD,EAAA,EACA9tC,UAAA8tC,EAAA,EACAC,KAAAC,EAAA,EACAz/G,KAAAy/G,EAAA,GA0mBaC,EAljBC,SAAS/yH,GAKvB,IAAMgzH,OAA0B96H,IAAlB8H,EAAQgzH,OAAsBhzH,EAAQgzH,MAM9CC,EAASD,GAASE,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IACxDH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAMnCC,OAA0Cp7H,IAA1B8H,EAAQszH,cAC5BtzH,EAAQszH,cAAgB,aAMpBC,OAAsCr7H,IAAxB8H,EAAQuzH,YAC1BvzH,EAAQuzH,YAAc,aAKlBC,EAAoBxzH,EAAQwzH,kBAK5BC,EAAqBzzH,EAAQyzH,mBAK7BC,EAAgBrhI,OAAO0iD,KAAK0+E,GAAoBvhI,OAKhDyhI,EAAiBvB,EAAGC,SAAS,SAAAv+H,GAAA,OAAK0/H,EAAkB1/H,KAAIu/H,KAKxDO,EAAe5zH,EAAQ4zH,aAKvBC,EAAY7zH,EAAQ6zH,UAKpBC,OAA0C57H,IAA1B8H,EAAQ8zH,cAC5B9zH,EAAQ8zH,eAAiB,GAKrBC,EAAO/zH,EAAQ+zH,SAKfC,EAAcD,EAAKE,OAAS,WAK5BC,EAAcH,EAAKI,OAAS,YAK5BC,GAMJC,OANgB,SAMT91B,EAAM+1B,GACX,OAAUp4E,WAAWqiD,EAAKg2B,YAAY,IAAtC,IAA6CD,GAO/CE,OAdgB,SAcTC,EAAKH,GACV,OAAU1gH,KAAKmN,MAAM0zG,GAArB,MAOFC,MAtBgB,SAsBVn2B,EAAM+1B,GACV,OAAO/1B,GAOTo2B,MA9BgB,SA8BVF,EAAKH,GACT,OAAOG,SAIev8H,IAAtB8H,EAAQo0H,WACV3yF,EAAA,EAAa2yF,EAAWp0H,EAAQo0H,WAMlC,IAAMQ,OAAoC18H,IAAvB8H,EAAQ40H,YAA2B50H,EAAQ40H,WAM1DC,SAKA/3H,SAKAwb,SAKEw8G,EAAgB90H,EAAQ80H,cAE1Bn7G,SAKA6tC,SAKAz1C,SAKAgjH,SAKAC,SAKAC,SAGEC,EAAU,SAAVA,EAAmBC,GACvBA,EAAUC,KAAK,SAAS1jI,GAEtB,GADA0gI,EAAGrlD,OAAO/0E,MAAM8sF,UAAU,OAAOl9C,cACpB1vC,IAATxG,EAAJ,CAIAqgB,EAAQ6B,KAAK40D,IAAIxwE,KAAKq9H,YAAcpC,EAAOE,MAAQF,EAAOI,KAAM,GAChEv2H,EAAIs1H,EAAGM,cAAc3pH,OAAO,EAAGgJ,IAE/By1C,EAAS5zC,KAAK40D,IAAIxwE,KAAKs9H,aAAerC,EAAOC,IAAMD,EAAOG,OAAQ,GAClE96G,EAAI85G,EAAGM,cAAc3pH,OAAOy+C,EAAQ,IAEpC,IAAMysE,EAAQ7B,EAAGG,WAAWz1H,GACtBq3H,EAAQ/B,EAAGK,SAASn6G,GAEtBu6G,SACkB,IAAlBa,IACFb,EAAOT,EAAGS,OACP/1H,EAAE,SAAAhJ,GAAA,OAAKgJ,EAAE02H,EAAkB1/H,MAC3ByhI,GAAG/tE,GACH0f,GAAG,SAACpzE,GACH,IAAM0hI,EAAiBnjI,OAAO0iD,KAAK0+E,GAAoB,GACvD,OAAOn7G,EAAEm7G,EAAmB+B,GAAeC,WAAW3hI,OAO5D,IAAM4hI,GAFNb,EAAMzC,EAAGrlD,OAAO/0E,MAAM8sF,UAAU,OAAOpzF,MAAMA,KAExBikI,QAAQ9uE,OAAO,OAEpCguE,EAAMzC,EAAGrlD,OAAO/0E,MAAM8sF,UAAU,OAAOpzF,MAAMA,SAE3BwG,IAAd27H,GACF6B,EAAS7uE,OAAO,QAAQA,OAAO,SAC5BkW,KAAK,OAAQ,YACb3qD,KAAKyhH,GAEV,IAAM+B,EAASF,EAAS7uE,OAAO,KAE/BgvE,IAEAD,EAAO7kH,MAAM,OAAQ,cAEC,IAAlB2iH,GACFkC,EAAO/uE,OAAO,QAAQkW,KAAK,QAAS,QACjChsD,MAAM,OAAQ,4BAGnB6kH,EAAO/4B,OAAO,IAAK,gBAChB9/B,KAAK,QAAS,UAEZi2D,IACH4C,EAAO/uE,OAAO,KACXkW,KAAK,QAAS,UACdA,KAAK,YAFR,eAEoCvV,EAFpC,KAIAouE,EAAO/uE,OAAO,QACXkW,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAKhrD,EAAQ,GAClBgrD,KAAK,IAAKvV,EAAS,GAEtBouE,EAAO/uE,OAAO,KACXkW,KAAK,QAAS,UAEjB64D,EAAO/uE,OAAO,QACXkW,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXA,KAAK,YAAa,eAClBhsD,MAAM,OAAQ,QACdqB,KAAQ8hH,EAPX,QASA0B,EAAO/uE,OAAO,KACXkW,KAAK,QAAS,SACdA,KAAK,YAFR,cAEkChrD,EAAQ,GAF1C,SAKF6jH,EAAO/uE,OAAO,KAAKkW,KAAK,QAAS,QAEjC,IAAM+4D,EAASF,EAAO/uE,OAAO,KAAKkW,KAAK,QAAS,gBAChD+4D,EAAOjvE,OAAO,YAAYkW,KAAK,mBAAoB,OACnD+4D,EAAOjvE,OAAO,QAEd+uE,EAAO/uE,OAAO,QACXkW,KAAK,QAAS,WACdA,KAAK,QAAShrD,GACdgrD,KAAK,SAAUvV,GACfz2C,MAAM,OAAQ,QACdA,MAAM,iBAAkB,OAG3B8jH,EAAI93D,KAAK,QAAShrD,EAAQkhH,EAAOI,KAAOJ,EAAOE,OAC5Cp2D,KAAK,SAAUvV,EAASyrE,EAAOC,IAAMD,EAAOG,QAG/Cz5G,EAAIk7G,EAAI9nD,OAAO,KACZhQ,KAAK,YADJ,aAC8Bk2D,EAAOI,KADrC,IAEAJ,EAAOC,IAFP,KAIJ+B,EAAU7C,EAAG16G,OAAOhmB,EAAM,SAAAoC,GAAA,OAAK0/H,EAAkB1/H,KACjDgJ,EAAEi5H,OAAOd,GAIT,IAAMe,EAAU,WACd,IAAIC,KACAv+G,SAAQ3jB,SAEZ,IAAKA,KAAQ0/H,EACX/7G,EAAS06G,EAAG16G,OAAOhmB,EAAM,SAAAoC,GAAA,OAAK2/H,EAAmB1/H,GAAM0hI,WAAW3hI,KAClEmiI,EAAmBA,EAAiBjhH,OAAO0C,GAE7C,OACE9D,KAAKqsD,IAAIptE,MAAM,KAAMojI,GACrBriH,KAAK40D,IAAI31E,MAAM,KAAMojI,IAVT,GAiBhB,GAHA39G,EAAEy9G,OAAOC,QAGa99H,IAAlB48H,EACFA,EAAch4H,EAAGwb,EAAGvG,EAAOy1C,OACtB,CAEL,IAAMkuC,EAAsC,IAA3BsgC,EAAQ,GAAKA,EAAQ,IACtC19G,EAAEy9G,QAAQC,EAAQ,GAAKtgC,EAASsgC,EAAQ,GAAKtgC,IAIzB,IAAlBg+B,GACF/5G,EAAEozD,OAAO,SACNmpD,aACAn5D,KAAK,IAAK81D,GAIf,IAAIx/G,SAAMtf,SAAMoiI,SAChB,IAAKpiI,KAAQ0/H,EAEXmC,EAAO/uE,OAAO,QAAQkW,KAAK,QAA3B,QAA4ChpE,GACzCgd,MAAM,SAAU0iH,EAAmB1/H,GAAM6d,OAAS,QAClDb,MAAM,OAAQ,SAGjBolH,EAASP,EAAO/uE,OAAO,KAAKkW,KAAK,QAAxB,gBAAiDhpE,IACnD8yD,OAAO,YAAYkW,KAAK,mBAAoB,OACnDo5D,EAAOtvE,OAAO,QAGdxzC,EAAO++G,EAAG/+G,OACPvW,EAAE,SAAAhJ,GAAA,OAAKgJ,EAAE02H,EAAkB1/H,MAC3BwkB,EAAE,SAAAxkB,GAAA,OAAKwkB,EAAEm7G,EAAmB1/H,GAAM0hI,WAAW3hI,MAGhD6lB,EAAEozD,OAAF,SAAkBh5E,GACfmiI,aACAn5D,KAAK,IAAK1pD,GAGX4hH,EAAQ,GAAK,KACfF,EAAU,IACVC,EAAS,OAETD,EAAU,EACVC,EAAS,KAGNhC,IACHiB,EAAMmC,WAAW,SAAAtiI,GAAA,OAAKsgI,EAAUM,MAAM5gI,EAAIihI,EAASC,KAC/CJ,GACFX,EAAMoC,YAAY,EAAGv5H,EAAEi5H,SAAS,KAGlC5B,EAAMiC,WAAW,SAAAtiI,GAAA,OAAKsgI,EAAUO,MAAM7gI,EAAG,OAEzC6lB,EAAEozD,OAAO,WACNmpD,aACA1jI,KAAKyhI,GAERt6G,EAAEozD,OAAO,YACN36D,KAAQ4hH,EADX,KAC0BgB,EAD1B,KAEGjkH,MAAM,OAAQ,QACdA,MAAM,kBAAmB,cAGxBy2C,EAAS,GAAK,IAChB2sE,EAAMmC,MAAM9uE,EAAS,IAGvB7tC,EAAEozD,OAAO,WACNmpD,aACA1jI,KAAK2hI,IAGVx6G,EAAEozD,OAAO,WACNmpD,aACA1jI,KAAK2hI,EAAMoC,UAAUxkH,EAAO,GAAGqkH,WAAW,KAC1CtxC,UAAU,cACV/zE,MAAM,SAAU,QAChBA,MAAM,UAAW,IAEpB4I,EAAEmrE,UAAU,SAASA,UAAU,cAC5B/zE,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBA,MAAM,kBAAmB,cAE5B4I,EAAEozD,OAAO,WAAWA,OAAO,QACxBh8D,MAAM,SAAU,QAEnB4I,EAAEmrE,UAAU,oBACT/zE,MAAM,SAAU,QAChBA,MAAM,UAAW,IAEpB4I,EAAEozD,OAAO,YACNp5C,GAAG,WAUN,WACEuhG,EAAQsB,mBAVP7iG,GAAG,YAEN,WACE,IAAM8iG,EAASrE,EAAG/lC,MAAMr0F,MAAM,GACxB0+H,EAAK55H,EAAE65H,OAAOF,GAEpBvB,EAAQjG,UAAUyH,SAwJxB,SAASb,IACPX,EAAQ0B,aAIV,OAhJA1B,EAAQsB,eAAiB,WACvB78G,EAAEmrE,UAAU,eACT/zE,MAAM,UAAW,QACpBwiH,EAAY/gI,KAAK,OAQnB0iI,EAAQjG,UAAY,SAAStvC,GAC3B,IAAMjuF,EAAOmjI,EAAIzG,QACXp8H,EAAI2hI,EAAejiI,EAAMiuF,GAC/B,KAAI3tF,GAAKN,EAAKQ,QAAd,CAIA,IAAMy5B,EAAQj6B,EAAKM,GACbusG,EAAOi1B,EAAkB7nG,GAC3BkrG,SACEC,KACAC,KACFC,SAEJ,IAAKA,KAAYvD,EACfoD,EAAYpD,EAAmBuD,GAAUvB,WAAW9pG,GACpDmrG,EAAW1kI,KAAKykI,GAChBE,EAAcC,GAAYH,EAC1Bl9G,EAAEozD,OAAF,iBAA0BiqD,GACvBjmH,MAAM,UAAW,UACjBg8D,OAAO,QACPhQ,KAAK,KAAMjgE,EAAE,IACbigE,KAAK,KAAMzkD,EAAEu+G,IACb95D,KAAK,KAAMhrD,GACXgrD,KAAK,KAAMzkD,EAAEu+G,IAGlBl9G,EAAEozD,OAAO,iBACNh8D,MAAM,UAAW,UACjBg8D,OAAO,QACPhQ,KAAK,KAAMjgE,EAAEyhG,IACbxhC,KAAK,KAAMvV,GACXuV,KAAK,KAAMjgE,EAAEyhG,IACbxhC,KAAK,KAAMzkD,EAAE1E,KAAK40D,IAAI31E,MAAM,KAAMikI,KAErC,IAAM3D,EAAQ50B,EAAO02B,EAAQ,GAAK,EAC9BgC,EAAan6H,EAAEyhG,GACnB04B,GAAc9D,GAAS,GAAK,GAE5Bx5G,EAAEozD,OAAO,sBACN36D,KAAKgiH,EAAUC,OAAO91B,EAAOw2B,EAASC,IACtCjkH,MAAM,cAAeoiH,EAAQ,MAAQ,SACrCp2D,KAAK,YAHR,aAGkCk6D,EAHlC,KAIIzvE,EAAS,IAJb,KAQsB,IAAlBksE,GACF/5G,EAAEozD,OAAO,sBACN36D,KAAKgiH,EAAUI,OAAOsC,EAAW,GAAI,MACrC/lH,MAAM,cAAeoiH,EAAQ,MAAQ,SACrCp2D,KAAK,YAHR,aAGkCk6D,EAHlC,KAII3+G,EAAEw+G,EAAW,IAAM,IAJvB,KAMFxD,EAAc9gI,KAAK,KAAMm5B,EAAO4yE,EAAOw2B,EAASC,EAAQ+B,EATzC,OAcjB7B,EAAQ0B,SAAW,SAASM,GAC1BA,OAAgBh/H,IAATg/H,EAAqBA,KAC5Bp2F,EAAA,EAAYxlC,OAAuB,IAAhB47H,EAAKhlI,aAAiCgG,IAAjB07H,GAExC,IAAMuD,EAAKvD,EACLj6G,EAAIk7G,EAAI9nD,OAAO,KACfqqD,EAAcvC,EAAIzG,QAkBlBiJ,EAjBK19G,EAAEozD,OAAO,SAEP+X,UAAU,QAAQpzF,KAAKwlI,EAAM,SAACpjI,GACzC,IAAM9B,EAAI2hI,EAAeyD,EAAaxjH,KAAKmN,MAAmB,GAAbo2G,EAAG54B,KAAKzqG,IAAW,GAAI,GAClE63B,EAAQyrG,EAAYplI,GAC1B,GAAI25B,EAAO,CACT,IAAIqrG,SACEF,KACN,IAAKE,KAAYvD,EACfqD,EAAW1kI,KAAKqhI,EAAmBuD,GAAUvB,WAAW9pG,IAE1D,IAAM62C,EAAI5uD,KAAK40D,IAAI31E,MAAM,KAAMikI,GAC/BK,EAAG30D,EAAE1uE,EAAG0uE,GAEV,OAAO20D,EAAGt5G,GAAG/pB,KAGK6hI,QACjB9uE,OAAO,KACPkW,KAAK,QAAS,OAEjBs6D,EAAUxwE,OAAO,QACdkW,KAAK,IAAKi2D,EAAQ,EAAI,GACtBj2D,KAAK,KAAM,SACXA,KAAK,cAAei2D,EAAQ,SAAW,SAE1CqE,EAAUxwE,OAAO,QACd91C,MAAM,kBAAmB,cAE5BsmH,EAAUtmH,MAAM,UAAW,GACxBmlH,aACA79G,SAAS,KACTwlD,MAAM,KACN9sD,MAAM,UAAW,GAEpBsmH,EAAUvyC,UAAU,QACjB/nB,KAAK,YAAa,SAACjpE,GAClB,OAAIk/H,GACM,aACNl2H,EAAEq6H,EAAG54B,KAAKzqG,IAAK,IACfwkB,EAAE6+G,EAAG30D,EAAE1uE,IAAM,GAAI,KACjBsL,KAAK,KAEC,aACNtC,EAAEq6H,EAAG54B,KAAKzqG,IAAK,IACfwkB,EAAE6+G,EAAG30D,EAAE1uE,IAAM,GAAI,YAAaggI,EAAe,KAC7C10H,KAAK,MAGVgT,KAAK,SAAAte,GAAA,OAAKqjI,EAAGx1C,KAAK7tF,IAAMk/H,EAAQ,GAAR,MAAoBmE,EAAGjwF,MAAMpzC,MAExDujI,EAAUvyC,UAAU,QACjB/zE,MAAM,SAAU,QAChBgsD,KAAK,KAAM,SAAAjpE,GAAA,OAAKgJ,EAAEq6H,EAAG54B,KAAKzqG,MAC1BipE,KAAK,KAAM,SAAAjpE,GAAA,OAAKwkB,EAAEA,EAAEy9G,SAAS,MAC7Bh5D,KAAK,KAAM,SAAAjpE,GAAA,OAAKgJ,EAAEq6H,EAAG54B,KAAKzqG,MAC1BipE,KAAK,KAAM,SAAAjpE,GAAA,OAAKwkB,EAAE6+G,EAAG30D,EAAE1uE,MAG1BujI,EAAUC,OAAO1vF,UAQZstF,GClnBHqC,GACJxqD,OAAA6lD,EAAA,GAMI4E,EAAU13H,QAAQpM,OAAO,eAC7BigG,EAAA,EAAiB5/F,OAiCnByjI,EAAQtxE,WAAa,SAASykD,GAC5B,OACEngE,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GAErB,IAAM8sF,EAAc9sF,EAAA,mBACpB7J,EAAA,EAAYxlC,YAAuBpD,IAAhBu/H,GAEnB,IAAMtC,EAAYoC,EAAGxqD,OAAOnrD,EAAQ,IAChCszG,SAASwC,SAAeC,SA+D5B,SAASC,SACS1/H,IAAZg9H,IACFC,EAAU/G,MAAMsJ,GAAellI,KAAK0iI,QACdh9H,IAAlBw/H,GACFxC,EAAQ0B,SAASe,IAjEvBjtF,EAAMoqB,iBAAiB2iE,EAAa,SAAC7pH,GAEnC,IAAM5N,EACGyhC,EAAA,KAAiB7zB,GAE1B,QAAgB1V,IAAZ8H,EAAuB,CAWzB,QAA8B9H,IAA1B8H,EAAQszH,cAA6B,CACvC,IAAMuE,EAAoB73H,EAAQszH,cAClCtzH,EAAQszH,cAAgB,WACtBuE,0BACAntF,EAAM7W,eAIV,QAA4B37B,IAAxB8H,EAAQuzH,YAA2B,CACrC,IAAMuE,EAAkB93H,EAAQuzH,YAChCvzH,EAAQuzH,YAAc,WACpBuE,IACAptF,EAAM7W,eAIVqhG,EAAUnC,EAAuB/yH,GACjC43H,OAIJltF,EAAM9kB,OAAO+kB,EAAA,YAAsB,SAAC/8B,EAAQiY,GAC1C6xG,EAAgB9pH,EAChBgqH,MAGFltF,EAAM9kB,OAAO+kB,EAAA,gBAA0B,SAAC/8B,EAAQiY,GAC9C8xG,EAAU/pH,EACVgqH,MAGFltF,EAAM9kB,OAAO+kB,EAAA,qBACX,SAAC/8B,EAAQiY,QACQ3tB,IAAX0V,IAGAA,EAAS,EACXsnH,EAAQjG,UAAUrhH,GAElBsnH,EAAQsB,oBAIdlvF,EAAA,EAAgBxyC,OAAQ,SAAU61G,EAAaitB,EAAa,IAAI,OA3EtEJ,EAAQtxE,oCAyFRsxE,EAAQzsF,UAAU,cAAeysF,EAAQtxE,YAG1B,IAAA6xE,EAAA,ECnHTruD,UAAU5pE,QAAQpM,OAAO,cAC7B2zF,EAAA,EAAgB3zF,OAAOK,KACvBgnF,EAAA,EAAyBrnF,OAAOK,KAChCgkI,EAA8BhkI,QA4BhC,SAASikI,EAAsBvoF,EAAUlqB,EAAQyyG,GAC/C,OAAOA,EAAsBvoF,EAAUlqB,GAzBzCmkD,EAAQn1E,MAAM,wBAMZ,SAACk7C,EAAUlqB,GACT,IAAMgqB,EAAchqB,EAAA,sBACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,gBAGNm6B,EAAQ36B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,cAAe57C,EAAQ,iEAuD5Cq2E,EAAQx6B,YACN1mB,WAAY,+BACZ+zC,UACEnzD,OAAU,oBACViK,KAAQ,kBACRo0E,SAAY,kBACZwwC,wBAA2B,gCAC3BC,qBAAwB,8BACxBC,cAAiB,6BACjBC,aAAgB,uBAElB7oF,YAAayoF,GAGftuD,EAAQhN,UAAU,aAAcgN,EAAQx6B,YAmBxCw6B,EAAQl6B,YAAc,SAASnqB,EAAQ3tB,EAAO+3C,EAAUpgC,EACtDvX,EAAgBsjF,EAAuBi9C,EACvCvwC,GAAiB,IAAAztF,EAAArC,KAMjBA,KAAK6kE,QAAUx3C,EAMfrtB,KAAKK,OAASX,EAMdM,KAAK4kE,UAAYntB,EAMjBz3C,KAAKsX,SAAWD,EAMhBrX,KAAK02B,gBAAkB52B,EAMvBE,KAAKsgI,mBAAqBl9C,EAAsBx2D,oBAMhD5sB,KAAKugI,mBAAqBF,EAM1BrgI,KAAKgwF,iBAAmBF,EAMxB9vF,KAAKgvC,KAAO,KAMZhvC,KAAKwgI,oBAAsB,KAM3BxgI,KAAKygI,gBAMLzgI,KAAK0gI,UAAY,IAMjB1gI,KAAKqb,KAMLrb,KAAKo/H,eAMLp/H,KAAK2gI,cACH1sG,gBAAY/zB,EACZynF,cAAUznF,EACV4+H,cACA9B,YAAQ98H,EACR0gI,YAAQ1gI,GAQVF,KAAK6gI,kBAAoB,EAOzB7gI,KAAK8gI,gBAAkB,KAOvB9gI,KAAKyxB,uBAAyB,KAM9BzxB,KAAK+gI,cAAgB,IAAIh1E,EAAA,EACzB/rD,KAAKsgI,mBAAmBh0G,WAAWtsB,KAAK+gI,eAMxC/gI,KAAKghI,gBACH/E,MAAOn8H,EAAewF,UAAU,YAChC62H,MAAOr8H,EAAewF,UAAU,cAQlCtF,KAAKihI,eAAiB,KAMtBjhI,KAAKoR,QAAS,EAMdpR,KAAKkhI,gBAMLlhI,KAAKmhI,WAAY,EAIjB9zG,EAAOO,OACL,kBAAMvrB,EAAK+O,QACX,SAAC0hC,EAAU5F,GACLA,IAAa4F,GACfzwC,EAAK++H,2BAKX/zG,EAAOO,OACL,kBAAMvrB,EAAKgZ,MACX,SAACgmH,EAASC,GACJA,IAAYD,GACdh/H,EAAKk/H,YAIXvhI,KAAKohI,0BArLP1vD,EAAQl6B,2IA4LRk6B,EAAQl6B,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKgvC,KAAOhvC,KAAA,SAAmBA,KAAA,WAAqB,KACpDA,KAAK0gI,UAAY1gI,KAAA,cAAwBA,KAAA,gBAA0B,IAEnE,IAAIwhI,SACEC,EAAoBzhI,KAAA,qBACtByhI,GACFD,EAAkBC,IAClB34F,EAAA,EAAY1d,iBAAiBo2G,EAAiB7hD,EAAA,IAE9C6hD,EAAkB,IAAI7hD,EAAA,GACpBnlE,MAAO,IAAI+xC,EAAA,GACT7xC,KAAM,IAAIklE,EAAA,GAAahmE,MAAO,YAC9Ba,OAAQ,MAIdza,KAAKsgI,mBAAmBhoH,SAASkpH,GAEjC,IAAM/F,EAAqBz7H,KAAA,0BAK3B,IAAK,IAAMjE,KAJX+sC,EAAA,EAAY1d,iBAAiBqwG,EAAoBphI,QAEjD2F,KAAKwgI,oBAAsB/E,EAERz7H,KAAKwgI,oBAAqB,CAE3CxgI,KAAKygI,aAAarmI,KAAK2B,GAEJiE,KAAKwgI,oBAAoBzkI,GAC5B0hI,aACdz9H,KAAKwgI,oBAAoBzkI,GAAM0hI,WAAaz9H,KAAK0hI,aAAa3lI,IAIlEiE,KAAKihI,gBACHxF,mBAAoBz7H,KAAKwgI,oBACzBhF,kBAAmBx7H,KAAK2hI,SACxBrG,cAAet7H,KAAK4hI,eAAe5kI,KAAKgD,MACxCu7H,YAAav7H,KAAK6hI,aAAa7kI,KAAKgD,MACpC+7H,KAAM/7H,KAAKghI,gBAGb,IAAMc,EAAY9hI,KAAA,aAClB,GAAI8hI,EAAW,CACb,IAAM95H,EAAU85H,IAChBh5F,EAAA,EAAYi5F,aAAa/5H,GACzByhC,EAAA,EAAazpC,KAAKihI,eAAgBj5H,KAQtC0pE,EAAQl6B,YAAYl9C,UAAUinI,QAAU,WACtCvhI,KAAKmhI,WAAY,EACbnhI,KAAKqb,KACPrb,KAAKgiI,kBAELhiI,KAAKo/H,eAEPp/H,KAAKoR,SAAWpR,KAAKqb,MAOvBq2D,EAAQl6B,YAAYl9C,UAAU8mI,uBAAyB,WACjDphI,KAAKoR,QAAwB,OAAdpR,KAAKgvC,KACtBhvC,KAAKkhI,gBAAkB5xF,EAAA,EAAgBtvC,KAAKgvC,KAAM,cAChDhvC,KAAKiiI,eAAejlI,KAAKgD,OAE3BsvC,EAAA,EAAuBtvC,KAAKkhI,kBAShCxvD,EAAQl6B,YAAYl9C,UAAU2nI,eAAiB,SAAS98D,GACtD,IAAIA,EAAEtxC,UAAa7zB,KAAKqb,KAAxB,CAGA,IAAM4Y,EAAaj0B,KAAKgvC,KAAKkzF,mBAAmB/8D,EAAExB,eAC5Cw+D,EAAeniI,KAAKqb,KAAK+mH,gBAAgBnuG,GAGzCouG,EADc,IAAI/1E,EAAA,GAAkB61E,EAAcluG,IAC1B64B,YAAc9sD,KAAKgvC,KAAKvvB,UAAU0J,gBAG9DnpB,KAAK6gI,iBADHwB,EAAY,GACUriI,KAAKsiI,oBAAoBH,EAAcniI,KAAKqb,OAE3C,EAE3Brb,KAAK6kE,QAAQjxB,WAaf89B,EAAQl6B,YAAYl9C,UAAUgoI,oBAAsB,SAASC,EAC3DlnH,GACA,IAAIspF,SACA69B,EAAa,EACXC,GACJF,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IAenB,OAbAviI,KAAKqb,KAAKqnH,eAAe,SAACC,EAAYC,GAGpC,IAFAj+B,EAAU,IAAIr4C,EAAA,GAAkBq2E,EAAYC,KAEhChjH,iBAAiB6iH,GAI3B,OADA99B,EAAQx4C,gBAAgBw2E,EAAYJ,IAC7BC,GAAc79B,EAAQ73C,YAG7B01E,GAAc79B,EAAQ73C,cAGnB01E,GAYT9wD,EAAQl6B,YAAYl9C,UAAUsnI,eAAiB,SAASjuG,EAAO4yE,EAAMy2B,EACnE+B,EAAe6B,GAEf,IAAI3S,SACEh6F,GAAcN,EAAM7uB,EAAG6uB,EAAMrT,GACnC,IAAK2tG,KAAO8Q,EACV/+H,KAAK2gI,aAAa7B,WAAW7Q,GAAO8Q,EAAc9Q,GAEpDjuH,KAAK2gI,aAAah5C,SAAW4e,EAC7BvmG,KAAK2gI,aAAa3D,OAASA,EAC3Bh9H,KAAK2gI,aAAaC,OAASA,EAC3B5gI,KAAK2gI,aAAa1sG,WAAaA,EAG/B,IAAM5X,EAAO,IAAI2vC,EAAA,EAAY/3B,GAC7Bj0B,KAAKu0B,wBACLv0B,KAAKyxB,uBAAuBiD,UAAY10B,KAAK6iI,kBAC7C7iI,KAAK8gI,gBAAgB9sG,YAAYC,GACjCj0B,KAAK+gI,cAAcv1G,YAAYnP,IAOjCq1D,EAAQl6B,YAAYl9C,UAAUunI,aAAe,WAE3C7hI,KAAK2gI,aAAa1sG,gBAAa/zB,EAC/BF,KAAK2gI,aAAah5C,cAAWznF,EAC7BF,KAAK2gI,aAAa7B,cAClB9+H,KAAK2gI,aAAa3D,YAAS98H,EAC3BF,KAAK2gI,aAAaC,YAAS1gI,EAG3BF,KAAKu1B,wBACLv1B,KAAK+gI,cAAcv1G,YAAY,OAQjCkmD,EAAQl6B,YAAYl9C,UAAUuoI,gBAAkB,WAC9C,IACIC,SAAeC,SACbruG,KACAuL,EAASjgC,KAAKsX,SAAS,UACvB0rH,EAA2C,MAA7BhjI,KAAK2gI,aAAa3D,OAAiB,EAAI,EAQ3D,IAAK8F,KAPLpuG,EAAUt6B,KACL4F,KAAKghI,eAAe/E,MANP,MAQdh8F,EAAOjgC,KAAK2gI,aAAah5C,SAAUq7C,GAHvC,IAKIhjI,KAAK2gI,aAAa3D,QAEAh9H,KAAK2gI,aAAa7B,WACtCiE,EAA0B/iI,KAAK02B,gBAAgBpxB,UAAUw9H,GACzDpuG,EAAUt6B,KACL2oI,EAfW,MAiBZ9iG,EAAOjgC,KAAK2gI,aAAa7B,WAAWgE,GAAgB,GAHxD,IAIM9iI,KAAK2gI,aAAaC,QAG1B,OAAOlsG,EAAUttB,KAAK,UAQxBsqE,EAAQl6B,YAAYl9C,UAAUi6B,sBAAwB,WACpDv0B,KAAKu1B,wBACLv1B,KAAKyxB,uBAAyBU,SAASC,cAAc,OACrDpyB,KAAKyxB,uBAAuBm6D,WAAa,+BACzC5rF,KAAK8gI,gBAAkB,IAAI5f,EAAA,GACzBt3F,QAAS5pB,KAAKyxB,uBACdwD,QAAS,GAAI,IACbC,YAAa,kBAEfl1B,KAAKgvC,KAAK7Z,WAAWn1B,KAAK8gI,kBAQ5BpvD,EAAQl6B,YAAYl9C,UAAUi7B,sBAAwB,WAChB,OAAhCv1B,KAAKyxB,yBACPzxB,KAAKyxB,uBAAuB4D,WAAWC,YACrCt1B,KAAKyxB,wBACPzxB,KAAKyxB,uBAAyB,KAC9BzxB,KAAKgvC,KAAK5Z,cAAcp1B,KAAK8gI,mBAWjCpvD,EAAQl6B,YAAYl9C,UAAU6pH,SAAW,SAASp+F,GAChD,IAAMk9G,EAAoBjjI,KAAKwgI,oBAAoBz6G,GACnD,GAAKk9G,EAGL,OAAOA,EAAkBrpH,OAS3B83D,EAAQl6B,YAAYl9C,UAAU4oI,eAAiB,WAC7C,OAAOljI,KAAKygI,aAAaxjI,MAAM,IASjCy0E,EAAQl6B,YAAYl9C,UAAUonI,aAAe,SAAS37G,GAapD,OANe,SAASvjB,GACtB,MAAI,WAAYA,GAAQujB,KAAavjB,EAAA,OAC5B0hD,WAAW1hD,EAAA,OAAeujB,IAE5B,IAYX2rD,EAAQl6B,YAAYl9C,UAAUqnI,SAAW,SAASn/H,GAChD,MAAI,SAAUA,EACLA,EAAA,KAEF,GAQTkvE,EAAQl6B,YAAYl9C,UAAU0nI,gBAAkB,WAC9C,IAAM3lH,GACJhf,KAAQ,aACRyf,YAAe9c,KAAKqb,KAAK0B,kBAGrBjW,GACJxC,OAAUtE,KAAKygI,aAAar5H,KAAK,KACjCiV,KAAQ4gE,KAAKK,UAAUjhE,GACvB8mH,SAAYnjI,KAAK0gI,WAGM1gI,KAAKK,QAC5BkD,IAAKvD,KAAKugI,mBACV6C,OAAQ,OACRt8H,OAAQA,EACRu8H,gBAAiB,6BACjB/hF,SACEC,eAAgB,uCAEjB59C,KACD3D,KAAKsjI,uBAAuBtmI,KAAKgD,MACjCA,KAAKujI,qBAAqBvmI,KAAKgD,QASnC0xE,EAAQl6B,YAAYl9C,UAAUgpI,uBAAyB,SAAS3mF,GAC9D,IAAMyiF,EAAcziF,EAAKjjD,KAAL,QAChB0lI,aAAuBvyH,QACzB7M,KAAKo/H,YAAcA,IASvB1tD,EAAQl6B,YAAYl9C,UAAUipI,qBAAuB,SAAS5mF,GAC5D38C,KAAKmhI,WAAY,EACjBr9H,QAAQC,MAAM,8BAQhB2tE,EAAQl6B,YAAYl9C,UAAU05F,YAAc,WAC1C,GAAgC,IAA5Bh0F,KAAKo/H,YAAYllI,OAArB,CAKA,IAAMonD,KACFkiF,GAAc,EACZb,EAAa3iI,KAAKo/H,YAAY,GAChC,SAAUuD,IACZrhF,EAAQlnD,MAAM2B,KAAM,aACpBynI,GAAc,GAEhB,IAAMl/H,KACN,IAAK,IAAM7B,KAASkgI,EAAA,OAClBrhF,EAAQlnD,MAAM2B,KAAQ0G,IACtB6B,EAAOlK,KAAKqI,GAEd6+C,EAAQlnD,MAAM2B,KAAM,MACpBulD,EAAQlnD,MAAM2B,KAAM,MAEpB,IAAM0nI,EAAOzjI,KAAKo/H,YAAYx6H,IAAI,SAAC+uB,GACjC,IAAMg5D,KAYN,OAXI62C,IACF72C,EAAA,SAAkBh5D,EAAA,MAGpBrvB,EAAOtB,QAAQ,SAACP,GACdkqF,EAAIlqF,GAASkxB,EAAA,OAAgBlxB,KAG/BkqF,EAAA,EAAWh5D,EAAA,EACXg5D,EAAA,EAAWh5D,EAAA,EAEJg5D,IAGT3sF,KAAKgwF,iBAAiBiE,cAAcwvC,EAAMniF,EAAS,iBAIrDowB,EAAQlhD,WAAW,uBAAwBkhD,EAAQl6B,aAGpC,IAAAktB,EAAA,6CC5sBTg/D,EAAU57H,QAAQpM,OAAO,sBAC7BqnF,EAAA,EAAyBrnF,OAAOK,OA4BlC2nI,EAAQx1E,WAAa,WACnB,OACExb,OAAO,EACPliB,WAAY,uCACZgiB,SAAU,IACV8E,kBACEm4C,SAAY,yBACZp0E,KAAQ,0BACRjK,OAAU,4BACVuyH,WAAc,+BAMpBD,EAAQ3wF,UAAU,qBAChB2wF,EAAQx1E,YAcVw1E,EAAQlsF,YAAc,SAASnqB,EAAQoqB,EAAUrhB,EAC/CgtD,GAAuB,IAAA/gF,EAAArC,KAMvBA,KAAKqb,KAMLrb,KAAKgvC,KAAO,KAOZhvC,KAAKoR,OAMLpR,KAAK+vD,UAAY,IAAI5jB,EAAA,EAErB,IAAMy3F,EAAUxgD,EAAsBx2D,oBACtCg3G,EAAQ3zE,YAAYjwD,KAAK+vD,WAEzB,IAAIh3C,SACE8qH,EAAU7jI,KAAA,WACZ6jI,GACF9qH,EAAQ8qH,IACR/6F,EAAA,EAAY1d,iBAAiBrS,EAAO4mE,EAAA,IAEpC5mE,EAAQ,IAAI4mE,EAAA,GACV7lE,OAAQ,IAAIo3E,EAAA,GACVt3E,MAAO,UACPG,MAAO,MAIb6pH,EAAQtrH,SAASS,GAMjB/Y,KAAKk7B,YAAc,IAAI+vE,EAAA,GACrB5tG,KAA2C,aAC3CsgB,SAAU3d,KAAK+vD,YAGjBgxB,EAAA,EAAiB7lD,YAAYl7B,KAAKk7B,aAGlCl7B,KAAKk7B,YAAYS,GAAG,gBAAiB,WAC/Bt5B,EAAK64B,YAAYxlB,aACnBrT,EAAKw3F,WAKT75F,KAAKk7B,YAAYS,GAAG,UAAW,SAACnZ,GAC9BngB,EAAKgZ,KAAOmH,EAAMjK,QAAQ+D,cAE1B8Z,EAAS,WACP/zB,EAAK64B,YAAYvlB,WAAU,IAC1B,KAKL0X,EAAOO,OACL,kBAAMvrB,EAAKgZ,MACX,SAACgmH,EAASC,GACQ,OAAZD,GACFh/H,EAAKw3F,WAIXxsE,EAAOO,OACL,kBAAMvrB,EAAK+O,QACX,SAAC0hC,IACkB,IAAbA,GACFzwC,EAAKw3F,SAGPx3F,EAAK64B,YAAYvlB,UAAUtT,EAAK+O,WA1FtCsyH,EAAQlsF,6EAmGRksF,EAAQlsF,YAAYl9C,UAAUw/C,QAAU,WACtC,IAAMl1C,EAAM5E,KAAA,WACZ8oC,EAAA,EAAY1d,iBAAiBxmB,EAAK2jF,EAAA,GAClCvoF,KAAKgvC,KAAOpqC,EACZ5E,KAAKgvC,KAAK1a,eAAet0B,KAAKk7B,cAQhCwoG,EAAQlsF,YAAYl9C,UAAUu/F,OAAS,WACrC75F,KAAK+vD,UAAUrjC,QACf1sB,KAAKqb,KAAO,MAIdqoH,EAAQlzG,WAAW,+BACjBkzG,EAAQlsF,aAGK,IAAAssF,EAAA,ECxLTviB,UAAUz5G,QAAQpM,OAAO,oBAC7BgpE,EAAoB3oE,KACpB+nI,EAA4B/nI,QAIfuB,EAAA,sCCjBf,IAAAymI,EAAA1oI,EAAA,KAAA2oI,EAAA3oI,EAAA,KAAA4oI,EAAA5oI,EAAA,IASMI,EAAUqM,QAAQpM,OAAO,iBAC7BqoI,EAAA,EAAoBroI,OAAOK,OAiC7BN,EAAQyyD,WAAa,SAAS0zB,GAC5B,OACEpvC,SAAU,IACVE,OAAO,EACPD,KAAM,SAACC,EAAOqpD,EAAMppD,GAIlB,IAAM/tC,EAAM8tC,EAAM5kB,MAAM6kB,EAAA,kBAElBzX,EAAc,IAAI8oG,EAAA,GACtB9mI,UAAW+mI,EAAA,IAgBb/oG,EAAYS,GAAG,SARM,SAASxQ,GAC5B,IAAMzL,EAASwb,EAAY5e,cAAc4D,YACzC0hE,EAAe9kD,OACbP,MAAOmW,EAAM5kB,MAAM6kB,EAAA,oBACnBjzB,OAAQA,EACR9a,IAAKA,MAMT8tC,EAAM9kB,OAAO+kB,EAAA,oBACX,SAAC/8B,EAAQiY,GACHjY,EAEFhR,EAAI0vB,eAAe4G,IAGnBt2B,EAAIyvB,kBAAkB6G,IAC+B,IAAjDwX,EAAM5kB,MAAM6kB,EAAA,yBACdivC,EAAel1D,cAvC7BjxB,EAAQyyD,sCAgDRzyD,EAAQs3C,UAAU,gBAAiBt3C,EAAQyyD,YAG5B5wD,EAAA,kCC9Ff,IAAA4mI,EAAA7oI,EAAA,KAAAooC,EAAApoC,EAAA,GAAA8oI,EAAA9oI,EAAA,KAAAwvB,EAAAxvB,EAAA,GAiBMI,GAjBNJ,EAAA,KAiBgByM,QAAQpM,OAAO,sBAC7BwoI,EAAA,EAAuBxoI,OAAOK,KAC9BooI,EAAA,EAAiBpoI,QA2BnB,SAASqoI,EAA8B72G,EAAQ62G,GAC7C,OAAOA,EAA8B72G,GAxBvC9xB,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6BAA8B57C,EAAQ,SAI3DI,EAAQc,MAAM,gCAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,8BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,oFA0CN97C,EAAQy7C,WAAa,WACnB,OACE1E,SAAU,IACVhiB,WAAY,iCACZ8mB,kBAAkB,EAClB5E,OACEthC,OAAU,sBACVytH,UAAa,yBACbwF,QAAW,wBACX5hI,MAAS,qBACTmC,IAAO,oBAET6tC,KAAM,SAACC,EAAO9oB,EAASm7C,GACrB,IAAM3/B,EAAOsN,EAAA,KAGbA,EAAM9kB,OAAO,kBAAMwX,EAAKh0B,QAAQ,SAASA,GACvCpR,KAAKskI,cAAclzH,IACnBpU,KAAKooC,IAGPsN,EAAM9kB,OAAO,kBAAMwX,EAAK3iC,OAAO,SAASA,GACtCzC,KAAKyC,MAAQA,EACbzC,KAAK6+H,UAAY,MACjB7hI,KAAKooC,OAMb3pC,EAAQs3C,UAAU,eAAgBt3C,EAAQy7C,YAY1Cz7C,EAAQ+7C,YAAc,SAASnqB,EAAQslF,EAAc2N,GAMnDtgH,KAAK6yG,cAAgBF,EAMrB3yG,KAAKwgH,WAAaF,EAKlBtgH,KAAKoR,OAMLpR,KAAK6+H,UAKL7+H,KAAKyC,MAKLzC,KAAK4E,IAML5E,KAAKqnC,iBAMLrnC,KAAKmmC,OAAS9Y,EAMdrtB,KAAKukI,aAAc,EAMnBvkI,KAAKqkI,SAAU,GAzDjB5oI,EAAQ+7C,0DAiER/7C,EAAQ+7C,YAAYl9C,UAAUgqI,cAAgB,SAASlzH,GAAQ,IAAArL,EAAA/F,KAC7DA,KAAK6+H,eAAY3+H,EACbkR,GACFqyB,EAAA,EAAYngC,OAAqC,IAA9BtD,KAAKqnC,cAAcntC,QAGtC8F,KAAKqnC,cAAcjtC,KAAKywB,EAAA,EAAgB7qB,KAAK4E,IAAK,cAChD,SAASugE,GAAG,IAAA9iE,EAAArC,KACVA,KAAKmmC,OAAOyN,OAAO,WACjBvxC,EAAKkiI,aAAc,EACnBliI,EAAKw8H,eAAY3+H,EACjBmC,EAAKgiI,SAAU,KAEhBrkI,OAILA,KAAKqnC,cAAcjtC,KAAKywB,EAAA,EAAgB7qB,KAAK4E,IAAK,cAChD5E,KAAK6yG,cAAc7yG,KAAKwkI,aAAaxnI,KAAKgD,MAAO,KAAK,KAGxDA,KAAKqnC,cAAcjtC,KAAKywB,EAAA,EAAgB7qB,KAAK4E,IAAI24C,cAAe,WAAY,WAC1Ex3C,EAAKogC,OAAOyN,OAAO,WACjB7tC,EAAK84H,eAAY3+H,EACjB6F,EAAKw+H,aAAc,EACnBx+H,EAAKs+H,SAAU,SAInBrkI,KAAK6+H,eAAY3+H,EACjBF,KAAKqnC,cAAcrkC,QAAQ6nB,EAAA,GAC3B7qB,KAAKqnC,cAAcntC,OAAS,IAWhCuB,EAAQ+7C,YAAYl9C,UAAUkqI,aAAe,SAASr/D,GACpD,GAAInlE,KAAKukI,YAAa,CACpBvkI,KAAKqkI,SAAU,EACf,IAAMv9H,GACJxC,OAAUtE,KAAKyC,OAEjBzC,KAAKwgH,WAAWrT,UAAUhoC,EAAElxC,WAAYntB,GAAQnD,KAC9C3D,KAAKykI,kBAAkBznI,KAAKgD,MAC5BA,KAAK0kI,gBAAgB1nI,KAAKgD,SAUhCvE,EAAQ+7C,YAAYl9C,UAAUmqI,kBAAoB,SAAS9nF,GACzDlZ,EAAA,EAAYngC,OAAOtD,KAAKyC,MAAO,8BAC/BzC,KAAK6+H,UAAYliF,EAAK38C,KAAKyC,OAC3BzC,KAAKqkI,SAAU,GAOjB5oI,EAAQ+7C,YAAYl9C,UAAUoqI,gBAAkB,WAC9C5gI,QAAQC,MAAM,gCACd/D,KAAK6+H,eAAY3+H,EACjBF,KAAKqkI,SAAU,GAIjB5oI,EAAQ+0B,WAAW,yBAA0B/0B,EAAQ+7C,aAuBrD/7C,EAAQkpI,kBACNn0G,WAAY,uCACZ+zC,UACE3/D,IAAO,yBACPN,OAAU,4BACV8M,OAAU,6BAEZmmC,YAAa6sF,GAEf3oI,EAAQipE,UAAU,qBAAsBjpE,EAAQkpI,kBAQhDlpI,EAAQmpI,kBAAoB,WAK1B5kI,KAAK4E,IAML5E,KAAKsE,OAMLtE,KAAKoR,OAMLpR,KAAK6kI,wBAIPppI,EAAQmpI,kBAAkBtqI,UAAUw/C,QAAU,WAC5C95C,KAAK6kI,uBAAyB7kI,KAAKsE,OAAO,IAI5C7I,EAAQ+0B,WAAW,+BACjB/0B,EAAQmpI,mBAGKtnI,EAAA,yMCpTf,IAAM7B,EAAUqM,QAAQpM,OAAO,qBAC7BopI,EAAA,EAAyBppI,OAAOK,KAChCs1G,EAAA,EAAe31G,OAAOK,KACtBgpI,EAAA,EAAmBrpI,OAAOK,KAC1BipI,EAAA,EAAyBtpI,OAAOK,KAChCkpI,EAAA,EAAsBvpI,OAAOK,KAC7BmpI,EAAA,EAAiBxpI,OAAOK,KACxBopI,EAAA,EAAezpI,OAAOK,KACtBqpI,EAAA,EAAoB1pI,OAAOK,OAuE7B,SAASspI,EAAoB5tF,EAAUlqB,EAAQ83G,GAC7C,OAAOA,EAAoB5tF,EAAUlqB,GApEvC9xB,EAAQc,MAAM,sBAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,oBACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,cAGN97C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,YAAa57C,EAAQ,SAQ1CI,EAAQ6pI,gBAMNC,WAAY,WAMZC,SAAU,WAMVC,gBAAiB,gBAMjBC,wBAAyB,wBAMzBC,yBAA0B,0BAI5BlqI,EAAQc,MAAM,iBACZ0yB,MAASxzB,EAAQ6pI,eAAeI,gFA+DlCjqI,EAAQy7C,YACNqtB,UACE3/D,IAAO,eACPwM,OAAU,kBACVw0H,WAAc,uBACdC,YAAe,wBACfC,qBAAwB,6BACxBC,cAAiB,2BAEnBv1G,WAAY,qBACZ+mB,YAAa8tF,EACb/gE,YAAY,GAId7oE,EAAQipE,UAAU,WAAYjpE,EAAQy7C,YAStCz7C,EAAQuqI,kBAQRvqI,EAAQwqI,YAKRxqI,EAAQ+7C,YAAR,WA0BE,SAAAmtB,EAAYltB,EAAUnqB,EAAYD,EAAQ+I,EAAUx2B,EAAID,EACtDG,EAAgBD,EAAiBujF,EAAwB8iD,EACzDC,EAAiBC,EAAa/zD,EAA0Bp2C,EACxD5kB,EAASgvH,EAAe/vG,GAAW,IAAAj0B,EAAArC,KAyInC,+FAzImCiI,CAAAjI,KAAA2kE,GAMnC3kE,KAAKsmI,eAAiBD,EAMtBrmI,KAAKs5C,WAAajiC,EAAQ,aAM1BrX,KAAK4E,IAML5E,KAAKoR,OAMLpR,KAAK4lI,YAAa,EAMlB5lI,KAAK6lI,eAML7lI,KAAK+lI,cAML/lI,KAAKq/C,YAAc/xB,EAMnBttB,KAAK6kE,QAAUx3C,EAMfrtB,KAAKw2B,UAAYJ,EAMjBp2B,KAAKI,IAAMR,EAMXI,KAAK02B,gBAAkB52B,EAMvBE,KAAKguC,iBAAmBnuC,EAMxBG,KAAKumI,qBAAuBnjD,EAAsBz2D,WAMlD3sB,KAAKwmI,gBAAkBN,EAMvBlmI,KAAKymI,WAAaN,EAAgBC,GAMlCpmI,KAAK0mI,iBAAmBzqG,EAMxBj8B,KAAKsyE,0BAA4BD,EAMjCryE,KAAK42B,WAAaN,EAElBt2B,KAAKQ,cAAgB,IACjBb,EAAUY,IAAI,kBAChBP,KAAKQ,cAAgBb,EAAUtD,IAAI,iBAOrC2D,KAAK2mI,YAAa,EAMlB3mI,KAAK4mI,mBACHC,SAAS,EACTthI,SACAuB,WAGEnH,EAAUY,IAAI,mBAAoB,CAIpC,IAAMyH,EAAUrI,EAAUtD,IAAI,mBAC1B2L,EAAQ2+H,aACV3mI,KAAK2mI,WAAa3+H,EAAQ2+H,YAExB3+H,EAAQ8+H,QACVzsI,OAAOgrB,OAAOrlB,KAAK4mI,kBAAmB5+H,EAAQ8+H,QAQlD9mI,KAAK+mI,iBAAmB,KAMxB/mI,KAAKgnI,sBAAwB,KAM7BhnI,KAAKinI,6BAA+B,KAMpCjnI,KAAKknI,wBAA0B,KAM/BlnI,KAAKmnI,wBAMLnnI,KAAKonI,wBAMLpnI,KAAKqnI,4BAOLrnI,KAAKsnI,QAAU,GAOftnI,KAAKunI,YAOLvnI,KAAKwnI,YAOLxnI,KAAKynI,WAMLznI,KAAK0nI,cAML1nI,KAAK2nI,cAML3nI,KAAK4e,SAAW,EAMhB5e,KAAK8lI,qBAML9lI,KAAK4nI,wBAAyB,EAM9B5nI,KAAK6nI,eAAiBpwF,EAASgF,KAAK,6BAEpCz8C,KAAK6nI,eAAelsG,GAAG,QAAS,SAACnZ,GAC/B,IAAM5D,EAAW8W,EAAElT,EAAM6I,QAAQwE,MAChB,KAAbjR,GACFvc,EAAKylI,YAAmClpH,KAO5C5e,KAAK+nI,qBAML/nI,KAAKgoI,cAMLhoI,KAAKm3B,YAMLn3B,KAAKioI,eAzTT,OAAAtjE,EAAA9nC,SAAA,6PAAA8nC,EAAArqE,UAgUEw/C,QAhUF,WAgUY,IAAA/zC,EAAA/F,KAERA,KAAK6kE,QAAQj3C,OAAO,kBAAM7nB,EAAKusE,0BAA0B1pB,aAAa,WACpE7iD,EAAKugI,eAAer3G,MAAQxzB,EAAQ6pI,eAAeI,wBACnD3/H,EAAKiiI,cAAgB,OAGvBhoI,KAAK6kE,QAAQj3C,OAAO,kBAAM7nB,EAAKqL,QAAQ,SAACA,GACtCrL,EAAKmiI,kBAAkB92H,KAIzBpR,KAAKq/C,YAAYnxB,IAAI,gBAAiB,SAAC1L,EAAOhV,GAC5CzH,EAAKoiI,MAAL,GAAc36H,KAIhBxN,KAAKq/C,YAAYnxB,IAAI,iBAAkB,WACrCnoB,EAAK0yB,WAGPz4B,KAAK42B,WAAWhxB,sBAAsBjC,KAAK,SAACsgC,GAC1Cl+B,EAAKoxB,YAAc8M,IAGrBjkC,KAAK42B,WAAWlxB,kBAAkB/B,KAAK,SAACykI,GACtCriI,EAAKkiI,eAAiBG,IAMxB,IAEIC,SACAroI,KAAK4lI,aAIPyC,EAAgB,kBAAMtiI,EAAK6Y,WAG7B5e,KAAK+nI,qBAAuB/nI,KAAKwmI,gBAAgBl5D,2BAV/B,kBAAMvnE,EAAK2hI,YAWhB1nI,KAAKsoI,WAAWtrI,KAAKgD,MAAOqoI,IA3W7C1jE,EAAArqE,UAmXEguI,WAnXF,SAmXa76D,GAKT,GAFA86D,EAAA,EAAYjlI,OAAOtD,KAAK2nI,WAAWn+C,QACnC++C,EAAA,EAAYjlI,YAAiCpD,IAA1BF,KAAK2nI,WAAW9nG,QAC9B7/B,KAAK4nI,0BACsB,IAA3B5nI,KAAK2nI,WAAW9nG,OAAgB2oG,EAAA,EAAiBxoI,KAAK2nI,WAAWn+C,OAAQxpF,KAAK2nI,WAAW9nG,QAAS,CACrG,IAAM6vC,EAAUjC,EAAWnzD,KACrBs0G,EAAiBnhD,EAAWC,UAAUzgD,WAC5CjtB,KAAK2nI,WAAW9nG,MAAQ7/B,KAAKyoI,iBAAiB/4D,EAASk/C,GAEzD,OAAO5uH,KAAK2nI,WAAW9nG,OA9X3B8kC,EAAArqE,UAuYE4tI,kBAvYF,SAuYoB92H,GAAQ,IAAAvK,EAAA7G,KACpBoR,GACGpR,KAAKgoI,eACRhoI,KAAK0oI,mBAEP1oI,KAAKgoI,cAAcrkI,KAAK,SAACg5C,GAElB91C,EAAKuK,SAGVvK,EAAKy/H,eAAer3G,MAAQxzB,EAAQ6pI,eAAeC,WAEnD1+H,EAAK8hI,mBAAmBhsF,GACxB91C,EAAKsgI,wBAA0ByB,EAAA,EAAgB/hI,EAAKjC,IAAK,cAAeiC,EAAKkhI,sBAC7ElhI,EAAKugI,wBAA0BwB,EAAA,EAAgB/hI,EAAKjC,IAAK,cAAeiC,EAAKgiI,eAA9ChiI,GAC/BA,EAAKwgI,4BAA8BuB,EAAA,EAAgB/hI,EAAKjC,IAAI6a,UAAW,oBAAqB,WAC1F5Y,EAAK+gI,wBAAyB,IAEhC/gI,EAAKjC,IAAIkkI,WACR,SAACnsF,GAEF91C,EAAKy/H,eAAer3G,MAAQxzB,EAAQ6pI,eAAeK,yBACnD9+H,EAAKmhI,cAAgB,SAGvBY,EAAA,EAAuB5oI,KAAKmnI,yBAC5ByB,EAAA,EAAuB5oI,KAAKonI,yBAC5BwB,EAAA,EAAuB5oI,KAAKqnI,6BAC5BrnI,KAAK8nI,YAAY,GACjB9nI,KAAK4E,IAAIkkI,WApafnkE,EAAArqE,UA8aEouI,iBA9aF,SA8amB9hI,GACf5G,KAAKgoI,cAAgBhoI,KAAKymI,WAAWhU,iBAEjCvrH,iBAAiB,EACjBJ,OAAQF,GACNG,KAAQH,EACRI,cAAiBhH,KAAKQ,gBAEtBwG,cAAiBhH,KAAKQ,kBAtbhCmkE,EAAArqE,UAkcEquI,mBAlcF,SAkcqBhsF,GAAM,IAAAhkB,EAAA34B,KACjBtG,EAAOijD,EAAA,KACb38C,KAAKunI,SAAW7tI,EAAA,YAChBsG,KAAKwnI,SAAW9tI,EAAA,QAChBsG,KAAKynI,QAAU/tI,EAAA,QAAgB,GAE/BsG,KAAK2nI,WAAWoB,WAChB/oI,KAAKwnI,SAASxkI,QAAQ,SAACsrH,GACrB31F,EAAKgvG,WAAWoB,QAAQ3uI,KAAKk0H,EAAOvyH,QAGtCiE,KAAKgpI,iBA7cTrkE,EAAArqE,UAydE0uI,cAzdF,WAydkB,IAAAnwG,EAAA74B,KACdA,KAAK2nI,WAAWrZ,OAAStuH,KAAKynI,QAAQ1rI,KAEtC,IAAMktI,EAAUjpI,KAAKkpI,4BAA4B,OACjDX,EAAA,EAAYxG,aAAakH,GACzB,IAAME,EAAaF,EAAA,WACnBV,EAAA,EAAYxG,aAAaoH,GACzBnpI,KAAK0nI,YAAcyB,EAAA,MAAqBA,EAAA,QAExCnpI,KAAKopI,sBAEL,IAAMtC,EAAS9mI,KAAKkpI,4BAA4B,eACjBhpI,IAA3BF,KAAK2nI,WAAWb,SAClB9mI,KAAK2nI,WAAWb,eAAuB5mI,IAAX4mI,EAC1BA,EAAS9mI,KAAK6lI,YAAL,SAGb7lI,KAAK2nI,WAAWn+C,OAAS2/C,EAAA,WACzBnpI,KAAK2nI,WAAW0B,KAAOF,EAAA,mBAEvB,IAAMz5D,EAAU1vE,KAAK4E,IAAI0a,UACnBsvG,EAAiB5uH,KAAK4E,IAAI6a,UAAU0J,gBAC1CnpB,KAAK2nI,WAAW9nG,MAAQ7/B,KAAKyoI,iBAAiB/4D,EAASk/C,GAEvD5uH,KAAK2nI,WAAWtZ,IACXruH,KAAK2nI,WAAWtZ,KAAOruH,KAAK2nI,WAAW0B,KAAK7nH,QAAQxhB,KAAK2nI,WAAWtZ,KAAO,EAC1EruH,KAAK2nI,WAAWtZ,IAAMruH,KAAK2nI,WAAW0B,KAAK,GAEjDrpI,KAAK2nI,WAAW5nG,WAChB//B,KAAKunI,SAASvkI,QAAQ,SAACwK,GACrBqrB,EAAK8uG,WAAW5nG,QAAQvyB,IAAU,IAGpCxN,KAAK+lI,cAAgB/lI,KAAK2nI,WAAL,iBAGrB3nI,KAAK4E,IAAIkkI,UA7fbnkE,EAAArqE,UAsgBE8uI,oBAtgBF,WAsgBwB,IAAA/vG,EAAAr5B,KAChBjE,SAAMutI,SAAS/sI,SAAOc,SACrB2C,KAAK2nI,WAAW4B,mBACnBvpI,KAAK2nI,WAAW4B,qBAElB,IAAMA,EAAmBvpI,KAAK2nI,WAAW4B,iBACnCC,EAAqBD,EAAiBnuI,OAAO,EAAGmuI,EAAiBrvI,QAGvE8F,KAAKynI,QAAQl5H,WAAWvL,QAAQ,SAACsN,GAC/B,IAAKA,EAAA,aAA2B,CAC9BvU,KAAUuU,EAAUvU,KACpB,IAAMwtD,EAAej5C,EAAUm5H,QAM/B,OALAltI,OAA0B2D,IAAjBqpD,GAA+C,KAAjBA,EACrCA,EAAelwB,EAAKwsG,YAAY9pI,GAGlCutI,KAAah5H,EAAUjT,MAErB,IAAK,SACHA,EAAiB,aAATtB,EAAuB,WAAa,OAC5C,MACF,IAAK,UACHsB,EAAO,WACP,MACF,IAAK,SACHA,EAAO,SACPd,EAAQ2nD,WAAW3nD,GACnBA,EAAQwnD,MAAMxnD,GAAS,EAAIA,EAC3B,MACF,QACEc,EAAOisI,EAIXE,EAAmBxmI,QAAQ,SAACnH,GAC1B,GAAIA,EAAEE,OAASA,GAAQF,EAAEwB,OAASA,EAChC,OAAOd,EAAQV,EAAEU,QAIrB88B,EAAKsuG,WAAW4B,iBAAiBnvI,MAC/B2B,OACAsB,OACAd,cAljBVooE,EAAArqE,UA+jBE4uI,4BA/jBF,SA+jB8BntI,GAC1B,IAAIgpE,EAAO,KAMX,OALA/kE,KAAKynI,QAAQl5H,WAAWvL,QAAQ,SAACsN,GAC/B,GAAIA,EAAUvU,OAASA,EACrB,OAAOgpE,EAAOz0D,IAGXy0D,GAtkBXJ,EAAArqE,UA+kBEwtI,YA/kBF,SA+kBclpH,GACV5e,KAAK4e,SAAW8qH,EAAA,EAAa9qH,GAAW,IAAK,KAG7C5e,KAAK6nI,eAAeh4G,IAAI7vB,KAAK4e,SAASmD,YAGlC/hB,KAAK4lI,WACP5lI,KAAK4E,IAAIkkI,SAET9oI,KAAK4E,IAAI6a,UAAUqoH,YAAY4B,EAAA,EAAiB1pI,KAAK4e,YAzlB3D+lD,EAAArqE,UAqmBEuuI,eArmBF,SAqmBiB1jE,GAAG,IAAArrC,EAAA95B,KACV2jE,EAAgBwB,EAAExB,cAClB9jD,EAAY7f,KAAK4E,IAAI6a,UAAUK,YACrC,GAAI9f,KAAKoR,QAAUuyD,EAAcqrB,QAAUrrB,EAAcqqB,UAAYnuE,EAAW,CAC9E,IAAMO,EAASpgB,KAAK4E,IAAIshG,uBAAuBrmF,GACzC89B,EAAQwnB,EAAExnB,MAEhB,GAAqC,OAAjC39C,KAAKknI,wBACPlnI,KAAKinI,6BAA+B,SAC/B,CAELjnI,KAAKw2B,UAAUiC,OAAOz4B,KAAKknI,yBAE3B,IAAMyC,EAAM3pI,KAAKinI,6BAA6B,GAAK7mH,EAAO,GACpDwpH,EAAM5pI,KAAKinI,6BAA6B,GAAK7mH,EAAO,GACpDypH,EAAMlsF,EAAM,GAAKv9B,EAAO,GACxB0pH,EAAMnsF,EAAM,GAAKv9B,EAAO,GACxB2pH,EAAanuH,KAAKoyC,KAAKpyC,KAAK0X,IAAIq2G,EAAK,GAAK/tH,KAAK0X,IAAIs2G,EAAK,IACxDI,EAAapuH,KAAKoyC,KAAKpyC,KAAK0X,IAAIu2G,EAAK,GAAKjuH,KAAK0X,IAAIw2G,EAAK,IAE1DruH,GAASkuH,EAAME,EAAMD,EAAME,IAAQC,EAAaC,GACpDvuH,EAAQA,GAAS,GAFFkuH,EAAMG,EAAMF,EAAMC,EAAO,EAAI,GAAK,GAEpBjuH,KAAKmyC,KAAKtyC,GAAS,EAChD,IAAMwuH,EAAQD,EAAa,IACrBE,EAAYtuH,KAAKmN,MAAM2gH,EAAA,EAAiBjuH,GAASwuH,GAGvDjqI,KAAK8nI,YAAY9nI,KAAK4e,SAAWsrH,GACjClqI,KAAK6kE,QAAQ/c,UAGf9nD,KAAKknI,wBAA0BlnI,KAAKw2B,UAAU,WAC5CsD,EAAKotG,wBAA0B,MAC9B,KAEHlnI,KAAKinI,6BAA+BtpF,IAvoB1CgnB,EAAArqE,UAkpBE6tI,MAlpBF,SAkpBQ36H,GAEJ,GAAIxN,KAAKsmI,eAAer3G,QAAUxzB,EAAQ6pI,eAAeE,SAAzD,CAGAxlI,KAAK+mI,iBAAmB/mI,KAAKI,IAAIQ,QACjCZ,KAAKsmI,eAAer3G,MAAQxzB,EAAQ6pI,eAAeE,SAEnD,IAAM91D,EAAU1vE,KAAK4E,IAAI0a,UACnBsvG,EAAiB5uH,KAAK4E,IAAI6a,UAAU0J,iBAAmB,EACvD0W,EAAQ7/B,KAAK2nI,WAAW9nG,OAAS7/B,KAAKyoI,iBAAiB/4D,EAASk/C,GAGhEL,GACJ7sC,WAHiB1hF,KAAKmqI,kBAYxB,GANInqI,KAAK2nI,WAAW4B,kBAClBvpI,KAAK2nI,WAAW4B,iBAAiBvmI,QAAQ,SAAC4oC,GACxC2iF,EAAiB3iF,EAAM7vC,MAAQ6vC,EAAMrvC,QAIrCyD,KAAK2nI,WAAWb,OAAQ,CAC1B,IAAM1mH,EAASpgB,KAAK4E,IAAI6a,UAAUK,YAC5Bo2E,EAASl2F,KAAK0nI,WAAW,GAAK7nG,EAAQ,EAAIslG,EAAA,EAAe/3D,kBAAoB+3D,EAAA,EAAe93D,eAC5F4oB,EAASj2F,KAAK0nI,WAAW,GAAK7nG,EAAQ,EAAIslG,EAAA,EAAe/3D,kBAAoB+3D,EAAA,EAAe93D,eAC5FrsB,GACJ5gC,EAAO,GAAK81E,EACZ91E,EAAO,GAAK61E,EACZ71E,EAAO,GAAK81E,EACZ91E,EAAO,GAAK61E,GAER6wC,EAAS9mI,KAAKoqI,WAAWvqG,EAAO7/B,KAAK2nI,WAAWtZ,IAAKrtE,GAC5C,OAAX8lF,IACFvY,EAAA,OAA6BuY,GAIjCyB,EAAA,EAAYxtH,aAAa/a,KAAK2nI,WAAWtZ,KACzCka,EAAA,EAAY/qH,aAAaxd,KAAK2nI,WAAWrZ,QAGzC,IAAM1pH,EAAM,IAAIylI,EAAA,MAChBzlI,EAAI0lI,QAAQtqI,KAAK4E,IAAI6a,WAIrB,IAHA,IAAM8qH,EAAYvqI,KAAKguC,iBAAiB1mB,cAActnB,KAAK4E,IAAIqiB,iBACzDujH,KACFC,GAAqB,EAChBzwI,EAAI,EAAGmH,EAAKopI,EAAUrwI,OAAQF,EAAImH,EAAInH,IAAK,CAClD,IAAIyI,EAAQ8nI,EAAUvwI,GAChB2I,EAAWF,EAAMpG,IAAI,YAC3B,GAAIsG,EAAU,CACZ,IAAM+nI,EAAc/nI,EAASuB,UACvBymI,EAAchoI,EAASioI,aAAejoI,EAAS2B,OACrD,GAAIomI,GAAeC,EAAa,CAC9B,IAAMxmI,EAASnE,KAAKm3B,YAAYuzG,GAC5BvmI,EACF1B,EAAQzC,KAAKguC,iBAAiB3pC,oBAC5BF,EAAOZ,IACPonI,EACAxmI,EAAOC,UACPD,EAAO9G,MAGTyG,QAAQC,MAAM,qBAAsB2mI,IAOtCjoI,aAAiBooI,EAAA,IAAkD,IAAlCpoI,EAAMpG,IAAI,sBAC7CouI,GAAqB,GAGvBD,EAAcpwI,KAAKqI,GAErBmC,EAAIkmI,cAAc,IAAIC,EAAA,GACpBzmI,OAAQkmI,EACR5lG,iBAAoB6lG,KAGtB,IAAMO,EAAOhrI,KAAKymI,WAAWrY,WAAWxpH,EAAKi7B,EAAO7/B,KAAK2nI,WAAWtZ,IAClEruH,KAAK2nI,WAAWrZ,OAAQ9gH,EAAQ+gH,GAG5BjqH,KACNtE,KAAKymI,WAAWvX,YAAY5qH,EAAQtE,KAAKumI,qBACvC3X,GACEtqH,EAAOpK,OAAS,GAClB8wI,EAAKz8H,WAAW3J,IAAIN,OAAOuU,QAAQvU,EAAO,IAG5CtE,KAAKymI,WAAWpU,aAAa2Y,GAC3BnpF,QAAS7hD,KAAK+mI,iBAAiBjmI,UAC7B6C,KACF3D,KAAKirI,2BAA2BjuI,KAAKgD,MACrCA,KAAKkrI,yBAAyBluI,KAAKgD,OAIrC4E,EAAI4jF,UAAU,QAvvBlB7jB,EAAArqE,UA+vBEm+B,OA/vBF,WAiwBkC,OAA1Bz4B,KAAK+mI,kBACP/mI,KAAK+mI,iBAAiB/iI,UAKW,OAA/BhE,KAAKgnI,uBACPhnI,KAAKw2B,UAAUiC,OAAOz4B,KAAKgnI,uBAGzBhnI,KAAKsnI,QAAQptI,OAAS,GACxB8F,KAAKymI,WAAWhuG,OAAOz4B,KAAKsnI,SAG9BtnI,KAAKmrI,qBA/wBTxmE,EAAArqE,UAuxBE6wI,kBAvxBF,SAuxBoBC,GAChBprI,KAAKsmI,eAAer3G,MAAQm8G,GAAkB3vI,EAAQ6pI,eAAeC,WACrEvlI,KAAKsnI,QAAU,IAzxBnB3iE,EAAArqE,UAmyBE6vI,eAnyBF,WAoyBI,IAAIkB,SAAe3xI,SAAM4xI,SACnBC,KA2BN,OA1BgBvrI,KAAK0mI,iBAAiBnpG,QAC9Bv6B,QAAQ,SAASwiB,GACvB9rB,KACA4xI,KACA9lH,EAAO7H,SAAS3a,QAAQ,SAASuV,EAASve,GACxCuuI,EAAA,EAAYjlI,OAAOiV,GACnB,IAAM6E,EAAa6nH,EAAA,EAAsB9nH,yBAAyB5E,GACxD,IAANve,IACFsxI,EAAUjxI,OAAO0iD,KAAK3/B,GAAYxY,IAAI,SAAyB0jF,GAC7D,OAAOtoF,KAAKs5C,WAAWgvC,IACtBtoF,OAELtG,EAAKU,KAAKC,OAAO0iD,KAAK3/B,GAAYxY,IAAI,SAAAgM,GAAA,OAAOwM,EAAWxM,OACvD5Q,MACCsrI,EAAQpxI,SACVmxI,GAEIn8F,MAAOlvC,KAAKs5C,WAAW9zB,EAAOjgB,OAC9BimI,OACEF,UACA5xI,SAGN6xI,EAAcnxI,KAAKixI,KAEpBrrI,MACIurI,GAh0BX5mE,EAAArqE,UA80BEmuI,iBA90BF,SA80BmB/4D,EAASk/C,GACxB,IAAMplC,EAASxpF,KAAK2nI,WAAWn+C,OAAOvsF,QACtC,YAAgBiD,IAAZwvE,QAA4CxvE,IAAnB0uH,EACpB5uH,KAAKwmI,gBAAgB/2D,gBAAgBC,EAASk/C,EACnD5uH,KAAK0nI,WAAYl+C,EAAOzkF,WAErB/E,KAAK2nI,WAAWn+C,OAAO,IAp1BlC7kB,EAAArqE,UA41BE2wI,2BA51BF,SA41B6BtuF,GACzB,IACMsxE,EADoDtxE,EAAKjjD,KAC5Cu0H,IACnBsa,EAAA,EAAYjlI,OAAO2qH,EAAI/zH,OAAS,GAChC8F,KAAKsnI,QAAUrZ,EACfjuH,KAAKyrI,WAAWxd,IAj2BpBtpD,EAAArqE,UAy2BEmxI,WAz2BF,SAy2Baxd,GACTjuH,KAAK+mI,iBAAmB/mI,KAAKI,IAAIQ,QACjCZ,KAAKymI,WAAWlU,UAAUtE,GACxBpsE,QAAS7hD,KAAK+mI,iBAAiBjmI,UAC7B6C,KACF3D,KAAK0rI,wBAAwB1uI,KAAKgD,KAAMiuH,GACxCjuH,KAAKkrI,yBAAyBluI,KAAKgD,QA/2BzC2kE,EAAArqE,UAy3BEoxI,wBAz3BF,SAy3B0Bzd,EAAKtxE,GAAM,IAAAtiB,EAAAr6B,KAC3B2rI,EAAoDhvF,EAAKjjD,KAClDiyI,EAAOv+H,KAEG,SAAjBu+H,EAAOj/D,QAET5vE,OAAOqlD,SAAS+tE,KAAOlwH,KAAKymI,WAAWjU,aAAavE,GACpDjuH,KAAKmrI,sBAELrnI,QAAQC,MAAM4nI,EAAO5nI,OACrB/D,KAAKkrI,4BAIPlrI,KAAKgnI,sBAAwBhnI,KAAKw2B,UAAU,WAC1C6D,EAAKoxG,WAAWxd,IACf,KAAM,IAz4BftpD,EAAArqE,UAi5BE4wI,yBAj5BF,WAk5BIlrI,KAAKmrI,kBAAkB1vI,EAAQ6pI,eAAeG,kBAl5BlD9gE,EAAArqE,UA65BE8vI,WA75BF,SA65BavqG,EAAOwuF,EAAKrtE,GAAM,IAAApmB,EAAA56B,KACrB8mI,GAAU8E,YACV9rI,EAAiBE,KAAK02B,gBAGtB0N,EAAiBpkC,KAAKguC,iBAAiBjnB,gBAAgB/mB,KAAK4E,IAChE+wB,EAAA,EAAQmmD,qBAyDV,OAxDe97E,KAAKguC,iBAAiB1mB,cAAc8c,GAG5Cr/B,UAAU/B,QAAQ,SAACP,GACxB,IAAMmpI,KACN,GAAInpI,EAAMwmB,cAAgBxmB,EAAM+mB,YAE9B,GAAI/mB,aAAiBopI,EAAA,EAAa,CAChC,IAAM9lH,KAAetjB,EAAMpG,IAAI,iBAC3ByvI,EAAQlxG,EAAKmxG,wBAAwBhmH,GACpC+lH,IACHA,EAAQlxG,EAAKoT,iBAAiBlmB,iBAAiBrlB,IAG7CqpI,GACFF,EAAQxxI,MACN2B,KAAQ+D,EAAewF,UAAUygB,GACjC+lH,OAAUA,SAGT,CACL,IAAMtmH,EAA0C/iB,EAAM+mB,YAEnChE,EAAOiE,YAAP,OAA6B1R,MAAM,KAC3C/U,QAAQ,SAACjH,GAClB,IAAI+vI,EAAQlxG,EAAKmxG,wBAAwBhwI,GACpC+vI,IACHA,EAAQlxG,EAAKoT,iBAAiBhmB,gBAAgBxC,EAAO+pG,SAAUxzH,EAC7D8jC,OAAO3/B,OAAWA,OAAWA,EAAWslB,EAAOwmH,YAAa3d,EAC5DzzF,EAAKgsG,kBAAkBC,QAAU7lF,OAAO9gD,EACxC06B,EAAKh2B,IAAI6a,UAAUgyB,gBAAgBylB,UACnCt8B,EAAKgsG,kBAAkB9/H,OAAOrE,EAAM+mB,YAAYwiH,eAKhDF,GAAyB,IAAhB/vI,EAAK7B,QAChB0xI,EAAQxxI,KAAKC,OAAOgrB,QAClBtpB,MAAwE,IAAhE6+B,EAAKgsG,kBAAkBrhI,MAAM9C,EAAM+mB,YAAYwiH,aAAyB,GAC9ElsI,EAAewF,UAAUvJ,GAC3B+vI,OAAUA,IACyB,SAAlCrpI,EAAM+mB,YAAYwiH,aACnB3d,IAAOA,UAQbud,EAAQ1xI,OAAS,GACnB4sI,EAAA,QAAkB1sI,MAAMwxI,QAAWA,MAKhC9E,EAAA,QAAkB5sI,OAAS,EAAK4sI,EAAS,MA59BpDniE,EAAArqE,UAu+BEyxI,wBAv+BF,SAu+B0BhmH,GACtB,IAAM2e,EAAY2sE,EAAA,EAAepwG,yBAAyBjB,KAAKioI,eAAgBliH,GAC3E7jB,SACAwiC,GAAaA,EAAUpjC,WACzBY,EAAOmvG,EAAA,EAAe3vG,iBAAiBgjC,EAAUpjC,SAAUykB,IAE7D,IAAIkmH,SAIJ,OAHI/pI,GAAQA,EAAKS,WACfspI,EAAc/pI,EAAKS,SAASspI,aAEvBA,GAj/BXtnE,EAAArqE,UA2/BE4xI,UA3/BF,SA2/BYC,GACR,IAAI7d,SACJtuH,KAAKwnI,SAASxkI,QAAQ,SAACrH,GACrB,GAAIA,EAAEI,OAASowI,EAEb,OADA7d,EAAS3yH,GACF,IAGXqE,KAAKynI,QAAUnZ,EACftuH,KAAKgpI,iBApgCTrkE,EAAArqE,UA8gCE8xI,YA9gCF,SA8gCcnkH,GACV,QAAkB/nB,IAAd+nB,EAAyB,CAC3B,IAAMynD,EAAU1vE,KAAK4E,IAAI0a,YAAc,EAAG,GAC1Ctf,KAAK2nI,WAAW9nG,MAAQ5X,EACxB,IAAMhZ,EAAMjP,KAAKwmI,gBAAgBr2D,qBAAqBT,EAAS1vE,KAAK0nI,WAAYz/G,GAC1EokH,EAAcrsI,KAAK4E,IAAI6a,UAAU6sH,oBAAoBr9H,EAAK,EAAG,GACnEjP,KAAK4E,IAAI6a,UAAU8sH,cAAcF,GAEjCrsI,KAAK4E,IAAIkkI,SACT9oI,KAAK4nI,wBAAyB,EAEhC,OAAO5nI,KAAK2nI,WAAW9nG,OAzhC3B8kC,EAAArqE,UAkiCEkyI,OAliCF,SAkiCSne,GACLruH,KAAK2nI,WAAWtZ,IAAMA,GAniC1B1pD,EAAArqE,UA8iCEmyI,QA9iCF,SA8iCUC,GACN,OAAO1sI,KAAKsmI,eAAer3G,QAAUxzB,EAAQ6pI,eAAeoH,IA/iChE/nE,EAAA,GAmjCAlpE,EAAQ+0B,WAAW,qBAAsB/0B,EAAQ+7C,aAGlCl6C,EAAA,sDC5vCf,SAAAo4B,GAAA,IAAAi3G,EAAAtxI,EAAA,KAWMI,GAXNJ,EAAA,KAAAA,EAAA,KAWgByM,QAAQpM,OAAO,sBAAuB,aAgBtDD,EAAQy7C,WAAa,WACnB,OACE1E,SAAU,IACVhiB,WAAY/0B,EAAQ+7C,YACpBF,kBAAkB,EAClB5E,OACE1qC,QAAW,gCAKjBvM,EAAQs3C,UAAU,qBAAsBt3C,EAAQy7C,YAahDz7C,EAAQ+7C,YAAc,SAASC,EAAU33C,GAKvCE,KAAK+3C,SAAWN,EAOhBz3C,KAAK02B,gBAAkB52B,EAOvBE,KAAKgI,SAnBPvM,EAAQ+7C,kDA0BR/7C,EAAQ+7C,YAAYl9C,UAAUw/C,QAAU,WACtC,IAAMC,EAAO/5C,KAAK02B,gBAAgBsjB,qBAClCtkB,EAAEukB,eAAeC,UAAUH,GAC3BrkB,EAAEukB,eAAeE,iBAAiB,IAAIwyF,EAAA,GACV,iBAAjB3sI,KAAKgI,UACdhI,KAAKgI,QAAUF,QAAQ8kI,SAAS5sI,KAAKgI,UAEvChI,KAAK+3C,SAASkC,eAAej6C,KAAKgI,UAGpCvM,EAAQ+0B,WAAW,+BACjB/0B,EAAQ+7C,aAGKl6C,EAAA,qDC3Ff,IAAAmlB,EAAApnB,EAAA,GAAAmY,EAAAnY,EAAA,GAAAwxI,EAAAxxI,EAAA,KAAAyxI,EAAAzxI,EAAA,KAQMI,EAAUqM,QAAQpM,OAAO,kBAC7BoxI,EAAA,EAAgC/wI,KAChC8wI,EAAA,EAAoBnxI,OAAOK,OA0B7B,SAASgxI,EAA0Bx/G,EAAQw/G,GACzC,OAAOA,EAA0Bx/G,GAvBnC9xB,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoC57C,EAAQ,SAIjEI,EAAQc,MAAM,4BAKZ,SAACgxB,GACC,IAAMgqB,EAAchqB,EAAA,0BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,sFAiCN97C,EAAQy7C,YACN1mB,WAAY,uCACZ+zC,UACEh2D,WAAc,4BACdy+H,SAAY,0BACZz0H,QAAW,0BAEb86B,SACE45F,KAAQ,KAEV11F,YAAaw1F,GAGftxI,EAAQipE,UAAU,iBAAkBjpE,EAAQy7C,YAa5Cz7C,EAAQ+7C,YAAc,SAASnqB,EAAQwqB,GAOrC73C,KAAKuO,WAOLvO,KAAKgtI,UAAW,EAOhBhtI,KAAKuY,QAQLvY,KAAKod,WAMLpd,KAAKmmC,OAAS9Y,EAMdrtB,KAAKo4C,iBAAmBP,EAYxB73C,KAAKktI,WAAY,GArDnBzxI,EAAQ+7C,iDA4DR/7C,EAAQ+7C,YAAYl9C,UAAUw/C,QAAU,WACtC95C,KAAKod,WAAapd,KAAKuY,QAAQ8E,gBAG/B,IAAM8Q,EAAM1L,EAAA,EAAcziB,MAC1BA,KAAKo4C,iBAAiB9Q,eACpBnZ,EACA3a,EAAA,EAAgBxT,KAAKuY,QAAS,iBAAkBvY,KAAK++C,6BAA8B/+C,QAUvFvE,EAAQ+7C,YAAYl9C,UAAU6yI,kBAAoB,SAASpxI,GACzDiE,KAAKktI,WAAY,EACjB,IAAM3wI,EAAQyD,KAAKod,WAAWrhB,GAC9BiE,KAAKuY,QAAQ7V,IAAI3G,EAAMQ,GACvByD,KAAKktI,WAAY,GAOnBzxI,EAAQ+7C,YAAYl9C,UAAU8qE,WAAa,WACzC,IAAMj3C,EAAM1L,EAAA,EAAcziB,MAC1BA,KAAKo4C,iBAAiB5Q,iBAAiBrZ,IAQzC1yB,EAAQ+7C,YAAYl9C,UAAUykD,6BAA+B,SAAS5zB,GAChEnrB,KAAKktI,YAGTltI,KAAKod,WAAW+N,EAAIva,KAAOua,EAAIE,OAAOhvB,IAAI8uB,EAAIva,KAC9C5Q,KAAKmmC,OAAOyN,WAIdn4C,EAAQ+0B,WAAW,2BAA4B/0B,EAAQ+7C,aAGxCl6C,EAAA,mCCpMf,SAAAo4B,GAAA,IAAA03G,EAAA/xI,EAAA,IAAA6iE,EAAA7iE,EAAA,GAAAgyI,EAAAhyI,EAAA,IAAAg2E,EAAAh2E,EAAA,IAQMI,EAAUqM,QAAQpM,OAAO,sBAC7B0xI,EAAA,EAAsB1xI,OAAOK,OA2B/BN,EAAQyyD,WAAa,WACnB,OACE19B,WAAY,yCACZkiB,OAAO,EACP4E,kBACE35B,SAAY,iCAMlBliB,EAAQs3C,UAAU,qBAAsBt3C,EAAQyyD,YAehDzyD,EAAQ+7C,YAAc,SAASC,EAAU93C,EAAW0tB,EAClD8a,GAAmB,IAAA9lC,EAAArC,KAMnBA,KAAK2d,SAML3d,KAAK+3C,SAAWN,EAEhB,IACM5xB,GAAM,qBADAq4C,EAAA,EAAcl+D,OACaoH,KAAK,KAM5CpH,KAAKkgD,IAAMr6B,EAMX7lB,KAAKiqG,eAAiB9hE,EAEtB,IAAIpI,SAoBJ,GAlBEA,EADEpgC,EAAUY,IAAI,4BACNZ,EAAUtD,IAAI,6BAEb+wI,EAAA,EAAsBvvH,WAAWG,KAO9Che,KAAKm5C,MAAQ,KAMbn5C,KAAK68E,UAGD98C,EAAQ7lC,OAAS,EAAG,CACtBu9C,EAASstB,KAAK,KAAMl/C,GACpB,IAAMynH,EAAQ53G,EAAE,UACdktC,MAAS,gBACT2qE,kBAAmB1nH,IAClBm9C,SAASvrB,EAASzpB,SAAS,IAE9BhuB,KAAKm5C,MAAQm0F,EACb,IAAIE,SAEJztG,EAAQ/8B,QAAQ,SAACwK,GACfggI,EAAQ93G,EAAE,UACPstC,SAASsqE,GACTz+E,OAAOn5B,EAAE,SACRw6F,KAAQ,IACR91G,KAAQ5M,IAEPmuB,IACE,QAAS9V,GAAIze,KAAK,KACnB/E,EAAKorI,qBAAqBzwI,KAA1BqF,EAAqCmL,KAG3CnL,EAAKw6E,OAAOziF,KAAKozI,KAQrBxtI,KAAKunI,SAAWxnG,EAEhB0X,EAAS9b,IAAI,QAAS9V,GAAIze,KAAK,KAAMpH,KAAK0tI,oBAAoB1wI,KAAKgD,OAEnEqtB,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QApFlDvE,EAAQ+7C,0EAmGR/7C,EAAQ+7C,YAAYl9C,UAAUozI,oBAAsB,WAAW,IAAA3nI,EAAA/F,KAEvD2d,EAAW3d,KAAK2d,SAASwJ,WAE/B,GAA6B,IAAzBnnB,KAAKunI,SAASrtI,OAChB8F,KAAKiqG,eAAevsF,OAAOC,EAAU3d,KAAKunI,SAAS,SAC9C,GAAwB,IAApB5pH,EAASzjB,OAAc,CAChC,IACMmiB,EADUsB,EAAS,GACJrB,cACjBkxH,SACJxtI,KAAKunI,SAASvkI,QAAQ,SAACwK,EAAQxT,GAC7BwzI,EAAQznI,EAAK82E,OAAO7iF,GAChBwT,IAAW4/H,EAAA,EAAsBvvH,WAAWC,MAC1CzB,aAAgBgxH,EAAA,GAChBhxH,aAAgBg1D,EAAA,EAClBm8D,EAAM/5C,YAAY,YAElB+5C,EAAMp/E,SAAS,iBAezB3yD,EAAQ+7C,YAAYl9C,UAAUmzI,qBAAuB,SAASjgI,EAAQgV,GACpE,IAAKkT,EAAElT,EAAM6I,OAAOsiH,eAAelzG,SAAS,YAAa,CACvD,IAAM9c,EAAW3d,KAAK2d,SAASwJ,WAC/BnnB,KAAKiqG,eAAevsF,OAAOC,EAAUnQ,KASzC/R,EAAQ+7C,YAAYl9C,UAAUkgD,eAAiB,WAC7C,IAAM30B,EAAK7lB,KAAKkgD,IAEhBlgD,KAAK+3C,SAAS+nE,KAAK,QAASj6F,GAAIze,KAAK,MAEjCpH,KAAKm5C,QACPn5C,KAAKm5C,MAAMvJ,SACX5vC,KAAK68E,OAAO75E,QAAQ,SAACwqI,GACnBA,EAAM1tB,KAAK,QAASj6F,GAAIze,KAAK,QAE/BpH,KAAK68E,OAAO3iF,OAAS,EACrB8F,KAAKm5C,MAAQ,OAKjB19C,EAAQ+0B,WACN,+BAAgC/0B,EAAQ+7C,aAG3Bl6C,EAAA,sDCjOf,SAAAo4B,GAAAr6B,EAAA,SAAAooC,EAAApoC,EAAA,GASMI,EAAUqM,QAAQpM,OAAO,mBA6C/BD,EAAQy7C,WAAa,SAAS9gB,GAC5B,OACEoc,SAAU,IAMVC,KAAM,SAACC,EAAO9oB,EAAS+oB,GAErB,IAAMi7F,EACGl7F,EAAM5kB,MAAM6kB,EAAA,kBACrBlP,EAAA,EAAYngC,OAAOuJ,MAAMC,QAAQ8gI,IAEjCl7F,EAAMoqB,iBAAiB,kBAAM8wE,GAAU,WACrCA,EAAS1zI,QAAUk8B,EAASy3G,EAAiB,KAG/C,IACM7lI,EAuEN,SAAoBA,GAClB,IAAI61C,cAEY39C,IAAZ8H,EACF61C,GAAOiwF,gBAFsB,8BAIM5tI,IAA/B8H,EAAA,kBACFA,EAAA,gBAL2B,wBAO7B61C,EAAgD71C,GAElD,OAAO61C,EAlFO5X,CADMyM,EAAM5kB,MAAM6kB,EAAA,sBAG5Bo7F,EAAar7F,EAAM5kB,MAAM6kB,EAAA,sBACzBq7F,EAAct7F,EAAM5kB,MAAM6kB,EAAA,yBAMhC,SAASk7F,IAIP,IADA,IAAMvsI,EAAWsoB,EAAQtoB,WAChBtH,EAAI,EAAGA,EAAIsH,EAASpH,SAAUF,EACrC8N,QAAQ8hB,QAAQtoB,EAAStH,IAAIN,KAAK,MAAOM,GAG3C,IAAMi0I,EAAkBv4G,EAAE9L,GAGtBqkH,EAAgBv0I,KAAK,iBACvBu0I,EAAgBnuB,IAAI,cACpBmuB,EAAgBL,SAAS,YAG3B,IAAMM,GACJC,KAAQ,IACRvC,SACEwC,qBAAsBpmI,EAAA,mBAKtBA,EAAA,kBACFkmI,EAAA,WAAgClmI,EAAA,iBAI9BA,EAAA,uBACFkmI,EAAA,YAAiClmI,EAAA,qBACjCkmI,EAAA,sBAA0C,GAG5CD,EAAgBL,SAASM,GAIzBD,EAAgBtyG,GAAG,aAAc,SAACnZ,EAAO6rH,GACvC,IAAMC,EAAW54G,EAAE24G,EAAG7rI,KAAK,IAAI9I,KAAK,OAC9B60I,EAAWF,EAAG7rI,KAAKgkB,QAGzBkP,EAAE24G,EAAG7rI,KAAK,IAAI9I,KAAK,MAAO60I,GAG1B77F,EAAMkB,OAAO,WACXg6F,EAASxyI,OAAOmzI,EAAU,EAAGX,EAASxyI,OAAOkzI,EAAU,GAAG,MAIxDP,aAAsBS,UACxBT,EAAWlzI,MAAMmzI,GAAcpkH,EAASgkH,UAhFpDnyI,EAAQy7C,gCA4GRz7C,EAAQs3C,UAAU,eAAgBt3C,EAAQy7C,YAG3B55C,EAAA,sDCrKf,SAAAo4B,GAAAr6B,EAAA,KAAAA,EAAA,SASMI,EAAUqM,QAAQpM,OAAO,kBAqB/BD,EAAQy7C,WAAa,WACnB,OACE1E,SAAU,IACVE,OAAO,EACPliB,WAAY,uCACZiiB,KAAM,SAACC,EAAOqpD,EAAMppD,EAAO87F,GACzBA,EAAgBC,UAAU/yG,GAAG,oBAAqB,WAIhC8yG,EAAgBC,UAAUh1I,KAAK,cAC/C,QAAmBgjD,OAAQ,IAG7B+xF,EAAgBC,UAAU/yG,GAAG,sBAAuB,WAClD8yG,EAAgBE,QAAQ9rH,OACxB4rH,EAAgBG,OAAQ,IAG1BH,EAAgBC,UAAUG,SACxBvpE,UAAW,OACXM,MAAM,EACNr0B,QAASk9F,EAAgBE,QACzBG,UAAWn8F,EAAA,sBAAiC,UAG1CA,EAAA,oBACFjd,EAAEid,EAAA,oBAA6BhX,GAAG,SAAU,WAC1C8yG,EAAgBM,mBAIpBr8F,EAAMxkB,IAAI,WAAY,WACpBugH,EAAgBC,UAAUG,QAAQ,WAClCJ,EAAgBC,UAAUM,OAAO,uBACjCP,EAAgBC,UAAUM,OAAO,0BAYzCvzI,EAAQwzI,gBAAkB,WACxB,OACEz8F,SAAU,IACVa,QAAS,gBACTZ,KAAM,SAACC,EAAOqpD,EAAMppD,EAAO87F,GACzBA,EAAgBC,UAAY3yC,KAWlCtgG,EAAQyzI,iBAAmB,WACzB,OACE18F,SAAU,IACVa,QAAS,gBACTZ,KAAM,SAACC,EAAOqpD,EAAMppD,EAAO87F,GACzBA,EAAgBE,QAAU5yC,EAC1BA,EAAKozC,UAeX1zI,EAAQ2zI,mBAAqB,SAAS/hH,GAoBpC,SAASgiH,EAAYC,GACftvI,KAAK0uI,UAAU,KAAOY,EAAWjkH,QACnCrrB,KAAK2uI,QAAQ3gH,SAAS,KAAOshH,EAAWjkH,OACiB,IAAzDrrB,KAAK2uI,QAAQ3gH,SAASyuB,KAAK6yF,EAAWjkH,QAAQnxB,QAAgB8F,KAAK4uI,OACnE5uI,KAAK+uI,iBAlBT/uI,KAAK4uI,OAAQ,EAMb5uI,KAAK0uI,eAAYxuI,EAMjBF,KAAK2uI,aAAUzuI,EAUf4H,QAAQ8hB,QAAQ,QAAQ+R,GAAG,YAAa0zG,EAAYryI,KAAKgD,OAEzDqtB,EAAOa,IAAI,WAAY,WACrBpmB,QAAQ8hB,QAAQ,QAAQk2F,IAAI,YAAauvB,MA/B7C5zI,EAAQ2zI,sCAwCR3zI,EAAQ2zI,mBAAmB90I,UAAUy0I,eAAiB,WACpD/uI,KAAK4uI,OAAQ,EACb5uI,KAAK0uI,UAAUG,QAAQ,SAIzBpzI,EAAQ+0B,WAAW,wBAAyB/0B,EAAQ2zI,oBACpD3zI,EAAQs3C,UAAU,cAAet3C,EAAQy7C,YACzCz7C,EAAQs3C,UAAU,oBAAqBt3C,EAAQwzI,iBAC/CxzI,EAAQs3C,UAAU,qBAAsBt3C,EAAQyzI,kBAGjC5xI,EAAA,8PCpIf,IAAM7B,EAAUqM,QAAQpM,OAAO,aAC7B6zI,EAAA,EAAwB7zI,OAAOK,KAC/ByzI,EAAA,EAAwB9zI,OAAOK,KAC/B0zI,EAAA,EAAe/zI,OAAOK,KACtB2zI,EAAA,EAAuBh0I,OAAOK,KAC9B4zI,EAAA,EAA6B5zI,KAC7B6zI,EAAA,EAAiB7zI,KACjBipI,EAAA,EAAyBtpI,OAAOK,KAChC8zI,EAAA,EAA4B9zI,OA2B9B,SAAS+zI,EAAqBr4F,EAAUlqB,EAAQuiH,GAC9C,OAAOA,EAAqBr4F,EAAUlqB,GAnBxC9xB,EAAQs0I,sBAAwB,SAACnmH,EAAS+oB,GACxC,IAAM4E,EAAc5E,EAAA,qBACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,cAGJ97C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,aAAc57C,EAAQ,gEAoG3CI,EAAQy7C,YACNqtB,UACEyrE,WAAc,wBACdC,YAAe,yBACfrrI,IAAO,gBACPsrI,YAAe,wBACflY,iBAAoB,qBACpBmY,eAAkB,oBAClBC,YAAe,yBACfC,aAAgB,0BAChBC,uBAA0B,oCAC1BC,oBAAuB,sBACvBx8C,QAAW,qBACXluB,MAAS,mBACT2qE,eAAkB,qBAEpBhgH,WAAY,sBACZ+mB,YAAau4F,GAIfr0I,EAAQc,MAAM,uBAAwBd,EAAQs0I,uBAI9Ct0I,EAAQipE,UAAU,YAAajpE,EAAQy7C,YAMvCz7C,EAAQg1I,kBAAR,WAsBE,SAAA9rE,EAAYltB,EAAUpqB,EAAQmhC,EAAUp4B,EAAUz2B,EAChDG,EAAgB4wI,EAAoBC,EACpCvtD,EAAuB9sD,EAAW8oB,EAAgBwxF,gGAAyB3oI,CAAAjI,KAAA2kE,GAO3E3kE,KAAK+3C,SAAWN,EAMhBz3C,KAAKmmC,OAAS9Y,EAMdrtB,KAAK05F,SAAWlrC,EAMhBxuD,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK02B,gBAAkB52B,EAMvBE,KAAK42B,WAAaN,EAMlBt2B,KAAKu/C,gBAAkBH,EAMvBp/C,KAAK6wI,gBAAkBD,EAMvB5wI,KAAK8wI,mCAAqCH,EAM1C3wI,KAAKojF,sBAAwBA,EAM7BpjF,KAAKS,cAEDd,EAAUY,IAAI,kBAChBP,KAAKS,cAAgBd,EAAUtD,IAAI,iBAOrC2D,KAAKwzG,oBAAsBk9B,EAM3B1wI,KAAK4E,IAML5E,KAAK+wI,WAML/wI,KAAKwwI,eAQLxwI,KAAKowI,YAMLpwI,KAAKqwI,aAMLrwI,KAAKiwI,YAMLjwI,KAAK6lE,MAOL7lE,KAAK+zF,QAAU,GAOf/zF,KAAKswI,uBAMLtwI,KAAK8yG,gBAAkB1vB,EAAsBx2D,oBAM7C5sB,KAAKkwI,eAMLlwI,KAAKg4H,iBAMLh4H,KAAKgI,SACHivH,WAAW,GAObj3H,KAAKmwI,eAMLnwI,KAAKgxI,YAMLhxI,KAAKgwI,WAAa,GAMlBhwI,KAAK4Z,MAML5Z,KAAKixI,oBAAqB,EAM1BjxI,KAAKkxI,UAMLlxI,KAAKuwI,oBAnOT,OAAA5rE,EAAA9nC,SAAA,gNAAA8nC,EAAArqE,UA0OEw/C,QA1OF,WA0OY,IAAAz3C,EAAArC,KACFF,EAAiBE,KAAK02B,gBAC5B12B,KAAKowI,aAAmC,IAArBpwI,KAAKowI,YACxBpwI,KAAKqwI,cAAqC,IAAtBrwI,KAAKqwI,kBACNnwI,IAAfF,KAAK6lE,QACP7lE,KAAK6lE,MAAQ,IAEf7lE,KAAKiwI,iBAAmC/vI,IAArBF,KAAKiwI,YAA4BjwI,KAAKiwI,YACvDnwI,EAAewF,UAAU,WAG3B,IAAI6rI,EAAYnxI,KAAKswI,uBA6CrB,GA3CEa,OADgBjxI,IAAdixI,GACWnxI,KAAK4E,IAAI6a,UAAUgyB,iBAEpBzxC,KAAKwzG,oBAAoBxF,kBACJmjC,GAGnCnxI,KAAKswI,uBAAyBa,EAEzBnxI,KAAKowI,aAERpwI,KAAK+3C,SAAS0E,KAAK,SAAS9gB,GAAG,aAAc,WAC3Ct5B,EAAKqqB,UAIL1sB,KAAKwwI,gBACPxwI,KAAKwwI,iBAGPxwI,KAAKoxI,cAELpxI,KAAK8yG,gBAAgBx6F,SAAStY,KAAKqxI,gBAAgBr0I,KAAKgD,OAEpDA,KAAKg4H,kBACPsZ,EAAA,EAAatxI,KAAKgI,QAAShI,KAAKg4H,kBAGlCh4H,KAAKuxI,gBAELvxI,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAKuX,OACX5Z,KAAKwxI,cAAcx0I,KAAKgD,OAG1BA,KAAKkxI,UAAYlxI,KAAKyxI,gBACpBzxI,KAAKuwI,qBAEHx7D,OAAQ/0E,KAAK0xI,QAAQ10I,KAAKgD,MAC1Bi8C,MAAOj8C,KAAK2xI,OAAO30I,KAAKgD,MACxB04H,cAAe14H,KAAK4xI,eAAe50I,KAAKgD,QAIxCA,KAAKS,cAAe,CACtB,IAAMoxI,EAAc7xI,KAAKS,cAAckjD,SAAS,UAChD,GAAIkuF,EAAa,CACf,IAAIC,EAAc,EACd9xI,KAAKS,cAAckjD,SAAS,yBAC9BmuF,EAAcjwG,SAAS7hC,KAAKS,cAAckjD,SAAS,uBAAwB,KAE7E,IAAIouF,SACA/xI,KAAKS,cAAckjD,SAAS,kBAC9BouF,EAAUlwG,SAAS7hC,KAAKS,cAAckjD,SAAS,kBAAmB,IACzD3jD,KAAKS,cAAckjD,SAAS,cACrCouF,EAAUlwG,SAAS7hC,KAAKS,cAAckjD,SAAS,YAAa,KAE9D3jD,KAAKgyI,gBAAgBH,EAAaC,EAAaC,MA/SvDptE,EAAArqE,UA8TEm3I,gBA9TF,SA8TkBlB,EAAqBW,GACnC,YAA4BhxI,IAAxBqwI,EACKW,GAGP9yF,KAAMmyF,EAAoBnyF,KAC1BnC,WAAqC/7C,IAA9BqwI,EAAoBt0F,MACzBi1F,EAAUj1F,MAAQ,WAChBi1F,EAAUj1F,QACVs0F,EAAoBt0F,SAExBs8E,aAAcgY,EAAoBhY,aAClCG,cAAe6X,EAAoB7X,cACnC3jD,YAAuC70E,IAA/BqwI,EAAoBx7D,OAC1Bm8D,EAAUn8D,OAAS,SAAS5pD,EAAKse,EAAK6uF,GACpC4Y,EAAUn8D,OAAO5pD,EAAKse,EAAK6uF,GAC3BiY,EAAoBx7D,OAAO5pD,EAAKse,EAAK6uF,IAEzCE,aAAc+X,EAAoB/X,eAhVxC7zD,EAAArqE,UAyVEi3I,cAzVF,WA2VI,IAFc,IAAAxrI,EAAA/F,KACRF,EAAiBE,KAAK02B,gBADdiH,EAAA,SAEL3jC,GACP,IAAM0nF,EAAa37E,EAAKmqI,YAAYl2I,GAG9BolG,OAAyCl/F,IAA3BwhF,EAAW0d,YAA4B1d,EAAW0d,eAEhEC,EAAe3d,EAAW2d,aAAe3d,EAAW2d,gBACpDn+C,KAEqB,IAAvBk+C,EAAYllG,OACdgnD,EAAQ9mD,MACN80C,MAAS,GACThqC,OAAUa,EAAKksI,qBAGjB7yC,EAAYp8F,QAAQ,SAAS+iB,GAC3Bm7B,EAAQ9mD,MACN80C,MAASnpB,EACT7gB,OAAUlF,KAAKiyI,iBAAiBlsH,MAHpChgB,GAQFs5F,EAAar8F,QAAQ,SAASg8C,GAC5BkC,EAAQ9mD,MACN80C,MAASpvC,EAAewF,UAAU05C,EAAA,OAClC95C,OAAUlF,KAAKkyI,cAAclzF,EAAA,WAHjCj5C,GAOAm7C,EAAQl+C,QAAQ,SAASkC,GACvBlF,KAAKgxI,SAAS52I,KAAK4F,KAAKmyI,gBACtBlZ,kBAAmBv3C,EAAWu3C,kBAC9BmZ,aAAcltI,EAAA,MACdmtI,UAAW,aACXlzC,SAAUzd,EAAWyd,SACrB9mF,WAAYqpE,EAAWrpE,WACvBi6H,wBAAyB5wD,EAAW4wD,wBACpC/uI,IAAKm+E,EAAWn+E,KACf2B,EAAA,UATLa,IA9BO/L,EAAI,EAAGA,EAAIgG,KAAKkwI,YAAYh2I,OAAQF,IAAK2jC,EAAzC3jC,GA4CTgG,KAAKgxI,SAAS52I,MACZorB,OAAQxlB,KAAKuyI,yBAAyBvyI,KAAK4E,IAAI6a,WAC/C1jB,KAAM,cACNy2I,QAAS,QACTC,WACEpjC,OAAQ,WACN,IAAMA,EAASvvG,EAAewF,UAAU,eACxC,kDAAmD+pG,EAAnD,UAEFgoB,WAAY,SAACA,GACX,IAEIzxD,iCAFgByxD,EAAA,MAEhB,OAEJ,OADAzxD,mCAAwCA,EAAxC,cApZVjB,EAAArqE,UAmaE63I,eAnaF,SAmaiB9gI,EAAQwnH,GACrB,IAAM/4H,EAAiBE,KAAK02B,gBACtBg8G,EAAiB1yI,KAAKmmC,OACtBwsG,EAAU3yI,KAAK05F,SAEfk5C,GACJr2G,MAAO/f,IACPgJ,OAHuBxlB,KAAK6yI,yBAAyBxhI,EAAQwnH,GAGpC1B,YACzBqb,QAAS,SAACnb,GAER,OAD2CA,EAC5Bh7H,IAAIgV,EAAO8tF,WAE5BszC,WACEpjC,OAAQ,WACN,QAA4BnvG,IAAxBmR,EAAO+gI,aACT,MAAO,GAEP,IAAM/iC,EAASvvG,EAAewF,UAAU+L,EAAO+gI,cAC/C,wCAAyC/iC,EAAzC,UAGJgoB,WAAY,SAACA,GACX,IAAM9+G,EAAqC8+G,EAErC3kF,EAAQggG,EAAejkF,MAAK,GAClC/b,EAAA,QAAmBn6B,EAEnB,IAAIqtD,2CACFrtD,EAAQlc,IAAIgV,EAAO8tF,UADjB,OAKJ,OAHAv5B,6CAAiDrtD,EAAQlc,IAAI,eACrDgV,EAAO+gI,cADf,OAGOO,EADP/sE,mCAAwCA,EAAxC,SACO+sE,CAAcjgG,MAO3B,OAHIrhC,EAAOihI,yBACThB,EAAA,EAAasB,EAAkBvhI,EAAOihI,yBAEjCM,GA1cXjuE,EAAArqE,UAodE43I,cApdF,SAodgBlzF,GACZ,gBAKWzmC,GACP,IAAM6E,EAAa7E,EAAA,WACnB,QAAI6E,EAAA,WAGMA,EAAA,YAA4BA,EAAA,QAAsBpX,KAAK,SAAA8sI,GAAA,OAAOA,EAAI9zF,SAAWA,OA/d/F2lB,EAAArqE,UA+eE23I,iBA/eF,SA+emBc,GACf,gBAKWx6H,GACP,IAAMy6H,EAAmBz6H,EAAA,sBAEzB,YAAyBrY,IAArB8yI,SAGkB9yI,IAAlB6yI,GAGGC,IAAqBD,KA9fpCpuE,EAAArqE,UA2gBEu4I,yBA3gBF,SA2gB2BxhI,EAAQwnH,GAC/B,IAAMoa,EAAoBjzI,KAAK4E,IAAI6a,UAAUgyB,gBAAgBylB,UACvDqiE,EAAgBv5H,KAAKkzI,6BACrBC,EAAanzI,KAAK8wI,mCAAmCz/H,EAAO9N,IAAKs1H,EACrEua,EAAA,EAAWH,GAAoBG,EAAA,EAAW/hI,EAAOgH,YACjDhH,EAAO4nH,kBAAmBM,GAE5B,OADA4Z,EAAWE,aACJF,GAlhBXxuE,EAAArqE,UA0hBE44I,2BA1hBF,WA2hBI,IAAMpzI,EAAiBE,KAAK02B,gBAC5B,OACE48G,cAAetzI,KAAK6lE,MACpBszD,QAAS,SAAC3qB,EAAO4qB,GACf,IAAM71H,EAAM61H,EAAS71H,IACfw2C,EAAOj6C,EAAe4uH,gBAQ5B,OAPA0K,EAASma,WACPrsI,iBAAiB,GAEnBkyH,EAAS71H,IAAMiwI,EAAA,EAAmBjwI,GAChCirG,MAASA,EACTz0D,KAAQA,IAEHq/E,KAxiBfz0D,EAAArqE,UAmjBEi4I,yBAnjBF,SAmjB2B/yH,GACvB,IAAM4uF,EAAiB5uF,EAAKiyB,gBACtB/xB,EAAS0uF,EAAeluF,YAC9B,OAAO,SAASsuF,EAAOjsG,GACrB,IAAMkxI,KACA32H,EAAc9c,KAAKwzG,oBAAoBzF,oBAAoBS,GACjE,GAAoB,OAAhB1xF,EAAJ,CAGA,IAAMgoB,EAAW9kC,KAAKwzG,oBAAoBlF,4BAA4BxxF,EACpE4C,EAAQ0uF,EAAgBpuG,KAAKswI,wBACd,OAAbxrG,IAGJ2uG,EAAYr5I,MACVmL,MAAOuX,EAAY1V,KAAK,KACxB09B,SAAUA,EACV4uG,UAAa,gBAEfnxI,EAASkxI,MACTz2I,KAAKgD,OAvkBX2kE,EAAArqE,UAklBE82I,YAllBF,WAmlBIpxI,KAAK+wI,QAAQp7G,EAAA,EAAQg+G,wBAA0B,IAAIC,EAAA,GACjDp5H,MAAO,IAAIq5H,EAAA,GACT/5H,OAAQ,IAAIg6H,EAAA,GAAel6H,OAAQ,EAAG,EAAG,EAAG,IAAMG,MAAO,IACzD4C,OAAQ,EACRlC,OAAQ,EACRq5F,QAAS,EACTr4F,MAAO,MAGX,IAAMf,EAAO,IAAIq5H,EAAA,GACfn6H,OAAQ,GAAI,IAAK,IAAK,MAElBE,EAAS,IAAIg6H,EAAA,GACjBl6H,OAAQ,GAAI,IAAK,IAAK,GACtBG,MAAO,IAET/Z,KAAK+wI,QAAL,QAA0B,IAAI6C,EAAA,GAC5Bl5H,KAAMA,EACNF,MAAO,IAAIw5H,EAAA,GACTt5H,KAAMA,EACND,OAAQ,EACRX,OAAQA,IAEVA,OAAQA,IAEV,IAAMm6H,EAAej0I,KAAKmwI,mBAC1BmB,EAAA,EAAatxI,KAAK+wI,QAASkD,IA7mB/BtvE,EAAArqE,UAunBE+2I,gBAvnBF,SAunBkB94H,EAAS0U,GACvB+nB,EAAA,EAAY1xC,OAAOiV,GACnB,IAAMQ,EAAQ/Y,KAAK+wI,QAAQx4H,EAAQlc,IAAI,gBAAkB2D,KAAK+wI,QAAL,QACzD,GAAI/wI,KAAK4Z,MAAO,CACd,IAAMA,EAAQs6H,EAAA,EAAgBl0I,KAAK4Z,OAE7B66F,EAAc76F,EAAM3c,QAE1Bw3G,EAAY,GAAK,EAEjB,IAAMt5F,EAAYvB,EAAM3c,QAExBke,EAAU,GAAK,GAEf,IAAMqoG,EAAczqG,EAAM0qG,YACtBD,GACFA,EAAY3V,SAAS4G,GAEvB,IAAMjmC,EAAYz1D,EAAMsqG,UACpB70C,GACFA,EAAUq/B,SAAS1yF,GAGrB,IAAImoG,EAAavqG,EAAMwqG,WACvB,GAAID,EAAY,CAEd,IAAM6wB,GADN7wB,EAAaA,EAAW/kG,SACYklG,YAChC0wB,GACFA,EAAiBtmC,SAAS4G,GAE5B,IAAM2/B,EAAiB9wB,EAAWD,UAC9B+wB,GACFA,EAAevmC,SAAS1yF,GAE1BpC,EAAMs7H,SAAS/wB,IAGnB,OAAOvqG,GA5pBX4rD,EAAArqE,UAoqBEk3I,cApqBF,SAoqBgB53H,GACRA,IACF5Z,KAAK4Z,MAAQA,EACb5Z,KAAKojF,sBAAsBz2D,WAAW2nH,YAvqB5C3vE,EAAArqE,UA8qBEi6I,yBA9qBF,WA+qBI,GAAIv0I,KAAKowI,YAAa,CACpB,IAAMoE,EAAax0I,KAAK+3C,SAAS0E,KAAK,+BACrCz8C,KAAKgwI,WAAcwE,EAAW3xH,OAAS2xH,EAAWrF,SAjrBzDxqE,EAAArqE,UAyrBEm6I,cAzrBF,WA0rBIz0I,KAAK8yG,gBAAgBpmF,QACrB1sB,KAAK0sB,SA3rBTi4C,EAAArqE,UAksBEoyB,MAlsBF,WAmsBI,IAAMqqG,EAAY/2H,KAAK+3C,SAAS0E,KAAK,sBAC/Bi4F,EAAS3d,EAAUz1H,SAAS,YAC5BqzI,EAAS5d,EAAUz1H,SAAS,SAElCtB,KAAKgwI,WAAa,GAClBt6G,EAAEi/G,EAAO,IAAI5d,UAAU,MAAO,IAC9B2d,EAAOpzI,SAAS,eAAem3H,QAC/Bz4H,KAAKu0I,2BACLv0I,KAAKixI,oBAAqB,GA3sB9BtsE,EAAArqE,UAktBEs6I,KAltBF,WAmtBI,IACMD,EADY30I,KAAK+3C,SAAS0E,KAAK,sBACZn7C,SAAS,SAElCtB,KAAKg4C,SAAS,WACZtiB,EAAEi/G,EAAO,IAAIC,UAvtBnBjwE,EAAArqE,UAkuBEo3I,QAluBF,SAkuBUlvH,EAAO60G,EAAYiB,GACzB,GAAgC,gBAA5BjB,EAAA,UAA2C,CAC7C,IAAMh7G,EAAO,IAAIw4H,EAAA,EAAYxd,EAAA,UAE7Br3H,KAAK8yG,gBAAgBpmF,QACrB1sB,KAAK8yG,gBAAgBxmF,WAAW,IAAIhW,EAAA,GAClCkF,SAAUa,EACVy4H,WAAcn/G,EAAA,EAAQg+G,0BAExB3zI,KAAK4E,IAAI6a,UAAUw3F,UAAUogB,EAAA,UAC7Br3H,KAAK+0I,oBAEL//F,EAAA,EAAY5pB,iBAAiBisG,EAAY/gH,EAAA,GACzCtW,KAAKg1I,eAAexyH,EAAO60G,EAAYiB,IA/uB7C3zD,EAAArqE,UA0vBE06I,eA1vBF,SA0vBiBxyH,EAAOjK,EAAS+/G,GAAS,IAAAzxH,EAAA7G,KAChCo5C,EAAU7gC,EAAQlc,IAAI,WACtB44I,EACD18H,EAAQ+D,cACb,GAAI88B,EACF,IADW,IAAA87F,EAAA,SACFl7I,EAAOmH,GACd,IAAM69C,EAAS5F,EAAQp/C,GACjBm7I,EAAan2F,EAAA,OACbo2F,EAAap2F,EAAA,KACnB,GAAkB,aAAdm2F,EACFtuI,EAAK+vB,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,IAAME,EAAQquI,EAAA,EAAeztI,gBAAgBd,EAAQk0I,GACjDh0I,GACFyF,EAAK04C,gBAAgB7nB,oBAAoBt2B,EAAME,iBAG9C,GAAkB,aAAd6zI,EACTtuI,EAAK04C,gBAAgB7mB,eAAe08G,GAAY,QAC3C,GAAkB,aAAdD,EAA2B,CACpC,IAEIE,SAMJ,GAPExuI,EAAKqpI,YAAY,GAAG7wC,aAETr8F,QAAQ,SAACsyI,GACpB,GAA8B,cAA1BA,EAAA,OACF,OAAOD,GAAiC,IAGxCA,EAAgC,CAClC,IAAME,IAAWN,EACjBpuI,EAAK04C,gBAAgB3mB,oBAAoBw8G,GAAY,EAAMG,MAxBxDv7I,EAAI,EAAGmH,EAAKi4C,EAAQl/C,OAAQF,EAAImH,EAAInH,IAAKk7I,EAAzCl7I,GA8BX,IAAMsgB,EAAOta,KAAK4E,IAAI0a,UACtB,GAAI21H,GAAmB36H,EAAM,CAC3B,IAAMkF,EAAOxf,KAAK4E,IAAI6a,UACtBzf,KAAK8yG,gBAAgBpmF,QACrB1sB,KAAK8yG,gBAAgBxmF,WAAW/T,GAChCvY,KAAKixI,oBAAqB,EAC1B,IAAMuE,EAAyC,uBAA9BP,EAAgBj8H,UAC/Bi8H,EAAgB/0H,YAAc+0H,EAChCz1H,EAAK6xB,IAAImkG,GACPl7H,KAAMA,EACNy5E,QAAS/zF,KAAK+zF,UAGlB/zF,KAAK+0I,gBA1yBTpwE,EAAArqE,UAizBEy6I,aAjzBF,WAkzBS/0I,KAAKowI,aACRpwI,KAAK0sB,QAEP1sB,KAAK40I,QArzBTjwE,EAAArqE,UA6zBEq3I,OA7zBF,SA6zBSnvH,GACAxiB,KAAKowI,aACRpwI,KAAKu0I,4BA/zBX5vE,EAAArqE,UA00BEs3I,eA10BF,SA00BiBpvH,EAAOgsF,EAAOiqB,GAM3B,IAAMgd,EAAOz1I,KAAK+3C,SAAS0E,KAAK,+BAC1B54C,EAAU4xI,EAAKn0I,SAAS,0BAC9B,GAAsB,GAAlBuC,EAAQ3J,OAAa,CACvB,IAAMu8G,EAAM/gF,EAAE,sEACd+/G,EAAK5mF,OAAO4nD,GAEVgiB,GACF50H,EAAQgf,OACR4yH,EAAKrnF,SAAS,2BAEdqnF,EAAKhiD,YAAY,yBACjB5vF,EAAQsrI,SA31BdxqE,EAAArqE,UAu2BE03I,gBAv2BF,SAu2BkBxjC,EAAOsjC,EAAa4D,GAAU,IAAA/8G,EAAA34B,KACxC8xI,EAAc,IAChBA,EAAc,GAEhB9xI,KAAK6wI,gBAAgB7tF,OAAOwrD,GAAQjyE,MAASu1G,IAC1CnuI,KAAK,SAACjK,GACL,GAAIA,GAAQA,EAAKikB,SAASm0H,EAAc,GAAI,CAC1C,IACMv5H,GADS,IAAIo9H,EAAA,GACIhzB,YAAYjpH,EAAKikB,SAASm0H,EAAc,IAC/Dn5G,EAAKm6E,gBAAgBxmF,WAAW/T,GAChC,IAAMq9H,UACW11I,IAAbw1I,IACFE,EAAW7hD,QAAU2hD,EACrBE,EAAWt7H,KAAOqe,EAAK/zB,IAAI0a,WAE7BqZ,EAAK/zB,IAAI6a,UAAU4xB,IAAI94B,EAAQ+D,cAAc4D,YAAa01H,GAC1Dj9G,EAAKq3G,WAAoCz3H,EAAQlc,IAAI,aAv3B/DsoE,EAAA,GA+3BAlpE,EAAQ+0B,WAAW,sBAAuB/0B,EAAQg1I,mBAGnCnzI,EAAA,sDC/jCf,SAAAo4B,GAMA,IAAMj6B,EAAUqM,QAAQpM,OAAO,mBA6B/BD,EAAQyyD,WAAa,WACnB,OACE1b,SAAU,IACVC,KAAM,SAACplB,EAAQoqB,EAAUlqB,GACvB,IAAMQ,EAAUR,EAAA,gBACV3oB,EAA6ByoB,EAAOS,MAAMC,GAEhD,SAAS48D,EAAS/gE,GAChB,IAAMlK,EAASkK,EAAQm7C,KAAK,eAC5B,QAAe7kE,IAAXwf,EAAsB,CACxB,IAAMpF,EAA+B1V,EAAI0a,UACzC1a,EAAI6a,UAAU4xB,IAAIhkB,EAAOS,MAAMpO,IAAUpF,SAE3C,IAAM+vE,EAAOzgE,EAAQm7C,KAAK,kBACb7kE,IAATmqF,GACFzlF,EAAI6a,UAAU8qE,QAAQl9D,EAAOS,MAAMu8D,IAKvC5yC,EAAS9b,GAAG,QAAS,IAAK,SAASnZ,GACjCmoE,EAAS7iF,QAAQ8hB,QAAQ8L,EAAE11B,UAI7By3C,EAAS9b,GAAG,SAAU,SAACnZ,GACrB,IAAMqzH,EAAWrzH,EAAM6I,OAAOrjB,QAAQwa,EAAM6I,OAAOyqH,eACnDnrD,EAAS7iF,QAAQ8hB,QAAQisH,SAQjCp6I,EAAQs3C,UAAU,eAAgBt3C,EAAQyyD,YAG3B5wD,EAAA,uDCzEf,IAAA6B,EAAA9D,EAAA,GAsFeiC,EAAA,EApDC,SAASy4I,EAAMC,EAAMjxI,EAAS2tC,EAAOxtC,GAKnD,IAAM+wI,EAASvjG,EAAMoqB,iBAAiB,kBAAMi5E,GAAM,WAChD,IAAI/7I,SAAGmH,SAAIjG,SACX,GAAI6J,EACF,IAAK/K,EAAI+7I,EAAK77I,OAAS,EAAGgB,EAAI,EAAGlB,GAAK,IAAKA,EACrCkL,EAAO6wI,EAAK/7I,MACdg8I,EAAK96I,KAAO66I,EAAK/7I,SAIrB,IAAKA,EAAI,EAAGmH,EAAK40I,EAAK77I,OAAQgB,EAAI,EAAGlB,EAAImH,IAAMnH,EACzCkL,EAAO6wI,EAAK/7I,MACdg8I,EAAK96I,KAAO66I,EAAK/7I,IAIvBg8I,EAAK97I,OAASgB,IAMVg7I,EAASxjG,EAAMoqB,iBAAiB,kBAAMk5E,GAAM,WAChD,IAAIh8I,SAAGmH,SAAIjG,SACX,GAAI6J,EAAS,CACX,IAAK/K,EAAI,EAAGmH,EAAK40I,EAAK77I,OAAQgB,EAAI86I,EAAK97I,OAAS,EAAGF,EAAImH,IAAMnH,EACvDkL,EAAO6wI,EAAK/7I,MACd+7I,EAAK/7I,GAAKg8I,EAAK96I,MAGnBiE,EAAA,EAAYmE,QAAa,GAANpI,OACd,CACL,IAAKlB,EAAI,EAAGmH,EAAK40I,EAAK77I,OAAQgB,EAAI,EAAGlB,EAAImH,IAAMnH,EACzCkL,EAAO6wI,EAAK/7I,MACd+7I,EAAK/7I,GAAKg8I,EAAK96I,MAGnBiE,EAAA,EAAYmE,OAAOpI,GAAK86I,EAAK97I,WAIjC,OAAO,WACL+7I,IACAC,oCCjFJ,IAAAC,EAAA96I,EAAA,IAWMI,GAXNJ,EAAA,KAWgByM,QAAQpM,OAAO,iBAC7By6I,EAAA,EAAwBz6I,OAAOK,QAIjCN,EAAQc,MAAM,2BAMZ,SAACqtB,EAAS+oB,GACR,IAAM4E,EAAc5E,EAAA,yBACpB,YAAuBzyC,IAAhBq3C,EAA4BA,EACjC,mBAGN97C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iBAAkB57C,EAAQ,SA2F/CI,EAAQyyD,WAAa,SAASkoF,GAC5B,OACE5jG,SAAU,IACVE,OAAO,EACP6E,YAAa6+F,EACb5lH,WAAY2lH,EAAA,IALhB16I,EAAQyyD,gDAURzyD,EAAQs3C,UAAU,gBAAiBt3C,EAAQyyD,YAG5B5wD,EAAA,kCClIf,IAAM7B,GAMNs7G,0BAME,iBAKA,aAKA,mBAKA,uBAKA,mBAKA,kBAIQ,QAIKz5G,EAAA,mCChDf,SAAAo4B,GAAA,IAAAjT,EAAApnB,EAAA,GAAAg7I,EAAAh7I,EAAA,KAeMI,EAAU,SAASimH,GAEvB,IAAM15G,OAA0B9H,IAAhBwhH,EAA4BA,KAExC40B,SACAtuI,EAAQ4hB,SACV0sH,EAAatuI,EAAQ4hB,eACd5hB,EAAQ4hB,SAEf0sH,EAAa5gH,EAAE,WAAW,GAO5B11B,KAAKu2I,SAAW7gH,EAAE,YAChBktC,MAAS,QACTgD,KAAQ,YAOV5lE,KAAKw2I,WAAa9gH,EAAE,UACjBm5B,OAAO7uD,KAAKu2I,UACZ1nF,OAAOynF,GAEVtuI,EAAQ4hB,QAAU8L,EAAE,WAAW,GAE/B2gH,EAAA,EAAU77I,KAAKwF,KAAMgI,IAIvBya,EAAA,EAAgBhnB,EAAS46I,EAAA,GAMzB56I,EAAQnB,UAAUyyB,OAAS,SAASnoB,GAAK,IAAAvC,EAAArC,KAEjC4pB,EAAU5pB,KAAKyjE,aASrB,GAPmBzjE,KAAKo0B,UAEtBsB,EAAE9L,GAASilH,QAAQ,WAGrBwH,EAAA,EAAU/7I,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAElCA,EAAK,CACP,IAAM+9D,EAAY3iE,KAAKw2I,WAEvB15I,OAAOw3H,WAAW,WAChB5+F,EAAE9L,GACCilH,SACCt9F,QAAWoxB,EACXiD,MAAQ,EACRkpE,UAAa,MACbntG,UACE,oDACA,8BACA,oCACA,wCACA,UACAv6B,KAAK,MAERynI,QAAQ,SACV,GAEH7uI,KAAKu2I,SAASE,IAAI,QAAS,WACzB,IAAM7xI,EAAMvC,EAAK+xB,SACbxvB,GACFA,EAAIwwB,cAAJ/yB,OAOO/E,EAAA,sDCjGf,SAAAo4B,GAAA,IAAAC,EAAAt6B,EAAA,IAAAq7I,EAAAr7I,EAAA,KAAAs7I,EAAAt7I,EAAA,KAAAu7I,EAAAv7I,EAAA,KAAAw7I,EAAAx7I,EAAA,KAAAy7I,EAAAz7I,EAAA,KAAA07I,EAAA17I,EAAA,IAAA27I,EAAA37I,EAAA,IAAA47I,EAAA57I,EAAA,GAAA67I,EAAA77I,EAAA,IAAA87I,EAAA97I,EAAA,KAAA+7I,EAAA/7I,EAAA,IAAAg8I,EAAAh8I,EAAA,IAAAi8I,EAAAj8I,EAAA,KAAAk8I,EAAAl8I,EAAA,KAAAm8I,EAAAn8I,EAAA,KAAAo8I,EAAAp8I,EAAA,KAAAq8I,EAAAr8I,EAAA,IAAAs8I,EAAAt8I,EAAA,KAAAu8I,EAAAv8I,EAAA,KAAAw8I,EAAAx8I,EAAA,KAoCMI,GApCNJ,EAAA,KAoCgByM,QAAQpM,OAAO,yBAC7Bg7I,EAAA,EAAqCh7I,OAAOK,KAC5C46I,EAAA,EAAwCj7I,OAAOK,KAC/C66I,EAAA,EAAsBl7I,OAAOK,KAC7B86I,EAAA,EAAyC96I,KACzC+6I,EAAA,EAA6Bp7I,OAAOK,KACpCg7I,EAAA,EAAwBr7I,OAAOK,KAC/Bi7I,EAAA,EAAet7I,OAAOK,KACtBo7I,EAAA,EAAuBp7I,KACvBq7I,EAAA,EAAwB17I,OAAOK,KAC/Bs7I,EAAA,EAAmB37I,OAAOK,KAC1Bw7I,EAAA,EAAgB77I,OAAOK,QA4CzB,SAAS+7I,EAAqBrgG,EAAUlqB,EAAQuqH,GAC9C,OAAOA,EAAqBrgG,EAAUlqB,GAvCxC9xB,EAAQc,MAAM,2BAMZ,SAACqtB,EAAS+oB,GAAV,MAAoB,kBAEtBl3C,EAAQs7C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,gBAAiB57C,EAAQ,SAI9CI,EAAQc,MAAM,uBAMZ,SAACk7C,EAAUlqB,GAET,MAAO,6UA2DX9xB,EAAQy7C,YACN1mB,WAAY,6CACZ+zC,UACE3/D,IAAO,mBACPhC,WAAc,2BACdm1I,qBAAwB,sCAE1Bp2G,SAAUm2G,GAGZr8I,EAAQipE,UAAU,eAAgBjpE,EAAQy7C,YAyB1Cz7C,EAAQ+7C,YAAc,SAASC,EAAUpqB,EAAQxtB,EAAiBojF,EAChE0xC,EAA+B3pC,EAAc5rC,EAAgB44F,EAAqBl0G,EAAaxN,GAAW,IAAAj0B,EAAArC,KAM1GA,KAAK4E,IAML5E,KAAK4C,WAML5C,KAAKmmC,OAAS9Y,EAMdrtB,KAAKU,aAAeb,EAMpBG,KAAKijF,2BAA6BA,EAMlCjjF,KAAK20H,8BAAgCA,EAMrC30H,KAAKkrF,cAAgBF,EAMrBhrF,KAAKu/C,gBAAkBH,EAEvB,IAAMvoB,EAAOuoB,EAAevoB,KAC5BogH,EAAA,EAAY3zI,OAAOuzB,GAMnB72B,KAAK62B,KAAOA,EAMZ72B,KAAKi4I,qBAAuBD,EAM5Bh4I,KAAK+jC,aAAeD,EAMpB9jC,KAAKk4I,oBAMLl4I,KAAK+3I,qBAML/3I,KAAK67E,gBAAkB,KAMvB77E,KAAKsE,UAMLtE,KAAK42B,WAAaN,EAGlBmhB,EAAS9b,GAAG,oBAAqB,WAC/Bt5B,EAAK8jC,OAAOyN,YAxGhBn4C,EAAQ+7C,yMAgHR/7C,EAAQ+7C,YAAYl9C,UAAUw/C,QAAU,WAAW,IAAA/zC,EAAA/F,KACjDA,KAAK+3I,sBAAqD,IAA9B/3I,KAAK+3I,qBACjC/3I,KAAK67E,gBAAkB77E,KAAKU,aAAaqmB,gBAAgB/mB,KAAK4E,IAC5D+wB,EAAA,EAAQmmD,qBAEVzhF,OAAAi9I,EAAA,EAAAj9I,CAAmB2F,KAAK67E,gBAAgB30D,YAAYC,WAAYnnB,KAAKsE,QAAQ,EAAMtE,KAAKmmC,OAAQ,kBAAM,IAGtGnmC,KAAKmmC,OAAO22B,iBAAiB,kBAAM/2D,EAAKzB,QACtC,WACEyB,EAAKnB,IAAIkkI,WAIb9oI,KAAKmmC,OAAO22B,iBAAiB,WAC3B,GAAI/2D,EAAKw5C,gBAAgBzoB,SACvB,OAAO/wB,EAAKnD,YAEb,SAACA,GACEA,GACFmD,EAAKoyI,kBAAkBpyI,EAAKw5C,gBAAgBzoB,aAUlDr7B,EAAQ+7C,YAAYl9C,UAAU69I,kBAAoB,SAAS3pH,GAAU,IAAA3nB,EAAA7G,KACnEwuB,EAAS8B,mBAAmB,SAAC8U,GAC3B,GAAIA,EAAKljC,KAAKU,WAAY,CACxB,IAAMH,EAAQ2iC,EAAK3iC,MACnBw0I,EAAA,EAAY7rH,iBAAiB3oB,EAAOg1I,EAAA,GACpC5wI,EAAKuxI,uBAAuB31I,EAA2D2iC,EAAKljC,UAWlGzG,EAAQ+7C,YAAYl9C,UAAU89I,uBAAyB,SAAS31I,EAAOP,GAAM,IAAAy2B,EAAA34B,KAC3E,GAAIA,KAAK4C,YAAcV,EAAKU,WAAY,CACtC,IAAMA,KACN,IAAK,IAAMgO,KAAO1O,EAAKU,WACrB,GAA6B,OAAzBV,EAAKU,WAAWgO,GAAe,CACjC,IAAMrU,EAAQyD,KAAK4C,WAAWgO,QAChB1Q,IAAV3D,IACFqG,EAAWgO,GAAOrU,QAGpBqG,EAAWgO,GAAO1O,EAAKU,WAAWgO,GAGtC,IAAK8mI,EAAA,EAAc90I,GAAa,CAC9B,IAAM4iB,EAAS/iB,EAAM+mB,YACjBhE,aAAkBqyH,EAAA,EACpBryH,EAAOa,iBAAiBzjB,GACf4iB,aAAkBoyH,EAAA,GAAmBpyH,aAAkBmyH,EAAA,EAChEnyH,EAAOC,aAAa7iB,GAGpBH,EAAM41I,KAAK,gBAAiB,WAC1BpB,EAAA,EAAY7rH,iBAAiB3oB,EAAOg1I,EAAA,GACpC9+G,EAAKy/G,uBAAuB31I,EAAOP,QAkB7CzG,EAAQ+7C,YAAYl9C,UAAUqyB,SAAW,SAAS6B,GAChD,IAAI6V,SACA7V,EAASR,OAAOR,SAClBxtB,KAAKu/C,gBAAgBzoB,SAAWtI,EAASR,OAEzCqW,EAAerkC,KAAKu/C,gBAAgB1oB,KAAKv1B,SAASpH,OAC9C8F,KAAKu/C,gBAAgBxoB,qCAAuC,GAGlE,IAAMt0B,EAAQzC,KAAKi4I,qBAAqB9zG,YAAY3V,EAAUxuB,KAAK4E,IACjE5E,KAAK67E,gBAAiBx3C,GAExB,GAAI5hC,aAAiBg1I,EAAA,EAAc,CACjC,IAAMv1I,EAA6DssB,EAAStsB,KAC5ElC,KAAKo4I,uBAAuB31I,EAAOP,GAGrC,OAAOO,GAYThH,EAAQ+7C,YAAYl9C,UAAU42I,UAAY,SAASx+F,EAAOlkB,GACxD,IAAM4V,EAAiBpkC,KAAK67E,gBAC5BnpC,EAAMxkB,IAAI,WAAY,WAEpBkW,EAAeld,YAAY0oB,OAAOphB,EAAS/rB,UAU/ChH,EAAQ+7C,YAAYl9C,UAAUg+I,aAAe,SAAS9pH,GACpDA,EAASQ,SAAiC,OAAxBR,EAASO,WAAsB,MAAQ,OAY3DtzB,EAAQ+7C,YAAYl9C,UAAUi+I,aAAe,SAAS/pH,GACpD,OAAOA,EAASO,YAmBlBtzB,EAAQ+7C,YAAYl9C,UAAUk+I,wBAA0B,SACtDC,EAAe3nI,GACf,GAAKA,EAAL,CAGA,IAAMnC,EAAa8pI,EAAc1oH,gBACjC,GAAIphB,EACFsoI,EAAA,EAAY7rH,iBAAiBzc,EAAYuoI,EAAA,GACzCvoI,EAAW2C,eAAiBR,OACvB,GAAI2nI,EAAcn3I,SACvB,IAAK,IAAItH,EAAI,EAAGmH,EAAKs3I,EAAcn3I,SAASpH,OAAQF,EAAImH,EAAInH,IAC1DgG,KAAKw4I,wBAAwBC,EAAcn3I,SAAStH,GAAI8W,KAc9DrV,EAAQ+7C,YAAYl9C,UAAUo+I,iBAAmB,SAASlqH,GACxD,IAAMmqH,EAAUnqH,EAAStsB,KAAKS,SAASg2I,QAEvC,QAAgBz4I,IAAZy4I,EACF,OAAOA,EAGT,QAA+Bz4I,IAA3BsuB,EAAStsB,KAAKZ,SAAlB,CAIA,IAAM8B,EAA8CorB,EAAStsB,KAC7D,GAAsB,QAAlBkB,EAAS/F,KAAb,CAIA,IAAM4G,EAAoDb,EAEpDw1I,EAAa30I,EAAYtB,SAASi2I,WAExC,QAAmB14I,IAAf04I,EAAJ,CAMA,IAAM7yH,EAAY9hB,EAAYK,OAAOyT,MAAM,KAAK,GAC1C8gI,EAAe74I,KAAKu/C,gBAAgB7lB,aAAalL,GACvD,OAAOxuB,KAAKU,aAAasnB,gBACvB6wH,EAAat1I,IAAKwiB,OAAW7lB,EAAW04I,EAAY,GAAI,QAa5Dn9I,EAAQ+7C,YAAYl9C,UAAUw+I,iBAAmB,SAAStqH,GAAU,IAAAqK,EAAA74B,KAC5D+4I,KACN,QAAiE74I,IAA5BsuB,EAAStsB,KAAMZ,SAClD,OAAO,KAGT,IAAM8B,EAA8CorB,EAAStsB,KACvD82I,EAAsB51I,EAASrH,KACrC,GAAIqH,EAAST,SAASspI,YAEpB,OADA8M,EAAcC,GAAuB51I,EAAST,SAASspI,YAChD8M,EAGT,IAAMt2I,EAAQ+rB,EAAS/rB,MACvB,GAAsB,SAAlBW,EAAS/F,KAAiB,CAC5B45I,EAAA,EAAY7rH,iBAAiB3oB,EAAO+0I,EAAA,GACpC,IAAMyB,EAAgBj5I,KAAKU,aAAaonB,iBAAiBrlB,GAEzD,OADAs2I,EAAcC,GAAuBC,EAC9BA,EAAgBF,EAAgB,KAEvC,IACIG,EADsD91I,EAC5BkB,OACxBu0I,EAAe74I,KAAKu/C,gBAAgB7lB,aAAalL,GACjDqR,EAAQ7/B,KAAKm5I,YAWnB,OAPED,EADEL,EAAax7I,OAAS65I,EAAA,EAAkBttI,WAAWmI,YACtCmnI,GAEDA,EAAYnhI,MAAM,MAEtB/U,QAAQ,SAAC+iB,GACnBgzH,EAAchzH,GAAa8S,EAAKn4B,aAAasnB,gBAAgB6wH,EAAat1I,IAAKwiB,EAAW8Z,KAErFk5G,GAYXt9I,EAAQ+7C,YAAYl9C,UAAU8+I,yBAA2B,SAAS5qH,GAChE,IAAMuqH,EAAgB/4I,KAAK84I,iBAAiBtqH,GAC5C,OAAOuqH,EAAgB1+I,OAAO0iD,KAAKg8F,GAAe7+I,OAAS,GAS7DuB,EAAQ+7C,YAAYl9C,UAAU6+I,UAAY,WACxC,IAAM35H,EAAOxf,KAAK4E,IAAI6a,UAItB,OAHmBD,EAAK2J,gBACZ3J,EAAKiyB,gBAAgBu/E,mBAEP,OADd,KAAO,MAWrBv1H,EAAQ+7C,YAAYl9C,UAAU++I,gBAAkB,SAAS7qH,GACvD,IAAMtsB,EAAOssB,EAAStsB,KAChBo3I,EAAcp3I,EAAKS,SAAL,YACpB,QAAoBzC,IAAhBo5I,EAA2B,CAE7B,IAAM13C,EAAO9kG,OAAO8kG,KAChBA,EAAKC,iBACPD,EAAKC,gBAAgBy3C,EAAap3I,EAAKnG,UAAMmE,OAAWA,GAAW,KAWzEzE,EAAQ+7C,YAAYl9C,UAAUi/I,aAAe,WAAW,IAAAlgH,EAAAr5B,KAChDw5I,EAAax5I,KAAKu/C,gBAAgBzoB,SAAS50B,KAAKZ,SAChDm4I,EAAmBz5I,KAAKu/C,gBAAgBzoB,SAASx1B,SACjDg3E,KAGNkhE,EAAWx2I,QAAQ,SAACd,GAClBu3I,EAAiBzzI,KAAK,SAACwoB,GACjBA,EAAStsB,OAASA,GACpBo2E,EAAUl+E,KAAKo0B,OAOrBxuB,KAAKu/C,gBAAgBzoB,SAASx1B,SAAWg3E,EAGzCt4E,KAAKsE,OAAOpK,OAAS,EACrB8F,KAAKu/C,gBAAgBzoB,SAASx1B,SAAS0B,QAAQ,SAACC,GAC9Co2B,EAAK/0B,OAAOlK,KAAK6I,EAAMR,SAIzBzC,KAAKkrF,cAAcksB,2BAQrB37G,EAAQ+7C,YAAYl9C,UAAUo/I,WAAa,SAASx3I,GAClDlC,KAAKu/C,gBAAgBtmB,YAAY/2B,IAOnCzG,EAAQ+7C,YAAYl9C,UAAUq/I,eAAiB,WAC7C35I,KAAKu/C,gBAAgBrmB,aAQvBz9B,EAAQ+7C,YAAYl9C,UAAUs/I,WAAa,WACzC,OAAO55I,KAAKu/C,gBAAgB1oB,KAAKv1B,SAASpH,QAa5CuB,EAAQ+7C,YAAYl9C,UAAUu/I,mBAAqB,SAASz2I,GAC1D,IAAM6pB,EAAajtB,KAAK4E,IAAI6a,UAAU0J,gBAChC1iB,EAAgBuwI,EAAA,EAAexwI,qBAAqBpD,GAC1D,QAAsBlD,IAAlBuG,GAA+BwmB,EAAaxmB,EAC9C,MAAO,oBAET,IAAMH,EAAgB0wI,EAAA,EAAe3wI,qBAAqBjD,GAC1D,YAAsBlD,IAAlBoG,GAA+B2mB,EAAa3mB,EACvC,yBADT,GAaF7K,EAAQ+7C,YAAYl9C,UAAUw/I,iBAAmB,SAAStrH,GACxD,IAAMprB,EAAiDorB,EAAStsB,KAC1Dsd,EAAOxf,KAAK4E,IAAI6a,UAChBwN,EAAazN,EAAK2J,gBAClB1iB,EAAgBuwI,EAAA,EAAexwI,qBAAqBpD,GAC1D,QAAsBlD,IAAlBuG,GAA+BwmB,EAAaxmB,EAC9C+Y,EAAK+sH,cAAc/sH,EAAK8sH,oBAAoB7lI,EAAe,EAAG,QACzD,CACL,IAAMH,EAAgB0wI,EAAA,EAAe3wI,qBAAqBjD,QACpClD,IAAlBoG,GAA+B2mB,EAAa3mB,GAC9CkZ,EAAK+sH,cAAc/sH,EAAK8sH,oBAAoBhmI,EAAe,GAAI,MAWrE7K,EAAQ+7C,YAAYl9C,UAAUy/I,iBAAmB,SAASC,GACxDtkH,EAAEskH,GAAc55D,QACdA,QAAQ,KASZ3kF,EAAQ+7C,YAAYl9C,UAAU2/I,0BAA4B,SAAS7+E,GACjEp7D,KAAKijF,2BAA2Bt0E,WAAaysD,GAS/C3/D,EAAQ+7C,YAAYl9C,UAAU4/I,oBAAsB,SAASF,GAC3D,OAAOtkH,EAAEskH,GAAcr/G,GAAG,aAsB5Bl/B,EAAQ+7C,YAAYl9C,UAAU6/I,sBAAwB,SAAS3rH,GAC7D,OAAQA,EAAShB,SAEbxtB,KAAKo6I,eAAe5rH,IACpBxuB,KAAKq6I,sBAAsB7rH,KAWjC/yB,EAAQ+7C,YAAYl9C,UAAU8/I,eAAiB,SAAS5rH,GACtD,IAAMtsB,EAA2CssB,EAAStsB,KAC1D,QAASA,EAAKS,YACVT,EAAKS,SAASmkI,UACd9mI,KAAK84I,iBAAiBtqH,IAU5B/yB,EAAQ+7C,YAAYl9C,UAAU+/I,sBAAwB,SAAS7rH,GAC7D,IAAMtsB,EAA2CssB,EAAStsB,KACpDmzB,EAAiD7G,EAASR,OAAO9rB,KACvE,QAASssB,EAAS/rB,QAGO,IAAnB+rB,EAASJ,QAAgBlsB,EAAKy3B,OAG9BnL,EAASJ,MAAQ,GAAKiH,EAAWsE,QAKzCl+B,EAAQ+0B,WAAW,yBAA0B/0B,EAAQ+7C,aAGtCl6C,EAAA,4GCxxBTg9I,KAaNA,EAAQ5+I,OAASoM,QAAQpM,OAAO,UAEhC4+I,EAAQ5+I,OAAO2V,QAAQ,mBAAoB,SAASkpI,GAC5C,UAAWjxC,EAAA,EAAUvmD,kBAAkBjmD,OAAOqlD,SAASa,SAE3Du3F,EAAiBC,kBAAiB,MAKvB,IAAAC,EAAA,4BCvBTC,GAWNC,KAAe,SAAS79H,EAAa89H,GACnC,GAAgB,IAAZA,EACE99H,EAAY5iB,OAAS,IACvB4iB,GAAeA,EAAY,GAAIA,EAAY,UAG7C,IAAK,IAAI9iB,EAAI,EAAGmH,EAAK2b,EAAY5iB,OAAQF,EAAImH,EAAInH,IAC/C8iB,EAAY9iB,GAAK0gJ,EAAQC,KAAK79H,EAAY9iB,GAAI4gJ,EAAU,GAG5D,OAAO99H,IAIM+9H,EAAA,6DCzBTC,GAqBNC,QAAkB,SAAS1+H,GACzB,IAAI0+H,GAAU,EAId,OAHI1+H,GAAQA,aAAgB2+H,EAAA,IAC1BD,EAA+C,IAArC1+H,EAAKkqG,qBAAqBrsH,QAE/B6gJ,GAUTJ,KAAe,SAASt+H,GACtB,GAAIA,aAAgB2vC,EAAA,EAClB3vC,EAAK8vC,eACH0uF,EAA2BF,KAAKt+H,EAAKU,iBAAkB,SAEpD,GAAIV,aAAgBomG,EAAA,GAChBpmG,aAAgBiwC,EAAA,EAEzBjwC,EAAK8vC,eACH0uF,EAA2BF,KAAKt+H,EAAKU,iBAAkB,SAEpD,GAAIV,aAAgBmmG,EAAA,GAChBnmG,aAAgBipF,EAAA,EAEzBjpF,EAAK8vC,eACH0uF,EAA2BF,KAAKt+H,EAAKU,iBAAkB,QAEpD,MAAIV,aAAgBqmG,EAAA,GAKzB,KAAM,0DAJNrmG,EAAK8vC,eACH0uF,EAA2BF,KAAKt+H,EAAKU,iBAAkB,OAQ9Ck+H,EAAA,oCC7CTC,EAAU,SAASx7I,EAAOE,EAAI02B,GAMlCt2B,KAAK6gD,MAAQnhD,EAMbM,KAAK4uC,GAAKhvC,EAMVI,KAAK42B,WAAaN,EAMlBt2B,KAAKm7I,+BAAiC,gFASxCD,EAAQ5gJ,UAAU8gJ,uBAAyB,WAAW,IAAA/4I,EAAArC,KA8BpD,OA5BKA,KAAKm7I,iCACRn7I,KAAKm7I,+BAAiCn7I,KAAK4uC,GAAGhuC,QAC9CZ,KAAK42B,WAAWhxB,sBAAsBjC,KAAK,SAACR,GAC1Cd,EAAKu0B,WAAWlxB,kBAAkB/B,KAAK,SAACzC,GACtC,GAAKA,EAAL,CAaA,IARA,IAAMm6I,EACFH,EAAQI,iCACNp6I,EACAiC,GAIAo4I,KACGvhJ,EAAI,EAAGmH,EAAKk6I,EAAuBnhJ,OAAQF,EAAImH,EAAInH,IACtDqhJ,EAAuBrhJ,GAAGwhJ,UAAU74I,SAASsG,UAC/CsyI,EAAoBnhJ,KAAKihJ,EAAuBrhJ,IAIpDqI,EAAK84I,+BAA+Bn3I,QAAQu3I,SAK3Cv7I,KAAKm7I,+BAA+Br6I,SAgB7Co6I,EAAQI,iCAAmC,SACzCp6I,EAAQiC,GAQR,IANA,IAAMo4I,KACFn6I,SACAG,SACAY,SACAD,SAEKlI,EAAI,EAAGmH,EAAKD,EAAOhH,OAAQF,EAAImH,EAAInH,IAE1C,IAAK,IAAIkB,EAAI,EAAGmG,GADhBD,EAA2CF,EAAOlH,IACvBsH,SAASpH,OAAQgB,EAAImG,EAAInG,IAIlD,IAHAqG,EAA2CH,EAAME,SAASpG,IAG/CgJ,UAAX,CAIA/B,KACAyyE,EAAA,EAAenzE,aAAaF,EAAOY,GAEnC,IAAK,IAAIs5I,EAAI,EAAGC,EAAKv5I,EAAMjI,OAAQuhJ,EAAIC,EAAID,KACzCv5I,EACEC,EAAMs5I,IAGCn6I,UAAYY,EAAKZ,SAASpH,QAI/BgI,EAAKq7D,aACPr7D,EAAKq7D,YAAY,IACjBr7D,EAAKq7D,YAAY,GAAG7wD,WAEpB6uI,EAAoBnhJ,MAClBohJ,UAAWt5I,EACXgC,UAAWf,EAAW5B,EAAM2C,aAOtC,OAAOq3I,GAiBTL,EAAQ5gJ,UAAUqhJ,eAAiB,SAASC,EAAW3nH,EAAYrvB,GACjE,IAAM4a,EAAO5a,EAAI6a,UACXq5C,EAAWt5C,EAAKiyB,gBAAgBylB,UAChCjqC,EAAmCzN,EAAK2J,gBACxC0yH,EAAaztG,EAAA,EAAkBpiC,cAAcC,IAE7C6vI,EADYF,EAAUJ,UACEl3I,OAAOyT,MAAM,KACrC7T,EAAY03I,EAAU13I,UAEtBsJ,EAAS,IAAIuuI,EAAA,GACjBz3I,OAAQw3I,IAUJv4I,EAPY,IAAIs2D,EAAA,GACpBt2D,IAAKW,EAAUX,IACfuD,QACExC,OAAQw3I,KAKA/hF,qBAAqB9lC,EAAYhH,EAAY6rC,GACrDK,YAAe0iF,EACfhjF,cAAiB,EACjBmjF,aAAgBF,IAIpB,OAAO97I,KAAK6gD,MAAMxkD,IAAIkH,GAAKI,KACzB,SAACC,GACC,IAAM+Z,EAAWnQ,EAAOmkC,aAAa/tC,EAASlK,MAC9C,OAAQikB,GAAYA,EAAS,GAAMA,EAAS,GAAK,SASvDu9H,EAAQx/I,OAASoM,QAAQpM,OAAO,yBAC9Bk5E,EAAA,EAAel5E,OAAOK,QAETgM,QAAQ,wBAAyBmzI,GAGjC,IAAAe,EAAA,SCtMTC,EAAUp0I,QAAQpM,OAAO,0CAC7BugJ,EAAsBvgJ,OAAOK,OA6B/BmgJ,EAAQhuF,WAAa,WACnB,OACE19B,WAAY,0CACZkiB,OACEthC,OAAU,uCACVuM,SAAY,yCACZi+H,UAAa,0CACbh3I,IAAO,qCAET0yC,kBAAkB,IAItB4kG,EAAQnpG,UAAU,gCAChBmpG,EAAQhuF,YAaVguF,EAAQ1kG,YAAc,SAASnqB,EAC7B8uH,GAAuB,IAAA95I,EAAArC,KAQvBA,KAAKoR,OAELic,EAAOO,OACL,kBAAMvrB,EAAK+O,QACXpR,KAAK8/E,oBAAoB9iF,KAAKgD,OAOhCA,KAAK2d,SAML3d,KAAK47I,UAML57I,KAAK4E,IASL5E,KAAKo8I,uBAAyBD,GAzChCD,EAAQ1kG,uDAkDR0kG,EAAQ1kG,YAAYl9C,UAAUwlF,oBAAsB,SAAS1uE,GACvDA,EACFk+B,EAAA,EACEtvC,KAAK4E,IACL,QACA5E,KAAKy9C,gBACLz9C,MAGFsvC,EAAA,EACEtvC,KAAK4E,IACL,QACA5E,KAAKy9C,gBACLz9C,OAUNk8I,EAAQ1kG,YAAYl9C,UAAUmjD,gBAAkB,SAAStyB,GAAK,IAAAplB,EAAA/F,KAC5DA,KAAKo8I,uBAAuBT,eAC1B37I,KAAK47I,UACLzwH,EAAI8I,WACJj0B,KAAK4E,KACLjB,KAAK,SAAC4U,GACFA,GACFxS,EAAK4X,SAASvjB,KAAKme,MAKzB2jI,EAAQ1rH,WAAW,0CACjB0rH,EAAQ1kG,aAGK,IAAA6kG,EAAA,kECnITC,EAAU,SAASt0I,GAMvBhI,KAAKu8I,YAA2Br8I,IAAlB8H,EAAQyT,MAAsBzT,EAAQyT,MAAQ,EAM5Dzb,KAAKw8I,QAAUx0I,EAAQyS,OAMvBza,KAAKy8I,YAA2Bv8I,IAAlB8H,EAAQ00I,MAAsB10I,EAAQ00I,MAAQ,EAM5D18I,KAAKqnC,iBAELoiE,EAAA,EAAyBjvG,KAAKwF,MAC5BqxB,YAAa47B,EAAA,KAKjB/a,EAAA,EACEoqG,EAAS7yC,EAAA,GAQX6yC,EAAQhiJ,UAAUqb,UAAY,SAASvE,GACrCq4F,EAAA,EAAyBnvG,UAAUqb,UAAUnb,KAAKwF,KAAMoR,GAEpDpR,KAAKo0B,WACHhjB,EACFpR,KAAK28I,UAEL38I,KAAK48I,aASXN,EAAQhiJ,UAAUyyB,OAAS,SAASnoB,GAElC,IAAMwM,EAASpR,KAAK0V,YAED1V,KAAKo0B,UACNhjB,GAChBpR,KAAK48I,WAGPnzC,EAAA,EAAyBnvG,UAAUyyB,OAAOvyB,KAAKwF,KAAM4E,GAEjDA,GAAOwM,GACTpR,KAAK28I,WAUTL,EAAQhiJ,UAAUqiJ,QAAU,WAC1B,IAAM/3I,EAAM5E,KAAKo0B,SACjB0U,EAAA,EAAYxlC,OAAOsB,EAAK,sBACxB5E,KAAKqnC,cAAcjtC,KACjBk1C,EAAA,EAAgB1qC,EAAK,QAAS5E,KAAKy9C,gBAAiBz9C,QASxDs8I,EAAQhiJ,UAAUsiJ,SAAW,WAC3B,IAAMh4I,EAAM5E,KAAKo0B,SACjB0U,EAAA,EAAYxlC,OAAOsB,EAAK,sBACxB5E,KAAKqnC,cAAcrkC,QAAQssC,EAAA,GAC3BtvC,KAAKqnC,cAAcntC,OAAS,GAU9BoiJ,EAAQhiJ,UAAUmjD,gBAAkB,SAAStyB,GAC3C,IAAM/K,EAAS+K,EAAI8I,WACbzY,EAAW8pF,EAAA,EAAcu3C,WAC7B,IAAItwF,EAAA,EAAansC,GAASpgB,KAAKy8I,QAGjCn3C,EAAA,EAAcw3C,YAAYthI,EAAU4E,EAAQpgB,KAAKw8I,QAASx8I,KAAKu8I,QAG/D,IAAM/5H,EAAQ,IAAIiqC,EAAA,EAAgB,WAAYl0C,QAAS,IAAIwzC,EAAA,EAAUvwC,KACrExb,KAAKuH,cAAcib,IAIN,IAAAu6H,EAAA,ECzITC,EAAUl1I,QAAQpM,OAAO,wCAiD/BshJ,EAAQ9uF,WAAa,WACnB,OACE19B,WAAY,8CACZ8mB,kBAAkB,EAClB5E,OACEthC,OAAU,2CACVqK,MAAS,2CACTkC,SAAY,6CACZ/Y,IAAO,wCACP6V,OAAU,2CACViiI,MAAS,8CAKfM,EAAQjqG,UACN,oCACAiqG,EAAQ9uF,YAaV8uF,EAAQxlG,YAAc,SAASnqB,GAAQ,IAAAhrB,EAAArC,KAQrCA,KAAKoR,QAAS,EAEdic,EAAOO,OACL,kBAAMvrB,EAAK+O,QACX,SAACwE,GACCvT,EAAKuqG,aAAaj3F,UAAUC,KAQhC5V,KAAKyb,MAMLzb,KAAK2d,SAML3d,KAAK4E,IAML5E,KAAKya,OAMLza,KAAK08I,MASL18I,KAAK4sG,aAML5sG,KAAKi9I,wBAEL5vH,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QA9DlDg9I,EAAQxlG,+BAqERwlG,EAAQxlG,YAAYl9C,UAAUw/C,QAAU,WAEtC95C,KAAK4sG,aAAe,IAAImwC,GACtBthI,MAAOzb,KAAKyb,MACZhB,OAAQza,KAAKya,OACbiiI,MAAO18I,KAAK08I,QAEd18I,KAAK4sG,aAAaj3F,UAAU3V,KAAKoR,QAEjCpR,KAAKi9I,wBAA0B3tG,EAAA,EAC7BtvC,KAAK4sG,aACL,UACA5sG,KAAK6sG,eACL7sG,MAGFA,KAAK4E,IAAI0vB,eAAet0B,KAAK4sG,eAU/BowC,EAAQxlG,YAAYl9C,UAAUuyG,eAAiB,SAAS1hF,GACtD,IAAM5S,EAAU,IAAIwzC,EAAA,EAAU5gC,EAAI5S,QAAQ+D,eAC1Ctc,KAAK2d,SAASvjB,KAAKme,IAQrBykI,EAAQxlG,YAAYl9C,UAAUkgD,eAAiB,WAC7ClL,EAAA,EAAuBtvC,KAAKi9I,yBAC5Bj9I,KAAK4sG,aAAaj3F,WAAU,GAC5B3V,KAAK4E,IAAIyvB,kBAAkBr0B,KAAK4sG,eAIlCowC,EAAQxsH,WACN,8CACAwsH,EAAQxlG,aAIK,IAAA0lG,EAAA,oCCnLTC,EAAUr1I,QAAQpM,OAAO,kCAC7B2gJ,EAAuCtgJ,KACvCqhJ,EAAA,EAAkCrhJ,KAClCmhJ,EAAkDnhJ,KAClD2/F,EAAA,EAAqB3/F,KACrBiiF,EAAA,EAAwBtiF,OAAOK,OAIjCohJ,EAAQpmG,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoC57C,EAAQ,SAUjE8hJ,EAAQ5gJ,MAAM,mCA6Cd4gJ,EAAQjvF,WAAa,WACnB,OACE19B,WAAY,6CACZkiB,OACEthC,OAAU,+BACVisI,eAAkB,uCAClBC,iBAAoB,yCACpB/kI,QAAW,gCACXmhC,SAAY,iCACZ90C,IAAO,4BACP24I,QAAW,gCACXC,mBAAsB,2CACtBC,cAAiB,sCACjBrxF,eAAkB,wCAEpB9U,kBAAkB,EAClBC,YAAa,qCAIjB4lG,EAAQpqG,UAAU,wBAChBoqG,EAAQjvF,YAcVivF,EAAQ3lG,YAAc,SAAS73C,EAAW0tB,EAAQyqB,GAQhD93C,KAAKoR,OAMLpR,KAAKq9I,eAMLr9I,KAAKs9I,iBAMLt9I,KAAKuY,QAMLvY,KAAK05C,SAML15C,KAAK4E,IAML5E,KAAKw9I,mBAMLx9I,KAAKu9I,QAMLv9I,KAAKy9I,cAMLz9I,KAAKosD,eASLpsD,KAAKmmC,OAAS9Y,EAMdrtB,KAAKq4C,qBAAuBP,EAQ5B93C,KAAK09I,gBAAkB19D,EAAA,EAAiBniF,QAMxCmC,KAAK29I,oBAML39I,KAAKo/E,YAAa,EAElBp/E,KAAK49I,cAAc,aACjBT,EAAQU,YAAYC,KAMtB99I,KAAK+9I,aAAc,EAEnB/9I,KAAK49I,cAAc,cACjBT,EAAQU,YAAYG,QAMtBh+I,KAAKi+I,oBAAqB,EAM1Bj+I,KAAKk+I,cAAgBtiI,KAAKE,GAAK,IAAM,GAErC,IAAMqiI,EACJx+I,EAAUtD,IAAI,gCAMhB2D,KAAKo+I,oBAAyDl+I,IAAxCi+I,EAAeE,qBACnCF,EAAeE,qBAAuB,IAExCr+I,KAAK49I,cAAc,qBACjBT,EAAQU,YAAYC,KAEtB99I,KAAK49I,cAAc,iBACjBT,EAAQU,YAAYC,KAAK,GAE3B99I,KAAK49I,cAAc,mBACjBT,EAAQU,YAAYG,QAAQ,GAE9B3wH,EAAOa,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QA9IlDm9I,EAAQ3lG,iEAqKR2lG,EAAQ3lG,YAAYl9C,UAAUsjJ,cAAgB,SAC5CU,EAAgBf,EAASgB,GACzB,IAAAl8I,EAAArC,KAEMy9I,GAAsC,IAAtBc,EAEtBv+I,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAKi8I,IACXt+I,KAAKw+I,wBAAwBxhJ,KAAKgD,KAAMu9I,EAASE,IAGnD,IAAMl8I,EAAW47I,EAAQ3lG,YAAYinG,WAA/B,IAA6CvsG,EAAA,EAAclyC,MAC3D0+I,EAAe,IAAIp/D,EAAA,EAAqBt/E,KAAMs+I,GACpDt+I,KAAKq4C,qBAAqBjS,aAAa7kC,EAAOm9I,GAAc,GAE5D1+I,KAAK29I,iBAAiBvjJ,KAAKkkJ,IAa7BnB,EAAQ3lG,YAAYl9C,UAAUkkJ,wBAA0B,SACtDjB,EAASE,EAAe7nI,GAIpBA,IACF5V,KAAKu9I,QAAUA,EACfv9I,KAAKy9I,cAAgBA,GAKvB,IADA,IAAIrsI,GAAS,EACJpX,EAAI,EAAGmH,EAAKnB,KAAK29I,iBAAiBzjJ,OAAQF,EAAImH,KACrDiQ,EAASA,GAAUpR,KAAKA,KAAK29I,iBAAiB3jJ,KADWA,KAM3DgG,KAAKoR,OAASA,EAETpR,KAAKoR,SACRpR,KAAKy9I,eAAgB,IAQzBN,EAAQ3lG,YAAYl9C,UAAUkgD,eAAiB,aAG/C2iG,EAAQ3sH,WAAW,kCACjB2sH,EAAQ3lG,aAOV2lG,EAAQ3lG,YAAYinG,WAAa,MAMjCtB,EAAQU,aACNC,IAAK,MACLE,OAAQ,UAIK,IAAAW,EAAA,8GC5UTC,IACJC,IACEC,iBAAA,IAQEptE,GAAU5pE,QAAQpM,OAAO,6BAC7B8tH,EAAA,EAAsB9tH,OAAOK,KAC7B69E,EAAA,EAA6Bl+E,OAAOK,KACpCu+E,EAAA,EAAwB5+E,OAAOK,KAC/BkgJ,EAAsBvgJ,OAAOK,KAC7B4iJ,EAA+B5iJ,KAC/Bo2C,EAAA,EAAmBz2C,OAAOK,KAC1BgwC,EAAA,EAAsBrwC,OAAOK,KAC7BiiF,EAAA,EAAwBtiF,OAAOK,OA8BjC,SAASgjJ,GAA4BtnG,EAAUlqB,EAAQwxH,GACrD,OAAOA,EAA4BtnG,EAAUlqB,GA3B/CmkD,GAAQ36B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,oBAAqB57C,EAAQ,SAIlDq2E,GAAQn1E,MAAM,8BAMZ,SAACk7C,EAAUlqB,GACT,IAAMgqB,EAAchqB,EAAA,4BACpB,YAAuBrtB,IAAhBq3C,EAA4BA,EACjC,qFA2CNm6B,GAAQx6B,YACN1mB,WAAY,uCACZ+zC,UACEnzD,OAAU,0BACVmH,QAAW,2BACXmhC,SAAY,4BACZslG,YAAe,+BACfp6I,IAAO,uBACPwnD,eAAkB,mCAEpB7U,YAAawnG,IAGfrtE,GAAQhN,UAAU,mBAAoBgN,GAAQx6B,YAsB9Cw6B,GAAQo5B,WAAa,SAASz9E,EAAQ+I,EAAUt2B,EAC9C43C,EAAgBykG,EAAuB/8F,EACvCjX,EAAmBtoC,EAAiBi4C,GAQpC93C,KAAKoR,OAMLpR,KAAKuY,QAMLvY,KAAK05C,SAML15C,KAAKg/I,YAMLh/I,KAAK4E,IAML5E,KAAKosD,eASLpsD,KAAKmmC,OAAS9Y,EAMdrtB,KAAKg4C,SAAW5hB,EAMhBp2B,KAAK02B,gBAAkB52B,EAMvBE,KAAKi4C,gBAAkBP,EAMvB13C,KAAKo8I,uBAAyBD,EAM9Bn8I,KAAKu7I,oBAMLv7I,KAAKi/I,2BASLj/I,KAAKk/I,yBAA0B,EAM/Bl/I,KAAKq9I,gBAAiB,EAMtBr9I,KAAKs9I,kBAAmB,EAMxBt9I,KAAKm/I,eAMLn/I,KAAKguC,iBAAmBnuC,EAMxBG,KAAKu/C,gBAAkBH,EAMvBp/C,KAAKqoC,mBAAqBF,EAM1BnoC,KAAKq4C,qBAAuBP,EAS5B93C,KAAKo/I,qBAAsB,EAM3Bp/I,KAAKu9I,QAAUoB,EAA+Bd,YAAYC,IAM1D99I,KAAKu4C,kBAAoB,KAMzBv4C,KAAKq/I,eAAiB,IAAIT,GAAKC,GAAGC,UAQlC9+I,KAAK2tB,OAML3tB,KAAKs/I,oBAMLt/I,KAAKu/I,kBAMLv/I,KAAKw/I,2BAMLx/I,KAAKy/I,gBAMLz/I,KAAK0/I,yBAOL1/I,KAAKo9B,SAAU,EAMfp9B,KAAKm3C,OAAQ,EAMbn3C,KAAKqnC,iBAMLrnC,KAAK+vD,UAAY,IAAI5jB,EAAA,EAMrBnsC,KAAKg5C,cAAgB,IAAI7M,EAAA,EAMzBnsC,KAAKi5C,QAAU,IAAIwmC,GAAA,GACjBplC,gBAAiBivD,EAAA,EAAUjvD,gBAC3B18B,SAAU3d,KAAK+vD,UACfh3C,MAAOovB,EAAkBvvB,gBAAe,KAE1C5Y,KAAKg5C,cAAc5+C,KAAK4F,KAAKi5C,SAM7Bj5C,KAAK2/I,oBAAsB,IAAIrgE,EAAA,EAAqBt/E,KAAKi5C,QAAS,UAMlEj5C,KAAKo/G,aAAc,EAMnBp/G,KAAK4/I,mBAAqB,IAAItgE,EAAA,EAAqBt/E,KAAM,gBArQ3D0xE,GAAQo5B,gLA2QRp5B,GAAQo5B,WAAWxwG,UAAUw/C,QAAU,WAAW,IAAAz3C,EAAArC,KAChDA,KAAKo8I,uBAAuBhB,yBAAyBz3I,KACnD3D,KAAK6/I,8BAA8B7iJ,KAAKgD,OAG1CA,KAAKmmC,OAAO22B,iBACV,WACE,GAAIz6D,EAAKk9C,gBAAgBzoB,SACvB,OAAOz0B,EAAKk9C,gBAAgBzoB,SAASx1B,UAGzC,SAAC/E,GAGC8F,EAAK21C,SAAS,WACRz7C,IACF8F,EAAKw6D,yBACLx6D,EAAKk9C,gBAAgBzoB,SAASxG,mBAC5BjuB,EAAK06D,kBAAkB//D,KAAvBqF,SAOV,IAAMmZ,EAAWxb,KAAKuY,QAAQ+D,cAC9Btc,KAAK2tB,OAASnS,EAAWk2D,GAAQo5B,WAAWnwD,MAAMmlG,OAChDpuE,GAAQo5B,WAAWnwD,MAAMolG,OAE3B//I,KAAKmmC,OAAO22B,iBACV,kBAAMz6D,EAAKi9I,kBACX,SAAC1pI,EAAQiY,GACHjY,EAAO1b,SACa,IAAlB0b,EAAO1b,OACTmI,EAAK80C,OAAQ,EAEb90C,EAAK80C,OAAQ,KAMrB,IAAM6oG,GAAgB,GAAI,IAAK,KACzBC,GAAc,IAAK,GAAI,IAC7BjgJ,KAAKkgJ,kBAAkBlgJ,KAAKu/I,eAAgBS,GAC5ChgJ,KAAKkgJ,kBAAkBlgJ,KAAKw/I,wBAAyBQ,GAAc,GACnEhgJ,KAAKkgJ,kBAAkBlgJ,KAAKy/I,aAAcQ,GAC1CjgJ,KAAKkgJ,kBAAkBlgJ,KAAK0/I,sBAAuBO,GAAY,GAE/DjgJ,KAAKmmC,OAAOvY,OACV,kBAAMvrB,EAAK80C,OACXn3C,KAAKmgJ,iBAAiBnjJ,KAAKgD,OAG7BA,KAAK+vD,UAAU31D,KAAK4F,KAAKuY,SAEzBvY,KAAKm/I,gBAAkBlE,EAAqBF,QAAQv/H,GAGpDxb,KAAKs6C,0BACLt6C,KAAKw+C,wBACLx+C,KAAKm7C,SAAQ,GACbn7C,KAAKogJ,wBAELpgJ,KAAKmmC,OAAOjY,IAAI,WAAYluB,KAAKw6C,eAAex9C,KAAKgD,QAWvD0xE,GAAQo5B,WAAWxwG,UAAU+hD,OAAS,WACpC,IACM34B,EADiB1jB,KAAK02B,gBACDpxB,UACzB,6CAEEg3C,QAAQ54B,KACV1jB,KAAKm3C,OAAQ,EACbn3C,KAAKo9B,SAAU,EAEfp9B,KAAKi4C,gBAAgBsE,cACnBv8C,KAAKg/I,YACLh/I,KAAKuY,SACL5U,KACA3D,KAAKqgJ,qBAAqBrjJ,KAAKgD,SAWrC0xE,GAAQo5B,WAAWxwG,UAAU8gD,KAAO,WAElCp7C,KAAKo9B,SAAU,EAQf,IAAM7kB,EAAUvY,KAAKuY,QAAQgG,QAC7BhG,EAAQ8iC,MAAMr7C,KAAKuY,QAAQm4B,SAC3B,IAAMl1B,EAAWjD,EAAQ+D,cACrBd,GACFy/H,EAAqBN,KAAKn/H,GAGxBxb,KAAK2tB,SAAW+jD,GAAQo5B,WAAWnwD,MAAMolG,OAC3C//I,KAAKi4C,gBAAgB6D,eACnB97C,KAAKg/I,aACJzmI,IACD5U,KACA3D,KAAK+7C,mBAAmB/+C,KAAKgD,OAEtBA,KAAK2tB,SAAW+jD,GAAQo5B,WAAWnwD,MAAMmlG,QAClD9/I,KAAKi4C,gBAAgB4D,cACnB77C,KAAKg/I,YACLzmI,GACA5U,KACA3D,KAAK+7C,mBAAmB/+C,KAAKgD,QAUnC0xE,GAAQo5B,WAAWxwG,UAAUgmJ,KAAO,WAElC,KAAItgJ,KAAKs/I,iBAAiBplJ,QAAU,GAApC,CAIA8F,KAAKo/I,qBAAsB,EAE3Bp/I,KAAKs/I,iBAAiBjsF,MACtB,IAAM90C,EAAQmzD,GAAQo5B,WAAWy1C,eAC/BvgJ,KAAKs/I,iBAAiBt/I,KAAKs/I,iBAAiBplJ,OAAS,IAEvD8F,KAAKuY,QAAQiT,YAAYjN,GAEzBve,KAAKo/I,qBAAsB,IAS7B1tE,GAAQo5B,WAAWxwG,UAAUkmJ,cAAgB,WAC3C,OAAOxgJ,KAAK2tB,SAAW+jD,GAAQo5B,WAAWnwD,MAAMolG,QAYlDruE,GAAQo5B,WAAWxwG,UAAU+lJ,qBAAuB,SAAS1jG,GAC3D38C,KAAKuY,QAAQiT,YAAY,MACzBxrB,KAAKogJ,wBACLpgJ,KAAK2tB,OAAS+jD,GAAQo5B,WAAWnwD,MAAMolG,OACvC//I,KAAKo9B,SAAU,EACfp9B,KAAKygJ,oBASP/uE,GAAQo5B,WAAWxwG,UAAUyhD,mBAAqB,SAASY,GAEzD,IAAMh/B,GAAW,IAAIisG,EAAA,GAAkBj4E,aAAagL,EAAKjjD,MACrDikB,EAASzjB,QACX8F,KAAKuY,QAAQ8iC,MAAM19B,EAAS,GAAG+yB,SAGjC1wC,KAAKogJ,wBAEDpgJ,KAAKuY,QAAQ+D,cACftc,KAAK2tB,OAAS+jD,GAAQo5B,WAAWnwD,MAAMmlG,OAEvC9/I,KAAK2tB,OAAS+jD,GAAQo5B,WAAWnwD,MAAMolG,OAGzC//I,KAAKo9B,SAAU,EAEfp9B,KAAKygJ,oBAQP/uE,GAAQo5B,WAAWxwG,UAAUggD,wBAA0B,WACrDt6C,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1BA,EAAYvlB,WAAU,GACtBorE,EAAA,EAAiB7lD,YAAYA,MASjCw2C,GAAQo5B,WAAWxwG,UAAUkkD,sBAAwB,WAAW,IAAAz4C,EAAA/F,KAC9DA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Bn1B,EAAKnB,IAAI0vB,eAAe4G,MAS5Bw2C,GAAQo5B,WAAWxwG,UAAUokD,wBAA0B,WAAW,IAAA73C,EAAA7G,KAChEA,KAAKg5C,cAAch2C,QAAQ,SAACk4B,GAC1Br0B,EAAKjC,IAAIyvB,kBAAkB6G,MAU/Bw2C,GAAQo5B,WAAWxwG,UAAU6gD,QAAU,SAAS/pC,GAE9C,IAAM2rC,EAAO/8C,KAAKqnC,cACZlZ,EAASujD,GAAQo5B,WAAW2zC,WAA5B,IAA0CvsG,EAAA,EAAclyC,MACxDk9C,EAAUl9C,KAAKq4C,qBAEjBjnC,GAEF2rC,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKuY,QADP,UAEYvY,KAAKuY,QAAQ+E,kBACvBtd,KAAK8qB,6BACL9qB,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKi5C,QACL,gBACAj5C,KAAKmgJ,iBACLngJ,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKi5C,QACL,YACAj5C,KAAK0gJ,kCACL1gJ,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACExyC,OACA,eACAkD,KAAK2gJ,0BACL3gJ,OAIJ+8C,EAAK3iD,KACHk1C,EAAA,EACEtvC,KAAKosD,eACL,MACApsD,KAAK4gJ,yBACL5gJ,OAIJk9C,EAAQ9W,aAAajY,EAAKnuB,KAAK2/I,qBAAqB,GACpDziG,EAAQ9W,aAAajY,EAAKnuB,KAAK4/I,oBAAoB,KAInD5/I,KAAK6gJ,kBAEL9jG,EAAK/5C,QAAQssC,EAAA,GACbyN,EAAK7iD,OAAS,EAEdgjD,EAAQnW,eAAe5Y,EAAKnuB,KAAK2/I,qBACjCziG,EAAQnW,eAAe5Y,EAAKnuB,KAAK4/I,qBAInC5/I,KAAKi5C,QAAQtjC,UAAUvE,IAQzBsgE,GAAQo5B,WAAWxwG,UAAUumJ,gBAAkB,WAC7C,IAAMtiI,EAAQmzD,GAAQo5B,WAAWy1C,eAC/BvgJ,KAAKs/I,iBAAiB,IACxBt/I,KAAKuY,QAAQiT,YAAYjN,GAEzBve,KAAKogJ,wBACLpgJ,KAAKm3C,OAAQ,EACbn3C,KAAKmgJ,oBAUPzuE,GAAQo5B,WAAWxwG,UAAU8lJ,sBAAwB,WAInD,GAHIpgJ,KAAKs/I,iBAAiBplJ,OAAS,IACjC8F,KAAKs/I,iBAAiBplJ,OAAS,GAEI,IAAjC8F,KAAKs/I,iBAAiBplJ,OAAc,CACtC,IAAMshB,EAAWxb,KAAKuY,QAAQ+D,cACxBiC,EAAQmzD,GAAQo5B,WAAWy1C,eAAe/kI,GAChDxb,KAAKs/I,iBAAiBllJ,KAAKmkB,KAe/BmzD,GAAQo5B,WAAWxwG,UAAUomJ,kCAAoC,SAC/Dv1H,GAEA,IAAI3P,EAAWxb,KAAKuY,QAAQ+D,cAE5B,GAAId,aAAoBknG,EAAA,EAAoB,CAC1C,IACMo+B,EADW9gJ,KAAKq/I,eAAej5H,KAAK5K,GACZuiC,OAAO,GACrCviC,EAAW8tF,EAAA,EAAUwD,QAAQ9sG,KAAKq/I,eAAe0B,MAAMD,IACvD9gJ,KAAKo/I,qBAAsB,EAC3Bp/I,KAAKuY,QAAQiT,YAAYhQ,EAAS+C,SAClCve,KAAKo/I,qBAAsB,EAG7B,IAAM7gI,EAAQmzD,GAAQo5B,WAAWy1C,eAAe/kI,GAChDstB,EAAA,EAAYxlC,OAAOib,GACnBve,KAAKs/I,iBAAiBllJ,KAAKmkB,GAC3Bve,KAAKmmC,OAAOyN,UAWd89B,GAAQo5B,WAAWxwG,UAAU4lJ,kBAAoB,SAC/CznI,EAAQmB,EAAOonI,GAGf,IAAMC,GAAgC,IAAnBD,EACbE,EAAYtnI,EAAM3c,QACxBikJ,EAAU9mJ,KAAK,IAEf,IAAMogB,EAAQ,IAAI2mI,GAAA,GAChB1mI,OAAQ,EACRX,OAAQ,IAAIo3E,GAAA,GACVt3E,MAAOA,EACPG,MAAO,IAETW,KAAM,IAAIklE,GAAA,GAAahmE,MAAOsnI,MAGhCzoI,EAAA,MAAkB,IAAIknE,GAAA,GACpBnlE,UAEF/B,EAAA,WAAuB,IAAIknE,GAAA,GACzBnlE,UAGF/B,EAAA,YACE,IAAIknE,GAAA,GACF7lE,OAAQ,IAAIo3E,GAAA,GACVt3E,MAAOA,EACPG,MAAO,OAITknI,GACFxoI,EAAA,WAAqBre,KACnB4F,KAAKqoC,mBAAmBzvB,gBAAe,IAG3CH,EAAA,iBACE,IAAIknE,GAAA,GACF7lE,OAAQ,IAAIo3E,GAAA,GACVt3E,MAAOA,EACPG,MAAO,OAITknI,GACFxoI,EAAA,gBAA0Bre,KACxB4F,KAAKqoC,mBAAmBzvB,gBAAe,IAI3CH,EAAA,SACE,IAAIknE,GAAA,GACF7lE,OAAQ,IAAIo3E,GAAA,GACVt3E,MAAOA,EACPG,MAAO,IAETW,KAAM,IAAIklE,GAAA,GACRhmE,MAAOsnI,OAITD,GACFxoI,EAAA,QAAkBre,KAChB4F,KAAKqoC,mBAAmBzvB,gBAAe,IAG3CH,EAAA,cACE,IAAIknE,GAAA,GACF7lE,OAAQ,IAAIo3E,GAAA,GACVt3E,MAAOA,EACPG,MAAO,IAETW,KAAM,IAAIklE,GAAA,GACRhmE,MAAOsnI,OAITD,GACFxoI,EAAA,aAAuBre,KACrB4F,KAAKqoC,mBAAmBzvB,gBAAe,KAe7C84D,GAAQo5B,WAAWxwG,UAAU6lJ,iBAAmB,WAC9C,IAAM3kI,EAAWxb,KAAKuY,QAAQ+D,cAC9B,GAAId,EAAU,CACZ,IAAMk+B,EAAWl+B,EAASxC,UACpBooI,EAAephJ,KAAKi5C,QAAQvjC,YAC9BqD,SAGAA,EAFA/Y,KAAKm3C,MACHiqG,EACMphJ,KAAKy/I,aAAa/lG,GAElB15C,KAAK0/I,sBAAsBhmG,GAGjC0nG,EACMphJ,KAAKu/I,eAAe7lG,GAEpB15C,KAAKw/I,wBAAwB9lG,GAGzC15C,KAAKuY,QAAQD,SAASS,KAgB1B24D,GAAQo5B,WAAWxwG,UAAUyiE,kBAAoB,SAASvuC,GAGxD,IAAMtsB,EACJssB,EAAStsB,KACX,KAAIA,EAAKZ,UAAYY,EAAKZ,SAASpH,QAK/BgI,EAAK2jB,KAAO7lB,KAAKg/I,aAAa,CAChC,IAAMv8I,EAAQm3E,EAAA,EAA6BjtD,SAAS6B,GACpDsa,EAAA,EAAYxlC,OACVb,aAAiBo3E,EAAA,GAAgBp3E,aAAiBu3E,GAAA,GACpDh6E,KAAKu4C,kBAAoB91C,IAc7BivE,GAAQo5B,WAAWxwG,UAAUuiE,uBAAyB,WACpD78D,KAAKu4C,kBAAoB,MAQ3Bm5B,GAAQo5B,WAAWxwG,UAAUmmJ,iBAAmB,WAC1CzgJ,KAAKu4C,mBACPv4C,KAAKguC,iBAAiB1kB,gBAAgBtpB,KAAKu4C,oBAY/Cm5B,GAAQo5B,WAAWxwG,UAAUqmJ,0BAA4B,SAASx7E,GAChE,IAAMrlE,EAAiBE,KAAK02B,gBAC5B,GAAI12B,KAAKm3C,MAAO,CACd,IAAMzzB,EAAM5jB,EAAewF,UAAU,8BAErC,OADC6/D,GAAKroE,OAAO0lB,OAAO6+H,YAAc39H,EAC3BA,EAET,MAAO,IAYTguD,GAAQo5B,WAAWxwG,UAAUsmJ,yBAA2B,SAASz1H,GAC/D,IACMm2H,EAD2Cn2H,EAAIvB,QAErCtN,cAEVD,EAAOrc,KAAKuY,QAAQ+D,cAE1B,GAAID,EAAM,CACR,IAAMklI,EAAWvhJ,KAAKq/I,eAAej5H,KAAK/J,GACpCmlI,EAAiBxhJ,KAAKq/I,eAAej5H,KAAKk7H,GAC5CG,SAUJ,GARIzhJ,KAAKu9I,UAAYoB,EAA+Bd,YAAYC,IAC9D2D,EAAoBF,EAASG,MAAMF,GAE/BD,EAASI,WAAWH,KACtBC,EAAoBF,EAASK,WAAWJ,IAIxCC,EAAmB,CACrB,IAAMI,EAAgB7hJ,KAAKq/I,eAAe0B,MAAMU,GAC1CvgI,EAAYooF,EAAA,EAAUwD,QAAQ+0C,GACpC7hJ,KAAKuY,QAAQiT,YAAYtK,EAAU3C,eAG5Bve,KAAKu9I,UAAYoB,EAA+Bd,YAAYC,KACrE99I,KAAKuY,QAAQiT,YAAY89E,EAAA,EAAUwD,QAAQw0C,EAAW/iI,UAGxDve,KAAKosD,eAAe1/B,SAetBglD,GAAQo5B,WAAWxwG,UAAUwwB,6BAA+B,WAAW,IAAA6N,EAAA34B,KAC/Dqc,EAAOrc,KAAKuY,QAAQ+D,cAC1Btc,KAAKg4C,SAAS,WACZrf,EAAKwmH,gBAAkBlE,EAAqBF,QAAQ1+H,KAGlDrc,KAAKo/I,qBAIL/iI,GAOFrc,KAAKg4C,SAAS,WACZrf,EAAK2mH,iBAAiBllJ,KAAKiiB,EAAKkC,YAWtCmzD,GAAQo5B,WAAWxwG,UAAUulJ,8BAAgC,SAASiC,GACpE9hJ,KAAKu7I,oBAAsBuG,EACvB9hJ,KAAKu7I,oBAAoBrhJ,SAC3B8F,KAAKi/I,2BAA6Bj/I,KAAKu7I,oBAAoB,KAQ/D7pE,GAAQo5B,WAAWxwG,UAAUkgD,eAAiB,WAC5Cx6C,KAAK+vD,UAAUrjC,QACf1sB,KAAKm7C,SAAQ,GACbn7C,KAAK0+C,2BAgBPgzB,GAAQo5B,WAAWy1C,eAAiB,SAAS/kI,GAC3C,IAAI+C,EAAQ,KAIZ,OAHI/C,IACF+C,EAAQ/C,EAAS+C,SAEZA,GAQTmzD,GAAQo5B,WAAW2zC,WAAa,KAMhC/sE,GAAQo5B,WAAWnwD,OACjBolG,OAAQ,SACRD,OAAQ,UAIVpuE,GAAQlhD,WAAW,6BACjBkhD,GAAQo5B,YAGK,IAAApmC,GAAA,aCrmCToS,GAAU,SAASl3E,EAAI83C,EAAgBgO,GAM3C1lD,KAAK4uC,GAAKhvC,EAMVI,KAAKi4C,gBAAkBP,EAMvB13C,KAAKS,cAAgBilD,EAMrB1lD,KAAK+hJ,mBAAqB,0GAgB5BjrE,GAAQx8E,UAAUs8G,WAAa,WAE7B,IAAK52G,KAAK+hJ,mBAAoB,CAC5B/hJ,KAAK+hJ,mBAAqB/hJ,KAAK4uC,GAAGhuC,QAElC,IAAM84C,EAAW15C,KAAKS,cAAckjD,SAClCmzB,GAAQs2B,MAAM40C,WACVn8H,EAAK7lB,KAAKS,cAAckjD,SAC5BmzB,GAAQs2B,MAAM60C,IACVx/I,EAAQzC,KAAKS,cAAckjD,SAC/BmzB,GAAQs2B,MAAMtkF,OACVnsB,EAAWqD,KAAKS,cAAckjD,SAClCmzB,GAAQs2B,MAAM80C,UACV9gJ,EAAQpB,KAAKS,cAAckjD,SAC/BmzB,GAAQs2B,MAAM+0C,OAEZzoG,GAAY7zB,GAAMpjB,GAAS9F,GAAYyE,EACzCpB,KAAKi4C,gBAAgBgJ,kCAClBx+C,KAEC+P,SAAU,KACV7V,SAAUA,EACVJ,MAAOspB,KAETliB,KAAK3D,KAAKi+C,mBAAmBjhD,KAAKgD,KAAMrD,EAAUkpB,IAEpD7lB,KAAK+hJ,mBAAmB/9I,QAAQ,MAIpC,OAAOhE,KAAK+hJ,mBAAmBjhJ,SASjCg2E,GAAQx8E,UAAU8nJ,YAAc,WAC9B,OAAOpiJ,KAAKS,cAAckjD,SACxBmzB,GAAQs2B,MAAM40C,YAQlBlrE,GAAQx8E,UAAU+nJ,eAAiB,WACjC,OAAOriJ,KAAKS,cAAcojD,cACxBizB,GAAQs2B,MAAMtkF,QAelBguD,GAAQx8E,UAAU2jD,mBAAqB,SAASrtC,EAAKrU,EAAOohB,GAC1D,IAAIpF,SAEJ,GAAIoF,EAASzjB,OACXqe,EAAUoF,EAAS,OACd,CACL,IAAM0M,KACNA,EAAkBzZ,GAAOrU,EACzB8tB,EAAA,SAAgC,KAChC9R,EAAU,IAAIwzC,EAAA,EAAU1hC,GAG1BrqB,KAAK+hJ,mBAAmB/9I,QAAQuU,IAQlCu+D,GAAQs2B,OAKN40C,UAAW,yBAKXC,GAAI,mBAKJn5H,MAAO,sBAKPo5H,SAAU,yBAKVC,MAAO,wBAOTrrE,GAAQp7E,OAASoM,QAAQpM,OAAO,2BAC9B8tH,EAAA,EAAsB9tH,OAAOK,KAC7BumJ,GAAA,EAAyB5mJ,OAAOK,QAEnBgM,QAAQ,0BAA2B+uE,IAGnC,IAAAyD,GAAA,GClKAgoE,GATCz6I,QAAQpM,OAAO,0BAC7BgpE,GAA0B3oE,KAC1BsgJ,EAAuCtgJ,KACvCw+E,GAAwB7+E,OAAOK,KAC/BkgJ,EAAsBvgJ,OAAOK,KAC7B4iJ,EAA+B5iJ,8CCN3BymJ,IAAc,SACTC,GAAA,EACT,2BACA,2BACA,SACA,eACA,eACA,gBACA,0CACA,WACA,YACAr7I,KAAK,KAGPs7I,GAAA,EAAMxxE,KAAK,YAAasxE,IACxBG,GAAA,EAAqBD,GAAA,GACrBlxE,GAAA,EAAW,aAAaL,WAJA,MAAS,MAAS,KAAS,QAMnD,0ECLKr0E,OAAOmsF,wBACV3hF,MAAM,oVAGNxK,OAAOqlD,SAAW,0BAYpB,IAAM4nD,GAAU,SAAS18E,EAAQ1tB,EAAWy2B,GAAU,IAAA/zB,EAAArC,KAMpDA,KAAK4iJ,cAAe,EAEpBC,EAAA,EAAwCroJ,KAAKwF,MAC3Cs/F,KAAM,MACNgf,eACEl+F,QAAS,OAAQ,QACjBiqE,KAAM,EACNy4D,aAAc,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAK,IAAM,GAAK,OAE9Dz1H,EAAQ1tB,GAMX,IAAMm4C,EAAsBn4C,EAAUtD,IAAI,uBAE1Cy7C,EAAoB9Q,gBAAgB,YAEpC,IAAM+7G,EAAqB,IAAIzjE,EAAA,EAAqBt/E,KAAM,gBAC1D83C,EAAoB1R,aAAa,WAAY28G,GAAoB,GAEjE,IAAMliD,EAAoB,IAAIvhB,EAAA,EAAqBt/E,KAAM,eACzD83C,EAAoB1R,aAAa,WAAYy6D,GAAmB,GAGhEzqE,EAAS,WACP/zB,EAAKugJ,cAAe,IAOtB5iJ,KAAKg/D,cAAgB,IAAI5yB,GAAA,GACvBC,OAAO,IAOTrsC,KAAKwyB,aAAe,IAAI8Z,GAAA,GACtB9mB,OAAQxlB,KAAKg/D,gBAOfh/D,KAAKosD,eAAiB,IAAIjgB,EAAA,EAM1BnsC,KAAKirD,aAAe,IAAI3e,GAAA,GACtB9mB,OAAQ,IAAI4mB,GAAA,GACVzuB,SAAU3d,KAAKosD,eACf/f,OAAO,MAOO1sC,EAAUtD,IAAI,aAEtBqJ,kBAAkB/B,KAAK,SAACzC,GAC5BA,IAEFmB,EAAKuC,IAAIyiB,SAAShlB,EAAKmwB,cACvBnwB,EAAKuC,IAAIyiB,SAAShlB,EAAK4oD,iBAQ3B,IAAM+3F,EAA0BrjJ,EAAUtD,IAAI,2BAM9C2D,KAAKijJ,WAAaD,EAAwBZ,cAM1CpiJ,KAAKkjJ,cAAgBF,EAAwBX,iBAM7CriJ,KAAK82G,UAAY,KAEjBksC,EAAwBpsC,aAAajzG,KAAK,SAAC4U,GACzClW,EAAKy0G,UAAYv+F,EACbA,GACFlW,EAAK28D,cAAc1yC,WAAW/T,KAQlCvY,KAAKmjJ,8BAAgCxpB,GAAA,EDhIvB,YCgI4D,aAM1E35H,KAAKojJ,qBAAuB,KAAQ,IAAQ,IAAO,IAAO,IAAO,IAAM,IAAM,IAAM,IAAK,IAAK,IAAK,IAMlGpjJ,KAAKqjJ,iBAAmB,QAAS,QAMjCrjJ,KAAK6kI,uBAAyB7kI,KAAKqjJ,gBAAgB,GAMnDrjJ,KAAKsjJ,2BACHC,OAAU3pI,MAAO,WACjB4pI,MAAS5pI,MAAO,YAOlB5Z,KAAKyjJ,2BACHx3D,KDlKY,YCmKZ1mF,MAAO,iBACPL,OAAQ,sCAER+mF,KAAM0tC,GAAA,EACNp0H,MAAO,gBACPL,OAAQ,sCAER+mF,KAAM,YACN1mF,MAAO,QACPL,OAAQ,yBAKV,IAAMpF,EAAiBH,EAAUtD,IAAI,kBAKrC,GAJAyD,EAAewF,UAAU,eACzBxF,EAAewF,UAAU,mBACzBxF,EAAewF,UAAU,eAErB3F,EAAUY,IAAI,aAAc,CAC9B,IAAMyH,EAAUrI,EAAUY,IAAI,iBAAmBZ,EAAUtD,IAAI,sBAAmB6D,GACpE,IAAIwjJ,GAAAj5E,GACZp5D,OAAO1R,EAAUtD,IAAI,aAAc2L,GACtC27I,UAAUC,GAAAn5E,GACVo5E,sGAIP3xG,EAAA,EAAgB63D,GAAS84C,EAAA,IAEzB94C,GAAQruG,OAASoM,QAAQpM,OAAO,aAC9B++I,EAAQ/+I,OAAOK,KACf8mJ,EAAA,EAAwCnnJ,OAAOK,KAC/CwmJ,GAAuBxmJ,QAGVQ,MAAM,sCAAuC,sBAC5DwtG,GAAQruG,OAAOq7C,KAAf,iBAAmC,SAACC,GAClCA,EAAeC,IAAI,qBAAsB57C,EAAQ,SAGnD0uG,GAAQruG,OAAO80B,WAAW,mBAAoBu5E,IAE/BzsG,EAAA,2BC3Of5B,EAAAD,QAAA,ouBCAAC,EAAAD,QAAA,60DCAAC,EAAAD,QAAA,wtHCAAC,EAAAD,QAAA,6gFCAAC,EAAAD,QAAA,mjDCAAC,EAAAD,QAAA,m0ECAAC,EAAAD,QAAA,ktCCAAC,EAAAD,QAAA,ypCCAAC,EAAAD,QAAA,0jKCAAC,EAAAD,QAAA,ipCCAAC,EAAAD,QAAA,q6GCAAC,EAAAD,QAAA,i+GCAAC,EAAAD,QAAA,8pHCAAC,EAAAD,QAAA,qoGCAAC,EAAAD,QAAA,mpBCAAC,EAAAD,QAAA,wUCAAC,EAAAD,QAAA,kxBCAAC,EAAAD,QAAA,+SCAAC,EAAAD,QAAA,m3FCAAC,EAAAD,QAAA,i+FCAAC,EAAAD,QAAA,4mCCAAC,EAAAD,QAAA,6jBCAAC,EAAAD,QAAA,2ICAAC,EAAAD,QAAA,4mBCAAC,EAAAD,QAAA,kxECAAC,EAAAD,QAAA,svBCAAC,EAAAD,QAAA,gsRCAAC,EAAAD,QAAA,2iBCAAC,EAAAD,QAAA,guCCAAC,EAAAD,QAAA,82GCAAC,EAAAD,QAAA,q8ECAAC,EAAAD,QAAA,kjOCAAC,EAAAD,QAAA,wsBCAAC,EAAAD,QAAA,2OCAAC,EAAAD,QAAA,+uBCAAC,EAAAD,QAAA","file":"oeedit.027e7c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([361,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin, opt_customOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              dimensionsFilter\n            ]\n          );\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n      this.gmfSnapping_.refresh();\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensions_filters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (let i = 0, ii = layersList.length; i < ii; i++) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layersList[i] === dataSource.name)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer, url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer The layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, layer, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: this.getOpacityOrInherited_(layer),\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: this.getOpacityOrInherited_(layer),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer, source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n/**\n * Return an opacity value for the specified layer.\n * @param {ol.layer.Base} layer Layer.\n * @returns {number} opacity Opacity value.\n * @private\n */\nexports.prototype.getOpacityOrInherited_ = function(layer) {\n  if (layer.get('inheritedOpacity') !== undefined) {\n    return layer.get('inheritedOpacity');\n  }\n  return layer.getOpacity();\n};\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.hasError = false;\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file, (success) => {\n      if (!success) {\n        this.hasError = true;\n      }\n    });\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n/**\n * @typedef {{\n *     useBbox: (boolean|undefined),\n *     label: (Object.<string, boolean>),\n *     params: (Object.<string, Object.<string, string>>)\n * }}\n */\nexports.optionsLegendType;\n\n/**\n * @typedef {{\n *     scaleInput: (boolean|undefined),\n *     legend: (optionsLegendType|undefined)\n * }}\n */\nexports.optionsType;\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    /**\n     * @type optionsLegendType\n     * @private\n     */\n    this.gmfLegendOptions_ = {\n      useBbox: true,\n      label: {},\n      params: {},\n    };\n\n    if ($injector.has('gmfPrintOptions')) {\n      /**\n       * @type optionsType\n       */\n      const options = $injector.get('gmfPrintOptions');\n      if (options.scaleInput) {\n        this.scaleInput = options.scaleInput;\n      }\n      if (options.legend) {\n        Object.assign(this.gmfLegendOptions_, options.legend);\n      }\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const center = this.map.getView().getCenter();\n      const deltaX = this.paperSize_[0] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const deltaY = this.paperSize_[1] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const bbox = [\n        center[0] - deltaX,\n        center[1] - deltaY,\n        center[0] + deltaX,\n        center[1] + deltaY,\n      ];\n      const legend = this.getLegend_(scale, this.layoutInfo.dpi, bbox);\n      if (legend !== null) {\n        customAttributes['legend'] = legend;\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @param {number} dpi The DPI.\n   * @param {Array.number} bbox The bbox.\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale, dpi, bbox) {\n    const legend = {'classes': []};\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      const classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          const layerName = `${layer.get('layerNodeName')}`;\n          let icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          const layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            let icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale, undefined, undefined, undefined, source.serverType_, dpi,\n                this.gmfLegendOptions_.useBbox ? bbox : undefined,\n                this.map.getView().getProjection().getCode(),\n                this.gmfLegendOptions_.params[layer.getSource().serverType_]\n              );\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push(Object.assign({\n                'name': this.gmfLegendOptions_.label[layer.getSource().serverType_] === false ? '' :\n                  gettextCatalog.getString(name),\n                'icons': [icons]\n              }, layer.getSource().serverType_ === 'qgis' ? {\n                'dpi': dpi,\n              } : {}));\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Query\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: new olFeature(geometry)});\n  this.dispatchEvent(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.toolsComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting/toolsComponent', require('./toolsComponent.html'));\n});\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/objectediting/toolsComponent'\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // Update active property\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = active || this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n\n  if (!this.active) {\n    this.requiresLayer = false;\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.component\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport {OL3Parser} from 'jsts/io';\nconst jsts = {\n  io: {\n    OL3Parser,\n  },\n};\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting', require('./component.html'));\n});\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/objectediting';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new jsts.io.OL3Parser();\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.registerInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * Undo the latest modifications.\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n  } else {\n\n    this.undoAllChanges_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof olGeomMultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return '';\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.unregisterInteractions_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the deferred\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.module\n */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingModule', [\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.oeedit.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfObjecteditingModule from 'gmf/objectediting/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, $timeout) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.oeEditActive = false;\n\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  ngeoToolActivateMgr.unregisterGroup('mapTools');\n\n  const oeEditToolActivate = new ngeoMiscToolActivate(this, 'oeEditActive');\n  ngeoToolActivateMgr.registerTool('mapTools', oeEditToolActivate, true);\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, false);\n\n  // Set edit tool as default active one\n  $timeout(() => {\n    this.oeEditActive = true;\n  });\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {gmf.theme.Themes} gmfObjectEditingManager The gmf theme service\n   */\n  const gmfThemes = $injector.get('gmfThemes');\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n   *     ObjectEditing manager service.\n   */\n  const gmfObjectEditingManager = $injector.get('gmfObjectEditingManager');\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.oeGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.oeLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.oeFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.oeFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appoeedit', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfObjecteditingModule.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('OEEditController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<gmf-objecteditingtools gmf-objecteditingtools-active=oeCtrl.toolsActive gmf-objecteditingtools-copyfromactive=oeCtrl.copyFromActive gmf-objecteditingtools-deletefromactive=oeCtrl.deleteFromActive gmf-objecteditingtools-feature=oeCtrl.feature gmf-objecteditingtools-geomtype=::oeCtrl.geomType gmf-objecteditingtools-map=::oeCtrl.map gmf-objecteditingtools-process=oeCtrl.process gmf-objecteditingtools-queryablelayerinfo=oeCtrl.selectedQueryableLayerInfo gmf-objecteditingtools-requireslayer=oeCtrl.queryableLayerListShown gmf-objecteditingtools-sketchfeatures=::oeCtrl.sketchFeatures> </gmf-objecteditingtools> <div class=form-group ng-show=oeCtrl.queryableLayerListShown> <label ng-show=\\\"oeCtrl.copyFromActive === true\\\" class=control-label>{{'Copy from:' | translate}}</label> <label ng-show=\\\"oeCtrl.deleteFromActive === true\\\" class=control-label>{{'Cut from:' | translate}}</label> <select class=form-control ng-model=oeCtrl.selectedQueryableLayerInfo ng-options=\\\"layerInfo.layerNode.name | translate for layerInfo in oeCtrl.queryableLayersInfo\\\"> </select> </div> <form novalidate name=form class=\\\"form gmf-objectediting-form\\\"> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-objectediting-btn-save\\\" ng-click=\\\"form.$valid && oeCtrl.save()\\\" ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending || !oeCtrl.featureHasGeom\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-undo\\\" ng-click=oeCtrl.undo() ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending\\\" title=\\\"{{'Undo latest modifications' | translate}}\\\" href>{{'Undo' | translate}}</a> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-delete\\\" ng-click=oeCtrl.delete() ng-disabled=\\\"oeCtrl.isStateInsert() || oeCtrl.pending\\\" title=\\\"{{'Delete the feature' | translate}}\\\" href>{{'Delete' | translate}}</a> </form> \";","module.exports = \"<div class=btn-group role=group aria-label=\\\"\\\"> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPoint')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a point to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiLineString')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a linestring to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPolygon')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a polygon to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.eraseActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomTypePolygon ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.eraseActive}\\\" ng-model=oetCtrl.eraseActive title=\\\"{{'Erase geometry' | translate}}\\\"> <span class=\\\"fa fa-minus-square-o gmf-icon-oe-erase\\\"> </span> </a> <a href ng-if=\\\"::oetCtrl.geomType === 'MultiPolygon'\\\" ngeo-btn ngeo-createregularpolygonfromclick ngeo-createregularpolygonfromclick-active=oetCtrl.drawTriangleActive ngeo-createregularpolygonfromclick-angle=oetCtrl.triangleAngle ngeo-createregularpolygonfromclick-features=::oetCtrl.sketchFeatures ngeo-createregularpolygonfromclick-map=::oetCtrl.map ngeo-createregularpolygonfromclick-radius=::oetCtrl.triangleRadius class=\\\"btn btn-sm btn-default ngeo-createregularpolygonfromclick\\\" ng-class=\\\"{active: oetCtrl.drawTriangleActive}\\\" ng-model=oetCtrl.drawTriangleActive title=\\\"{{'Draw a triangle' | translate}}\\\"> <span class=\\\"fa fa-play fa-rotate-270 gmf-icon-oe-triangle\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.copyFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-add\\\" ng-class=\\\"{active: oetCtrl.copyFromActive}\\\" ng-model=oetCtrl.copyFromActive title=\\\"{{'Copy from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-clone gmf-icon-oe-copyfrom\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.deleteFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-delete\\\" ng-class=\\\"{active: oetCtrl.deleteFromActive}\\\" ng-model=oetCtrl.deleteFromActive title=\\\"{{'Cut from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-scissors gmf-icon-oe-deletefrom\\\"> </span> </a> </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\" ng-click=\\\"$ctrl.hasError = false\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=input-group> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined || $ctrl.hasError\\\"> <span ng-if=!$ctrl.hasError>{{'Load local file' | translate}}</span> <span ng-if=$ctrl.hasError>{{'Unable to load the file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}