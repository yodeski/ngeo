{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/format/AttributeType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/layertree/Controller.js","webpack:///./src/utils.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/statemanager/Service.js","webpack:///./src/message/Notification.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/Time.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/Group.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/statemanager/Location.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/draw/features.js","webpack:///./src/misc/File.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/mobile/navigation/component.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/Menu.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/format/Attribute.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/misc/filters.js","webpack:///./src/download/service.js","webpack:///./src/GeometryType.js","webpack:///./src/interaction/Measure.js","webpack:///./src/interaction/common.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/rule/Rule.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/map/component.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/download/Csv.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./contribs/gmf/src/mobile/measure/module.js","webpack:///./contribs/gmf/src/mobile/navigation/module.js","webpack:///./src/geolocation/mobile.js","webpack:///./contribs/gmf/src/controllers/AbstractMobileController.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/mobile/Controller.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","assert","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","service","options","_classCallCheck","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","key","_createClass","time","range","lower","upper","end","start","active","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","index","indexOf","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","geometry","multiGeom","appendPoint","appendLineString","appendPolygon","navigator","userAgent","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","split","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","useSpatialIndex","layer_","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","features","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","init","setMap","setStyle","defaultFunction","resolution","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","$filter","$filter_","gettextCatalog_","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","assertInstanceof","getActive","setActive","getVisible","setVisible","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","getSource","$applyAsync","$","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","id","rootChild","grp","cancel","unshift","addGroupByName","groupName","_this4","addGroupByLayerName","layerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","removeGroup","found","removeAll","cloneGroupNode_","names","clone","toggleNodeCheck_","_this6","childNode","isChecked","notify","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this9","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","opt_customOptions","FORMAT","LAYERS","olServerType","assign","serverType","crossOrigin","updateParams","createBasicWMSLayerFromDataSource","visible","capabilitiesURL","opt_matrixSet","opt_dimensions","parser","preload","read","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","Infinity","opt_layers","setLayers","getGroupFromMap","getLayerGroup","existingGroup","getFlatLayers","sublayers","sublayer","getFlatLayers_","computedOpacity","opacity","getLayerByName","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","Math","round","isLayerVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","setZIndexToFirstLevelChildren","ZIndex","innerLayer","setZIndex","updateWMSLayerState","getQuerySourceIds","NOT","OR","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","map_","listenerKeys_","handleDataSourcesAdd_","bindMap_","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unbindMap_","evt","target","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","parseInt","classNames","el","html","addClass","delay","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","dataSources","title_","title","destroy","getDataSourceState","VisibilityState","ON","OFF","addDataSource","removeDataSource","remove","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","factory_","func","wait","invokeApply","timeout","_len","args","_key","context","factory","addListenerKey","initListenerKey_","clearListenerKey","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","hash","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","$inject","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","resp","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","getExtent","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","goog_asserts_prod","registerDataSource_","handleDataSourceVisibleChange_","oldValue","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","concat","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoDataSources","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","formats","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","extent","fit","rejections","content","readOptions","featureProjection","getProjection","isKml","KML","readFeatures","isGpx","GPX","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","proj4__WEBPACK_IMPORTED_MODULE_0__","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","Proj","projections","add","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","defs","setExtent","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","str","coords","y","getProjectionList","projectionsCodes","code","proj","projection","toUpperCase","substr","tryProjections","coordinates","viewProjection","opt_projections","e","tryProjectionsWithInversion","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","defaultParams_","query","queryParams","Promise","catch","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","run","$templateCache","put","templateUrl","Controller_","_class","scope_","getGroupUid","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","toggle","toggleDataSource","component","bindings","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","image","stroke","color","width","points","radius","radius2","angle","mapTooltip_","featureHashFormat_","encodeStyles","propertiesType","fillColor","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","getGeometry","getType","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","center","targetProjection","reprojectedCenter","getMapZoom","zoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","class","text","removeOverlay","addOverlay","f","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","size","getSize","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","writeFeatures","wfsLayer","numGroups","WFS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","_iterator6","_isArray6","_i6","_ref6","wmtsFindLayerCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iterator7","_isArray7","_i7","_ref7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iterator8","_isArray8","_i8","_ref8","wmsGroupLayerNames","_iterator10","_isArray10","_i10","_ref10","wmsDataSource","_iterator9","_isArray9","_i9","_ref9","wmtsGroupLayerNames","_iterator11","_isArray11","_i11","_ref11","wmtsDataSource","_iterator12","_isArray12","_i12","_ref12","startsWith","_iterator14","_isArray14","_i14","_ref14","_iterator15","_isArray15","_i15","_ref15","_iterator13","_isArray13","_i13","_ref13","OpenLayersLayerProperties","regexp","key1","key2","attrs","component_","ngeoDatePickerTemplateUrl","scope","onDateSelected","bindToController","restrict","link","lang","getCurrentLanguage","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","find","datepicker","edateOptions","dp","css","stopPropagation","directive","ngeoTime","ngeoTime_","isModeRange","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","sDate","eDate","isDate","initialOptions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","reason","onprogress","readAsText","load","opt_cancelP","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","Circle","getRadius","encodeStyleFill_","opt_propertyName","propertyName","getColor","fillColorRgba","fillColorHex","utils","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","font","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","polygon","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","Fill","Stroke","fill","Text","Style","setStyleProperties_","FeatureProperties","setProperties","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","dx","dy","encodedCoordinates","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","Feature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeahead","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","$apply","open","close","suggestion","dataset","cursorchange","select","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","geojsonFormat","GeoJSON","bloodhoundOptions","remote","prepare","settings","transform","parsedResponse","featureCollection","dataProjection","datumTokenizer","queryTokenizer","Bloodhound","tokenizers","whitespace","obj","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","limit","origins","results","bbox","exec","parseBbox","geom_st_box2d","removeHtmlTags","extractName","setId","featureId","bhOptions","createLocationSearchBloodhound","module_exports","navCtrl","slid_","active_","header_","backButton_","back","back_","cls","ClassName_","ACTIVE","SLIDE","GO_BACK","slideOut","currentTarget","parents","SLIDE_OUT","removeClass","slideIn","attr","updateNavigationHeader_","click","toggleClass","BACK","nav","setTimeout","slideBack","pop","backIfActive","backDirective","require","backOnClickDirective","sortable","resetUpDragDrop","ret","handleClassName","callbackFn","callbackCtx","sortableElement","off","sortableOptions","axis","classes","ui-sortable-helper","ui","oldIndex","newIndex","Function","elem","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","maxZoom","onInitCallback","SearchController_","$compile","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","element_","compile_","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","highlight","datasets","displayColorPicker","listeners","$onInit","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","datasource","groupValues","groupActions","filterLayername_","action","filterAction_","createDataset_","datasetTitle","groupsKey","labelKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","header","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","ttAdapter","$new","act","opt_layerName","featureLayerName","mapProjectionCode","getCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","currentLanguage","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","geom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","layer_name","leaveSearch_","selectFromGMF_","actions","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","directive_","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","getElement","getMap","contentEl","template","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","gmfLayertreeTemplate","openLinksInNewWindow","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfPermalink","gmfSyncLayertreeMap","gmfPermalink_","gmfSyncLayertreeMap_","groupNodeStates_","dataLayerGroup_","DATALAYERGROUP_NAME","render","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","scale","getScale_","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","metadataURL","gmfx","openIframePopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","ds","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","legend","parentNode","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","positioning","TOP_LEFT","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","coordinate","setPosition","documentElement","handleClickOut_","closest","originalEvent","Element","contains","pixel","modalComponent_exports","ngModel","transclude","resizable","closable","$element_","$scope_","modal_","dialog","draggable","$render","modal","$viewValue","$setViewValue","$onDestroy","modalComponent","component_exports","Service","Notification","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","component_classCallCheck","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","CustomEvent","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","ImageWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","handleDestroy_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","EnumerateAttribute_exports","gmfLayersUrl","EnumerateAttribute_classCallCheck","http_","promises_","getAttributeValues","promiseId","handleGetAttributeValues_","items","EnumerateAttribute","Attribute_exports","setGeometryType","AttributeType","geomType","Attribute","XSDAttribute_exports","XML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","alias","nillable","required","setAttributeByXsdType_","enumerations","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","numType","NumberType","FLOAT","INTEGER","getGeometryAttribute","geomAttribute","XSDAttribute","WFSAttribute","WFSAttribute_classCallCheck","complexTypeElements","readFromComplexTypeElement_","filters_exports","Scalify","numberFilter","filterFn","$locale","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","math","dms","string","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","duration","output","remainder","misc_filters","service_exports","fileName","opt_fileType","fileType","isSafari","blob","Blob","FileSaver","GeometryType","CIRCLE","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","RECTANGLE","Measure_exports","Interaction","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","getFormattedArea","sphere","getFormattedCircleArea","circle","PI","getFormattedLength","getCoordinates","c1","ol_proj","c2","getFormattedPoint","dragging","helpMsg","dom","appendChild","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","Overlay","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","Measure","common_exports","getDefaultDrawStyleFunction","getDefaultModifyStyleFunction","common","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","line","GeometryCollection","setGeometry","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","getGeometries","getFormattedAzimutRadius","Projection","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","getAzimut","rad","acos","sqrt","MeasureAzimut","FeatureHelper_exports","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","style_Circle","offsetY","font_size","optNumber","attrib","getNumber","getOpacityProperty","azimut","getRadiusLine","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","RegularShape","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","ol_color","assertBoolean","export","formatType","FormatType","exportGPX","exportKML","export_","opt_mimeType","mimeType","clones","writeOptions","rotation","panMapToFeature","opt_panDuration","panDuration","calculateExtent","intersectsExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent","animate","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","FeatureHelper","Rule_exports","Rule_classCallCheck","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","type_","listenerKeys","getExpression","setExpression","reset","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","Rule","rule_Date","Date_classCallCheck","_ngeoRuleRule","rule_Geometry","Geometry_classCallCheck","Geometry_possibleConstructorReturn","featureProperties","feature_","format_","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","Geometry_inherits","registerGeometryChange_","handleGeometryChange_","Geometry","Geometry_createClass","Select","Select_classCallCheck","Select_possibleConstructorReturn","choices_","Select_inherits","Select_createClass","selectedChoices","rule_Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoice","numericExpression","stringExpression","field","momentEnd","startValue","WMSTime","RuleHelper","WFSDescribeFeatureType_exports","xml","PARSERS_","readElement_","objectStack","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","Querent_classCallCheck","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","layerCapabilities","layerCapability","baseUrl","opt_cache","WMSCapabilities","WMTSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","wfsCount","tolerancePx","tolerance","xmlSerializer","getFeatureCommonOptions","featurePrefix","outputFormat","ol_obj","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","FEATURE_COUNT","projCode","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","CombinedDataSources","Querent","Helper_exports","Helper_classCallCheck","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Helper_createClass","Helper","datasource_Helper_exports","gmfEnumerateAttribute","ngeoDataSourcesHelper","datasource_Helper_classCallCheck","gmfEnumerateAttribute_","ngeoDataSourcesHelper_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","choice","datasource_Helper_createClass","datasource_Helper","datasource_OGC","OGC_classCallCheck","OGC_possibleConstructorReturn","_ngeoDatasourceOGC","gmfLayer_","OGC_inherits","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","treeCtrlsUnregister_","handleNgeoBackgroundLayerChange_","setDatasourceMap","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","meta","queryLayers","wmsLayers","childLayers","childLayer","ogcServerName","isSingleTile","wfsSupport","urlWfs","edge","vertex","dimensions_filters","identifierAttributeField","timeAttribute","stateWatcherUnregister","handleTreeCtrlStateChange_","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","_source$updateParams","Tile","layersList","hasFilter","dsLayer","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","popupComponent_exports","ngeoPopupTemplateUrl","preventDefault","popupComponent","Popup_exports","autoDestroy_","sce_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","Popup","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","save","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","MapQuerent_exports","ngeoQueryResult","MapQuerent_classCallCheck","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","pending","handleResult_","total","sources","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","unset","featuresByType","MapQuerent","btnComponent_exports","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","btnComponent","Controller_exports","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","decorate","handleActiveChange","handleDrawEnd","sketch","prop","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","draw_point","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","MeasureArea_exports","br","MeasureArea","area_exports","contMsg","measure_area","azimut_exports","measure_azimut","MeasureLength_exports","MeasureLength","length_exports","measure_length","draw_component_exports","draw_component","ModifyCircle_exports","handleDragEvent","handleDragEvent_","vertexFeature_","lastPixel_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","addFeature_","writeCircleGeometry_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","ol_coordinate","setGeometryCoordinates_","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","getCoordinateFromPixel","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","vertexSegments","ModifyCircle","ModifyRectangle_exports","handleDown_","handleDrag_","handleUp_","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","forEachFeatureAtPixel","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","Modify","deleteCondition","circleFeatures_","rectangleFeatures_","setState_","interactions","currentMap","handleFeaturesAdd_","handleFeaturesRemove_","getFeatureCollection_","isRectangle","interaction_Modify","Rotate_exports","keyPressListenerKey_","coordinate_","centerCoordinate_","centerFeatures_","handleKeyUp_","getCenterCoordinate_","centerFeature","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","keyCode","Rotate","Translate_exports","featureListenerKeys_","myFeatures_","vectorSource_","Translate","getTargetElement","cursor","getGeometryCenterPoint_","interaction_Translate","ToolActivate","toolContext","activePropertyName","ToolActivateMgr_exports","registerTool","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ToolActivateMgr","ruleComponent_exports","FeatureOverlay","datepickerComponent","ngeoRuleTemplateUrl","RuleController_","ngeoToolActivateMgr","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","ngeoToolActivateMgr_","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","drawnFeatures","menu_","selectedFeatures","modify_","rotate_","translate_","initializeInteractions_","modifyToolActivate","rotateToolActivate","translateToolActivate","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggleChoiceSelection","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","toolMgr","ruleFeature","cloneFeature","mapDiv","getViewport","assertElement","handleMapContextMenu_","handleTranslateEnd_","handleRotateEnd_","registerInteractions_","unregisterInteractions_","drawnFeature","getRuleGeometryType","removeMenu_","getEventPixel","Menu","handleMenuActionClick_","ruleComponent","filter_component_exports","ngeoFilterTemplateUrl","aRuleIsActive","FilterController_","ngeoMapQuerent","filter_component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourcesHelper","gmfSavedFilters","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","confirm","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","wmstime","getClosestValue_","dates","sliderOptions","timeValueList","getTimeValueList_","max","endDate","setFullYear","getFullYear","setMonth","getMonth","getDate","setSeconds","getSeconds","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","shareComponent_exports","ShareService","Location","gmfPermalinkShareTemplateUrl","enableEmail","shareComponent_ShareComponentController","ShareComponentController","gmfShareService","shareComponent_classCallCheck","gmfShareService_","shortLink","permalink_","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","shareComponent","permalink_module","Permalink","Snapping_exports","mapViewChangePromise_","ensureSnapInteractionsOnTop","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","requestDeferred","deactivateItem_","layertree_Controller","activateItem_","Snap","loadItemFeatures_","loadAllItems_","Snapping","map_component_exports","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","resizemap_exports","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","resizemap","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","scaleselector","map_module","src_map_component_exports","manageResize","gmfSnapping","ngeoFeatureOverlayMgr_","gmfSnapping_","src_map_component","mousepositionComponent_exports","gmfMapMousepositionTemplateUrl","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","mousepositionComponent","src_map_module","Csv_exports","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","startDownload","Csv","Config_exports","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","downloadCsv","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","changeEvent","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","arr","getBrowserLanguage","misc_extraModule","AutoProjection","debounce","sortableComponent","Time","mapQueryComponent_exports","clickEventKey_","pointerMoveEventKey_","handleMapClick_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","issueRequest_","getExtent_","padding","resultSource","reduce","or_","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","defaultBasemapArray","default_basemap","defaultBasemapLabel","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","AbstractAppController","MobileDraw_exports","minPoints_","minPoints","sketchPoints_","handleViewCenterChange_","getDirty","getDrawing","getValid","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","SimpleGeometry","clearDrawing","finishDrawing","getCenter_","overlaySource","MobileDraw","MeasureLengthMobile_exports","MeasureLengthMobile","lengthComponent_exports","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","drawInteraction","dirty","addPoint","finish","deactivate","lengthComponent","RasterService_exports","gmfRasterUrl","getRaster","Param","X","Y","handleGetRaster_","RasterService","MeasurePointMobile_exports","coordFormat","coordFormat_","dec","MeasurePointMobile","pointComponent_exports","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","gmfRaster_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","translate","getMeasure_","ctn","childEl","previousCtn","getElementsByClassName","LayerConfig","pointComponent","measure_module","navigation_module","navigation_component","mobile_exports","GeolocationEventType","getMobileMapFn","getMobileGeolocationOptionsFn","toggleTracking","assertObject","geolocation_","Geolocation","trackingOptions","enableHighAccuracy","autorotate","autorotateListener","untrack_","positionFeature_","positionFeatureStyle","accuracyFeature_","accuracyFeatureStyle","zoom_","follow_","viewChangedByMe_","getAccuracyGeometry","setPosition_","getTracking","currentPosition","getPosition","track_","setTracking","currentAlpha","addEventListener","handleRotate_","alpha","webkitCompassHeading","eventAlpha","radAlpha","easing","mobile","AbstractMobileController_exports","searchOverlayVisible","searchListeners","mobileGeolocationOptions","geolocationZoom","viewConfig","mapViewConfig","pixelRatio","mapPixelRatio","View","controls","mapControls","ScaleLine","Zoom","zoomInTipLabel","zoomOutTipLabel","control_Rotate","tipLabel","mapInteractions","ol_interaction","pinchRotate","navIsVisible","redirectUrl","toggleLeftNavVisibility","toggleRightNavVisibility","hideNav","hideSearchOverlay","leftNavIsVisible","rightNavIsVisible","openNavMenu","navElements","AbstractMobileController","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","epsg2056def","somerc","lib","proj4","mobile_Controller_exports","resolutions","elevationLayersConfig","searchCoordinatesProjections","raven_default","addPlugin","angular_default","install"],"mappings":"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","file":"mobile.ca6f04.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([286,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin, opt_customOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.component\n */\nimport googAsserts from 'goog/asserts.js';\nconst exports = angular.module('gmfMobileNav', []);\n\n\n/**\n * An \"gmf-mobile-nav\" directive defining the behavior of a tree-structured menu.\n *\n * The directive is to be placed on a `nav` element, with the following\n * structure:\n * <nav gmf-mobile-nav>\n *   <header>\n *     <a class=\"gmf-mobile-nav-go-back\" href=\"#\"></a>\n *   </header>\n *   <div class=\"gmf-mobile-nav-active gmf-mobile-nav-slide\">\n *     <ul>\n *       <li>\n *         <a href data-target=\"#devices\">Devices</a>\n *       </li>\n *       <li>\n *         <a href data-target=\"#vehicles\">Vehicles</a>\n *       </li>\n *     </ul>\n *   </div>\n *   <div id=\"devices\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Devices\">\n *     <ul>\n *       <li>Mobile Phones</li>\n *       <li>Televisions</li>\n *     </ul>\n *   </div>\n *   <div id=\"vehicles\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Vehicles\">\n *     <ul>\n *       <li>Cars</li>\n *       <li>Planes</li>\n *       <li>Bicycles</li>\n *     </ul>\n *   </div>\n * </nav>\n *\n * When an element slides in the directive changes the text in the header.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'gmfMobileNavController as navCtrl',\n    bindToController: true,\n    scope: true,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      navCtrl.init(element);\n    }\n  };\n};\n\nexports.directive('gmfMobileNav', exports.component_);\n\n\n/**\n* @constructor\n* @private\n* @ngInject\n* @ngdoc controller\n* @ngname gmfMobileNavController\n*/\nexports.Controller_ = function() {\n  /**\n   * Stack of slid-in items.\n   * @private\n   * @type {Array.<!jQuery>}\n   */\n  this.slid_ = [];\n\n  /**\n   * Currently active sliding box.\n   * @private\n   * @type {jQuery}\n   */\n  this.active_ = null;\n\n  /**\n   * The navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.header_ = null;\n\n  /**\n   * The back button in the navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.backButton_ = null;\n\n  /**\n   * Export the back function already bound to `this`. This makes sure that\n   * the function is called on the right context, when it is passed to an\n   * attribute in a template\n   * @export\n   */\n  this.back = this.back_.bind(this);\n};\n\nexports.controller('gmfMobileNavController', exports.Controller_);\n\n\n/**\n * Initialize the directive with the linked element.\n * @param {angular.JQLite} element Element.\n */\nexports.Controller_.prototype.init = function(element) {\n  const cls = exports.Controller_.ClassName_;\n  this.active_ = $(element.find(`.${cls.ACTIVE}.${cls.SLIDE}`));\n  this.header_ = $(element.find('> header'));\n  this.backButton_ = $(element.find(`header > .${cls.GO_BACK}`));\n\n  // watch for clicks on \"slide-in\" elements\n  element.find('[data-toggle=slide-in]').on('click', (evt) => {\n\n    const cls = exports.Controller_.ClassName_;\n\n    // the element to slide out is the div.slide parent\n    const slideOut = $(evt.currentTarget).parents(`.${cls.SLIDE}`);\n    googAsserts.assert(slideOut.length === 1);\n\n    // push the item to the selected stack\n    this.slid_.push(slideOut);\n\n    // slide the \"old\" element out\n    slideOut.addClass(cls.SLIDE_OUT).removeClass(cls.ACTIVE);\n\n    // element to slide in\n    const slideIn = $($(evt.currentTarget).attr('data-target'));\n    googAsserts.assert(slideIn.length === 1);\n\n    // slide the \"new\" element in\n    slideIn.addClass(cls.ACTIVE);\n\n    // update the navigation header\n    this.updateNavigationHeader_(slideIn, false);\n\n    this.active_ = slideIn;\n  });\n\n  // watch for clicks on the header \"go-back\" link\n  this.backButton_.click(this.back.bind(this));\n};\n\n\n/**\n * @param {!jQuery} active The currently active sliding box.\n * @param {boolean} back Whether to move back.\n * @private\n */\nexports.Controller_.prototype.updateNavigationHeader_ = function(\n  active, back) {\n  const cls = exports.Controller_.ClassName_;\n  this.header_.toggleClass(cls.BACK, back);\n\n  // remove any inactive nav\n  this.header_.find(`nav:not(.${cls.ACTIVE} +)`).remove();\n\n  // deactivate the currently active nav\n  this.header_.find(`nav.${cls.ACTIVE}`).removeClass(cls.ACTIVE)\n    .addClass(cls.SLIDE_OUT);\n\n  // show the back button when relevant\n  this.backButton_.toggleClass(cls.ACTIVE, this.slid_.length > 0);\n\n  // create a new nav\n  const nav = $('<nav>');\n  nav.append($('<span>', {\n    text: active.attr('data-header-title')\n  }));\n  this.header_.append(nav);\n\n  // Delay the activation of the new navigation so that the previous\n  // one is properly deactivated. This prevents weird animation\n  // effects.\n  window.setTimeout(() => {\n    // fix for safari: the following 3 lines force that the position\n    // of the newly inserted element is calculated.\n    // see http://stackoverflow.com/a/3485654/119937\n    nav.css('display', 'none');\n    nav.offset();\n    nav.css('display', '');\n\n    window.setTimeout(() => {\n      // fix: calling `position()` makes sure that the animation\n      // is always run\n      nav.position();\n      nav.addClass(exports.Controller_.ClassName_.ACTIVE);\n    }, 0);\n  }, 0);\n};\n\n\n/**\n * Return to the previous slide.\n * @private\n */\nexports.Controller_.prototype.back_ = function() {\n  if (this.slid_.length <= 0) {\n    return;\n  }\n\n  const cls = exports.Controller_.ClassName_;\n\n  // slide active item to the right\n  this.active_.removeClass(cls.ACTIVE);\n\n  // get the previously active item\n  const slideBack = this.slid_.pop();\n\n  // slide previous item to the right\n  slideBack.addClass(cls.ACTIVE).removeClass(cls.SLIDE_OUT);\n\n  // update the navigation header\n  this.updateNavigationHeader_(slideBack, true);\n\n  this.active_ = slideBack;\n};\n\n\n/**\n * Return to the previous slide if the given element is active.\n *\n * @param {Element} element The element to check.\n */\nexports.Controller_.prototype.backIfActive = function(element) {\n  if (this.active_ !== null && this.active_.is(element)) {\n    this.back_();\n  }\n};\n\n\n/**\n * CSS class names toggled by the controller.\n * @enum {string}\n * @private\n */\n\nexports.Controller_.ClassName_ = {\n  ACTIVE: 'gmf-mobile-nav-active',\n  BACK: 'gmf-mobile-nav-back',\n  GO_BACK: 'gmf-mobile-nav-go-back',\n  SLIDE: 'gmf-mobile-nav-slide',\n  SLIDE_OUT: 'gmf-mobile-nav-slide-out'\n};\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}\n * with an expression. When the value of the expression changes and becomes\n * true, the navigation returns to the previous slide, if the slide is\n * currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-authentication class=\"gmf-mobile-nav-slide\"\n *         gmf-mobile-nav-back=\"authCtrl.gmfUser.username !== null\">\n *      </gmf-authentication>\n *\n * If `mainCtrl.gmfUser.username` becomes true and the login-slide is currently\n * active, the navigation will go back to the last slide.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      scope.$watch(attrs['gmfMobileNavBack'], (newVal, oldVal) => {\n        if (newVal === true) {\n          navCtrl.backIfActive(element[0]);\n        }\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBack', exports.backDirective);\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}.\n * When the element is clicked, the navigation returns to the previous slide if\n * the slide is currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-themeselector\n *         gmf-mobile-nav-back-on-click\n *         gmf-themeselector-currenttheme=\"mainCtrl.theme\">\n *      </gmf-themeselector>\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backOnClickDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      element.on('click', () => {\n        navCtrl.backIfActive(element[0]);\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBackOnClick', exports.backOnClickDirective);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              dimensionsFilter\n            ]\n          );\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensions_filters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (let i = 0, ii = layersList.length; i < ii; i++) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layersList[i] === dataSource.name)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, gettextCatalog, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, gettextCatalog, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter, gettextCatalog) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), this.gettextCatalog_, {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    'change:dirty',\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:drawing',\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:valid',\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ = function() {\n  if (this.measure.getActive()) {\n    const view = this.map.getView();\n    this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n      view,\n      'propertychange',\n      this.ngeoDebounce_(\n        this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n      this);\n    this.getMeasure_();\n  } else if (this.mapViewPropertyChangeEventKey_) {\n    olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n    this.mapViewPropertyChangeEventKey_ = null;\n  }\n};\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.module\n */\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileMeasureModule', [\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.module\n */\nimport gmfMobileNavigationComponent from 'gmf/mobile/navigation/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileNavigationModule', [\n  gmfMobileNavigationComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.geolocation.mobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport * as olEasing from 'ol/easing.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  googAsserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', function(error) {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  }, this);\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    googAsserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractMobileController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfMobileMeasureModule from 'gmf/mobile/measure/module.js';\nimport gmfMobileNavigationModule from 'gmf/mobile/navigation/module.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Mobile application abstract controller.\n *\n * This file includes `goog.require`'s mobile components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.searchOverlayVisible = false;\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.searchListeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    open: function() {\n      this.searchOverlayVisible = true;\n    }.bind(this),\n    close: function() {\n      this.searchOverlayVisible = false;\n    }.bind(this)\n  });\n\n  const positionFeatureStyle = config.positionFeatureStyle || new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = config.accuracyFeatureStyle || new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: config.geolocationZoom,\n    autorotate: config.autorotate\n  };\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine(),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions:\n        config.mapInteractions ||\n        olInteraction.defaults({pinchRotate: true})\n  });\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  this.manageResize = true;\n  this.resizeTransition = 500;\n\n  // Close right nave on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.navIsVisible()) {\n      this.rightNavVisible = false;\n    }\n  });\n\n  /**\n   * @const {string}\n   * @export\n   */\n  this.redirectUrl = $injector.get('redirectUrl');\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\n\n/**\n * @export\n */\nexports.prototype.toggleLeftNavVisibility = function() {\n  this.leftNavVisible = !this.leftNavVisible;\n};\n\n\n/**\n * @export\n */\nexports.prototype.toggleRightNavVisibility = function() {\n  this.rightNavVisible = !this.rightNavVisible;\n};\n\n\n/**\n * Hide both navigation menus.\n * @export\n */\nexports.prototype.hideNav = function() {\n  this.leftNavVisible = this.rightNavVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if one of the navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.navIsVisible = function() {\n  return this.leftNavVisible || this.rightNavVisible;\n};\n\n\n/**\n * Hide search overlay.\n * @export\n */\nexports.prototype.hideSearchOverlay = function() {\n  this.searchOverlayVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if the left navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.leftNavIsVisible = function() {\n  return this.leftNavVisible;\n};\n\n\n/**\n * @return {boolean} Return true if the right navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.rightNavIsVisible = function() {\n  return this.rightNavVisible;\n};\n\n\n/**\n * Open the menu with corresponding to the data-target attribute value.\n * @param {string} target the data-target value.\n * @export\n */\nexports.prototype.openNavMenu = function(target) {\n  const navElements = document.getElementsByClassName('gmf-mobile-nav-button');\n  for (let i = 0; i < navElements.length; i++) {\n    const element = navElements[i];\n    if (element.dataset && element.dataset.target === target) {\n      element.click();\n    }\n  }\n};\n\n\nexports.module = angular.module('GmfAbstractMobileControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfMobileMeasureModule.name,\n  gmfMobileNavigationModule.name,\n  gmfQueryWindowComponent.name,\n  ngeoGeolocationMobile.name,\n]);\n\nexports.module.controller('AbstractMobileController', exports);\n\nexports.module.value('isMobile', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'tolerance': 10\n});\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.mobile.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractMobileController from 'gmf/controllers/AbstractMobileController.js';\nimport 'gmf/controllers/mobile.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractMobileController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractMobileController.call(this, {\n    autorotate: false,\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = [\n    {name: 'aster', unit: 'm'},\n    {name: 'srtm', unit: 'm'}\n  ];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractMobileController);\n\nexports.module = angular.module('Appmobile', [\n  appBase.module.name,\n  gmfControllersAbstractMobileController.module.name,\n]);\n\nexports.module.controller('MobileController', exports);\n\nexport default exports;\n","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}